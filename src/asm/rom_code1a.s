    .text
un_warn_screen_show_check:
                ldq     warn_screen_check_str, r4
                lda     0x52455320, r8
                lda     0x4E4C2053, r9
                lda     0x4E204544, r10
                lda     0x20514555, r11
                cmpobne r4, r8, un_warn_screen_show_check_fails
                cmpobne r5, r9, un_warn_screen_show_check_fails
                cmpobne r6, r10, un_warn_screen_show_check_fails
                cmpobne r7, r11, un_warn_screen_show_check_fails
                subo    1, 0, g0
                b       un_warn_screen_show_check_return
# ---------------------------------------------------------------------------
un_warn_screen_show_check_fails:        # CODE XREF: ROM:00063718↑j
                mov     0, g0
un_warn_screen_show_check_return:       # CODE XREF: ROM:0006372C↑j
                ret
# =============== S U B R O U T I N E =======================================
color_disp_mes:                         # CODE XREF: ROM:00061AD0↑p
                mov     g0, r3          # Number of characters in string
                mov     g1, r4          # Number of lines
                mov     g2, r11         # Color
                lda     0xFFFF, r15
                and     r15, r11, r11
                lda     0x7F, r5
                and     r5, g9, r9
                lda     0xFFFFFF80, r13
                and     r13, g9, r10
                shlo    7, 1, r6
loc_63768:                              # CODE XREF: color_disp_mes+60↓j
                mov     g0, r3
loc_6376C:                              # CODE XREF: color_disp_mes+4C↓j
                ldos    (g9), r15       # Get the first character at display location
                and     r5, r15, r15
                or      r15, r11, r15
                stos    r15, (g9)
                addo    2, g9, g9
                cmpdeci 1, r3, r3
                bl      loc_6376C
                and     r13, g9, g9
                addo    r6, g9, g9
                addo    r9, g9, g9
                cmpdeci 1, r4, r4
                bl      loc_63768
                ret
# End of function color_disp_mes
# =============== S U B R O U T I N E =======================================
sub_637A0:                              # CODE XREF: GAME_ASSIGNMENTS+24↑p
                mov     g0, r3          # g0 = GAME_ASSIGNMENTS_LIST
                mov     g1, r4          # g1 = 17; GAME_ASSIGNMENTS_LIST item count
loc_637A8:                              # CODE XREF: sub_637A0+20↓j
                ld      4(r3), r5       # GAME_ASSIGNMENT_ITEMS
                ld      (r5), g9        # ga_EXIT
                lda     0x14(r5), g0    # GAME_ASSIGNMENT_ITEMS+0x14
                call    print_mes
                addo    8, r3, r3
                cmpdeci 0, r4, r4
                bl      loc_637A8
                ret
# End of function sub_637A0
# =============== S U B R O U T I N E =======================================
game_assign_bk_ram_thing:               # CODE XREF: GAME_ASSIGNMENTS+8C↑p
                mov     g0, r3
                mov     g1, r4
loc_637D0:                              # CODE XREF: game_assign_bk_ram_thing+9C↓j
                ld      4(r3), r5       # r5 = Item Offset
                ld      4(r5), g9       # r9 = Option Type (On/Off) (Easy/Normal/Hard)
                ld      12(r5), r6      # r6 = Item Subroutine Flags
                ld      8(r5), r7       # r7 = BACKUP_RAM_TO_RAM offset
                bbs     10, r6, loc_6385C
                and     3, r6, r15
                ld      BK_RAM_read_offsets[r15*4], r14
                bx      (r14)
# ---------------------------------------------------------------------------
BK_RAM_read_offsets:                    # DATA XREF: game_assign_bk_ram_thing+20↑r
                .long load_BK_RAM_byte
                .long ld_BK_RAM_short
                .long ld_BK_RAM_long
# ---------------------------------------------------------------------------
load_BK_RAM_byte:                       # DATA XREF: game_assign_bk_ram_thing:BK_RAM_read_offsets↑o
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldob    (r15)[r7], r8   # when r7 = 3340, BACKUP_RAM_TO_RAM+0x3340
                b       loc_6382C
# ---------------------------------------------------------------------------
ld_BK_RAM_short:                        # DATA XREF: game_assign_bk_ram_thing+30↑o
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldos    (r15)[r7*1], r8
                b       loc_6382C
# ---------------------------------------------------------------------------
ld_BK_RAM_long:                         # DATA XREF: game_assign_bk_ram_thing+34↑o
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      (r15)[r7*1], r8
loc_6382C:                              # CODE XREF: game_assign_bk_ram_thing+44↑j
                bbc     2, r6, loc_63840
                shro    3, r6, r9
                and     0x1F, r9, r9
                shro    r9, r8, r8
                and     1, r8, r8
loc_63840:                              # CODE XREF: game_assign_bk_ram_thing:loc_6382C↑j
                bbs     8, r6, loc_63850
                mov     r8, g0
                call    print_dec       # Print g0 as decimal
                b       loc_6385C
# ---------------------------------------------------------------------------
loc_63850:                              # CODE XREF: game_assign_bk_ram_thing:loc_63840↑j
                ld      0x10(r5), r9
                ld      (r9)[r8*4], g0
                call    print_mes
loc_6385C:                              # CODE XREF: game_assign_bk_ram_thing+18↑j
                addo    8, r3, r3
                cmpdeci 0, r4, r4
                bl      loc_637D0
                ret
# End of function game_assign_bk_ram_thing
# ---------------------------------------------------------------------------
loc_6386C:                              # CODE XREF: ROM:0005F74C↑p
                mov     g0, r3
                mov     g1, r4
                lda     0xFF, r5
                and     r5, r3, r5
                bbs     0x10, r3, loc_63898
                bbs     8, r3, loc_638A8
                bbs     9, r3, loc_638DC
                bbs     0xA, r3, loc_6389C
                bbs     0x11, r3, loc_6390C
                bbs     0x12, r3, loc_63928
                bbs     0x13, r3, loc_6396C
loc_63898:                              # CODE XREF: ROM:0006387C↑j
                b       loc_639E4       # return
# ---------------------------------------------------------------------------
loc_6389C:                              # CODE XREF: ROM:00063888↑j
                ld      (r4), g0
                call    print_dec       # Print g0 as decimal
                b       loc_639E4       # return
# ---------------------------------------------------------------------------
loc_638A8:                              # CODE XREF: ROM:00063880↑j
                ldl     (r4), g0
                mov     0, g1
                cmpobne 0, g1, loc_638C0
                lda     0x784CE000, r15
                cmpoble g0, r15, loc_638C8
loc_638C0:                              # CODE XREF: ROM:000638B0↑j
                mov     0, g1
                mov     0, g0
loc_638C8:                              # CODE XREF: ROM:000638BC↑j
                bbs     4, r3, loc_638D4
                call    print_book_time_s
                b       loc_639E4       # return
# ---------------------------------------------------------------------------
loc_638D4:                              # CODE XREF: ROM:loc_638C8↑j
                call    print_book_time2_s
                b       loc_639E4       # return
# ---------------------------------------------------------------------------
loc_638DC:                              # CODE XREF: ROM:00063884↑j
                ldl     (r4), g0
                cmpobne 0, g1, loc_638F0
                lda     0x784CE000, r15
                cmpoble g0, r15, loc_638F8
loc_638F0:                              # CODE XREF: ROM:000638E0↑j
                mov     0, g1
                mov     0, g0
loc_638F8:                              # CODE XREF: ROM:000638EC↑j
                bbs     4, r3, loc_63904
                call    print_book_time
                b       loc_639E4       # return
# ---------------------------------------------------------------------------
loc_63904:                              # CODE XREF: ROM:loc_638F8↑j
                call    print_book_time2
                b       loc_639E4       # return
# ---------------------------------------------------------------------------
loc_6390C:                              # CODE XREF: ROM:0006388C↑j
                ld      (r4), r5
                ld      4(r4), r6
                ld      (r5), r5
                ld      (r6), r6
                addo    r5, r6, g0
                call    print_dec       # Print g0 as decimal
                b       loc_639E4       # return
# ---------------------------------------------------------------------------
loc_63928:                              # CODE XREF: ROM:00063890↑j
                ld      (r4), r5
                ld      4(r4), r6
                ldl     (r6), r8
                ldl     (r5), r10
                cvtilr  r8, r8
                cvtilr  r10, r10
                lda     0x3F000000, r12
                cmpr    r12, r10
                bge     loc_6399C
                divr    r10, r8, r8
                lda     0x447A0000, r9
                mulr    r9, r8, r8
                cvtri   r8, g0
                call    print_dec       # Print g0 as decimal
                b       loc_639E4       # return
# ---------------------------------------------------------------------------
loc_6396C:                              # CODE XREF: ROM:00063894↑j
                ld      (r4), r5
                ld      4(r4), r6
                ld      (r5), r7
                ldl     (r6), r8
                bbc     0x1F, r9, loc_63988
                mov     0, r8
                mov     r8, r9
loc_63988:                              # CODE XREF: ROM:0006397C↑j
                cmpibe  0, r7, loc_639D0
                ediv    r7, r8, r8
                mov     r9, g0
                call    print_book_time_s
                b       loc_639E4       # return
# ---------------------------------------------------------------------------
loc_6399C:                              # CODE XREF: ROM:0006394C↑j
                balx    debug_disp_mes, r14
# ---------------------------------------------------------------------------
                .asciz "  ----"
                .byte 0
# ---------------------------------------------------------------------------
                b       loc_639E4       # return
# ---------------------------------------------------------------------------
                balx    debug_disp_mes, r14
# ---------------------------------------------------------------------------
aDHMS:          .asciz " -----D --H --M --S"
# ---------------------------------------------------------------------------
                b       loc_639E4       # return
# ---------------------------------------------------------------------------
loc_639D0:                              # CODE XREF: ROM:loc_63988↑j
                balx    debug_disp_mes, r14
# ---------------------------------------------------------------------------
aMS_2:          .asciz "    --M --S"
# ---------------------------------------------------------------------------
loc_639E4:                              # CODE XREF: ROM:loc_63898↑j
                ret                     # return
# ---------------------------------------------------------------------------
credits_required_array:.byte    0       # DATA XREF: ROM:000630C0↑r
                .byte 16
                .byte 32
                .byte 48
                .byte 64
                .byte 17
                .byte 65
                .byte 34
                .byte 51
                .byte 68
                .byte 85
                .byte 102
                .byte 6
                .byte 22
                .byte 119
                .byte 39
                .byte 136
                .byte 153
                .byte 170
                .byte 74
                .byte 255
                .byte 27
                .byte 204
                .byte 44
                .byte 221
                .byte 93
                .byte 238
                .byte 0
off_63A04:      .long byte_63A98        # DATA XREF: ROM:000630E4↑r
                .long byte_63A9A
                .long byte_63A9C
                .long byte_63A9E
                .long byte_63AA0
                .long byte_63AA2
                .long byte_63AA4
                .long byte_63AA6
                .long byte_63AA9
                .long byte_63AAB
                .long byte_63AAD
                .long byte_63AB2
                .long byte_63AB5
                .long byte_63AB9
                .long byte_63ABF
                .long byte_63AC1
byte_63A44:     .byte 0                 # DATA XREF: sub_5E710+10↑r
                .byte 1
                .byte 2
                .byte 3
                .byte 4
                .byte 4
                .byte 4
                .byte 4
                .byte 4
                .byte 4
                .byte 10
                .byte 11
                .byte 11
                .byte 11
                .byte 14
                .byte 14
                .byte 16
                .byte 17
                .byte 18
                .byte 18
                .byte 20
                .byte 20
                .byte 22
                .byte 22
                .byte 24
                .byte 24
                .byte 26
byte_63A5F:     .byte 26                # DATA XREF: ROM:0005E35C↑r
                .byte 0
                .byte 1
                .byte 2
                .byte 3
                .byte 4
                .byte 4
                .byte 4
                .byte 4
                .byte 4
                .byte 4
                .byte 10
                .byte 11
                .byte 11
                .byte 11
                .byte 14
                .byte 14
                .byte 16
                .byte 17
                .byte 18
                .byte 18
                .byte 20
                .byte 20
                .byte 22
                .byte 22
                .byte 24
                .byte 24
byte_63A7A:     .byte 1                 # DATA XREF: ROM:0005E388↑r
                .byte 2
                .byte 3
                .byte 4
                .byte 10
                .byte 10
                .byte 10
                .byte 10
                .byte 10
                .byte 10
                .byte 11
                .byte 14
                .byte 14
                .byte 14
                .byte 16
                .byte 16
                .byte 17
                .byte 18
                .byte 20
                .byte 20
                .byte 22
                .byte 22
                .byte 24
                .byte 24
                .byte 26
                .byte 26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_63A98:     .byte 0x11              # DATA XREF: ROM:off_63A04↑o
                .byte 0
byte_63A9A:     .byte 0x12              # DATA XREF: ROM:00063A08↑o
                .byte 0
byte_63A9C:     .byte 0x13              # DATA XREF: ROM:00063A0C↑o
                .byte 0
byte_63A9E:     .byte 0x14              # DATA XREF: ROM:00063A10↑o
                .byte 0
byte_63AA0:     .byte 0x15              # DATA XREF: ROM:00063A14↑o
                .byte 0
byte_63AA2:     .byte 0x16              # DATA XREF: ROM:00063A18↑o
                .byte 0
byte_63AA4:     .byte 0x21              # DATA XREF: ROM:00063A1C↑o
                .byte 0
byte_63AA6:     .byte 0x11              # DATA XREF: ROM:00063A20↑o
                .byte 0x23
                .byte 0
byte_63AA9:     .byte 0x31              # DATA XREF: ROM:00063A24↑o
                .byte 0
byte_63AAB:     .byte 0x41              # DATA XREF: ROM:00063A28↑o
                .byte 0
byte_63AAD:     .byte 0x11, 0x22, 0x33  # DATA XREF: ROM:00063A2C↑o
                .byte 0x45, 0
byte_63AB2:     .byte 0x31              # DATA XREF: ROM:00063A30↑o
                .byte 0x52
                .byte 0
byte_63AB5:     .byte 0x21              # DATA XREF: ROM:00063A34↑o
                .byte 0x42
                .byte 0x53
                .byte 0
byte_63AB9:     .byte 0x11              # DATA XREF: ROM:00063A38↑o
                .byte 0x22
                .byte 0x33
                .byte 0x44
                .byte 0x56
                .byte 0
byte_63ABF:     .byte 0xFF              # DATA XREF: ROM:00063A3C↑o
                .byte 0
byte_63AC1:     .byte 0x51              # DATA XREF: ROM:00063A40↑o
                .byte 0
                .byte 0
# =============== S U B R O U T I N E =======================================
sub_63AC4:                              # CODE XREF: camera_init+CB0↑p
                ld      VECTER_X, r15
                st      r15, 0x5019AC
                call    rob_kage_set_matrix # "Shadow" (kage)
                mov     0, g0
                call    sub_63B10
                ret
# End of function sub_63AC4
# =============== S U B R O U T I N E =======================================
# "Shadow" (kage)
rob_kage_set_matrix:                    # CODE XREF: sub_63AC4+10↑p
                ldis    0x5019AC, r3 # Label from Fighting Vipers source
                ldis    0x5019AE, r4
                lda     0x39807373, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ret
# End of function rob_kage_set_matrix
# =============== S U B R O U T I N E =======================================
# return
sub_63B0C:                              # CODE XREF: camera_init+D18↑p
                ret
# End of function sub_63B0C
# =============== S U B R O U T I N E =======================================
sub_63B10:                              # CODE XREF: sub_63AC4+18↑p
                ld      stage_x, r3
                ldob    stage_num, r4
                ld      stage_floats[r4*4], r13
                mulr    r13, r3, r3
                lda     0x3FA66666, r4
                subr    r4, r3, g3
                lda     0x3E4CCCCD, r4
                addr    r4, r3, g4
                ld      0x501990, g5
                ld      0x501994, g6
                ld      fa_rob0, g7
                call    rob_kage_set_flag_sub # "Shadow" (kage)
                ld      fa_rob1, g7
                call    rob_kage_set_flag_sub # "Shadow" (kage)
                ret
# End of function sub_63B10
# =============== S U B R O U T I N E =======================================
# "Shadow" (kage)
# g7 = P1_PARTS_ADD or P2_PARTS_ADD
rob_kage_set_flag_sub:                  # CODE XREF: sub_63B10+4C↑p
                mov     0, r10          # Label from Fighting Vipers source
                mov     0, r11
                ld      0x0(g7), r15
                bbc     7, r15, loc_63BD0
                ldob    4(g7), r3
                ld      frame_counter, r4
                xor     r3, r4, r5
                bbs     0, r5, loc_63BE0 # return
                ldob    stage_num, r12
                ldob    byte_64938[r12], r12 # Unused here
                lda     0x3A807575, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                ld      (g11)[g12*1], r11
loc_63BD0:                              # CODE XREF: rob_kage_set_flag_sub+C↑j
                st      r10, 0xAA8(g7)[g0*4]
                st      r11, 0xAB8(g7)[g0*4]
loc_63BE0:                              # CODE XREF: rob_kage_set_flag_sub+20↑j
                ret                     # return
# End of function rob_kage_set_flag_sub
# =============== S U B R O U T I N E =======================================
# "Shadow" (kage)
# g7 = P1_PARTS_ADD or P2_PARTS_ADD
rob_kage_disp_inside:                   # CODE XREF: camera_init+1170↑p
                ld      0xAA8(g7), g4   # Label from Fighting Vipers source (code differs slightly)
                mov     1, g5
                ld      stage_soko, r13
                cmpobne 0, r13, loc_63C08
                lda     0xFFFF, g4
                mov     0, r15
                st      r15, 0xAB8(g7)
loc_63C08:                              # CODE XREF: rob_kage_disp_inside+10↑j
                call    rob_kage_disp_test # "Shadow" (kage)
                call    tobi_kage_set_flag # "Projectile" (tobi)
                call    tobi_kage_disp  # "Projectile" (tobi)
                ret
# End of function rob_kage_disp_inside
# =============== S U B R O U T I N E =======================================
# "Shadow" (kage)
# g7 = P1_PARTS_ADD or P2_PARTS_ADD
rob_kage_disp_outside:                  # CODE XREF: rob_low_disp+88↑p
                ldob    stage_num, r12  # Label from Fighting Vipers source (code differs slightly)
                shlo    8, r12, r13
                ld      stage_data(r13), r3
                bbs     0x1C, r3, loc_63C3C
                ld      0xAB8(g7), g4
                mov     2, g5
                call    rob_kage_disp_test # "Shadow" (kage)
loc_63C3C:                              # CODE XREF: rob_kage_disp_outside+14↑j
                ret
# End of function rob_kage_disp_outside
# =============== S U B R O U T I N E =======================================
# "Shadow" (kage)
# g7 = P1_PARTS_ADD or P2_PARTS_ADD
rob_kage_disp_test:                     # CODE XREF: rob_kage_disp_inside:loc_63C08↑p
                mov     2, g0           # Label from official source
                call    set_mmode
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x22004444, r15
                st      r15, (g11)[g12*1]
                mov     0, r15
                st      r15, (g11)[g12*1]
                mov     0x10, r9
                ldob    0x1B0(g7), r3
                ld      char_shadow_offsets[r3*4], r10
loc_63C78:                              # CODE XREF: rob_kage_disp_test+114↓j
                ld      [r10*1], r4
                ld      8[r10*1], r5
                ldt     12[r10*1], g0
                cmpobne 9, r4, loc_63CA0
                ld      0x1A4(g7), r11
                bbc     0xE, r11, loc_63CA0
                bbs     0x10, r11, loc_63D4C
loc_63CA0:                              # CODE XREF: rob_kage_disp_test+50↑j
                bbc     r4, g4, loc_63D4C
                ldob    4(g7), r11
                lda     0x3A007474, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mulo    0xC, r4, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                ld      4[r10*1], r3
                ld      0x2068(g7), r6
                cmpo    1, r6
                bne     loc_63D34
                cmpo    0, r4
                mov     0, r3
                bne     loc_63D34
                ldt     0x2074(g7), r4
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x195, r3
loc_63D34:                              # CODE XREF: rob_kage_disp_test+C0↑j
                mov     0, g1
                lda     (r3), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_63D4C:                              # CODE XREF: rob_kage_disp_test+5C↑j
                addo    0x18, r10, r10
                cmpdeco 1, r9, r9
                bl      loc_63C78
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x22004444, r15
                st      r15, (g11)[g12*1]
                mov     0, r15
                st      r15, (g11)[g12*1]
                ldos    (r10), r6
                cmpobe  0, r6, loc_63EE0
                ldos    0x78A(g7), r4
                cmpobe  0, r4, loc_63EE0
                ld      0x0(g7), r15
                bbs     0x1B, r15, loc_63E68
                ld      0xF00(g7), r3
                addo    0x1F, 0x15, r14
                mulo    r14, r3, r3
                lda     0xF34(g7)[r3], r3
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                ldos    0x788(g7), r5
                bbc     r5, g4, loc_63EE0
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x5800B0B, r15
                st      r15, (g11)[g12*1]
                lda     (r3), r15
                ldt     0x0(r15), r12
                stt     r12, (g11)[g12*1]
                ldt     0xC(r15), r12
                stt     r12, (g11)[g12*1]
                ldt     0x18(r15), r12
                stt     r12, (g11)[g12*1]
                ldt     0x24(r15), r12
                stt     r12, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x23004646, r15
                st      r15, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                mov     0, g1
                lda     (r6), g0
                call    set_obj
                b       loc_63EE0
# ---------------------------------------------------------------------------
loc_63E68:                              # CODE XREF: rob_kage_disp_test+158↑j
                ldos    2(r10), r6
                ldos    4(r10), r7
                cmpobe  0, r6, loc_63EE0
                ldos    0x7A2(g7), r4
                cmpobe  0, r4, loc_63EE0
                ldos    0x7A0(g7), r5
                bbc     r5, g4, loc_63EE0
                lda     0x1B803737, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r5, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x23004646, r15
                st      r15, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                ld      0x0(g7), r15
                bbc     6, r15, loc_63ED4
                mov     r7, r6
loc_63ED4:                              # CODE XREF: rob_kage_disp_test+28C↑j
                mov     0, g1
                lda     (r6), g0
                call    set_obj
loc_63EE0:                              # CODE XREF: rob_kage_disp_test+148↑j
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                mov     1, g0
                call    set_mmode
# End of function rob_kage_disp_test
                ret
# =============== S U B R O U T I N E =======================================
# "Projectile" (tobi)
# "Shadow" (kage)
tobi_kage_set_flag:                     # CODE XREF: rob_kage_disp_inside+28↑p
                ld      0x501990, g5 # Label from official source
                ld      0x501994, g6
                ld      stage_x, r3
                ldob    stage_num, r4
                ld      stage_floats[r4*4], r13
                mulr    r13, r3, r3
                lda     0x3F000000, r4
                subr    r4, r3, g3
                lda     0x3ECCCCCD, r4
                addr    r4, r3, g4
                mov     0, r10
                mov     0, r11
                mov     0, r12
                ld      mod_fa_tobi, g1 # Projectile (tobi = flight)
                lda     0x200(g1), g1
loc_63F54:                              # CODE XREF: tobi_kage_set_flag+10C↓j
                ld      0x0(g1), r15
                bbc     0x1F, r15, loc_63FFC
                ld      0x0(g1), r15
                bbs     6, r15, loc_63FFC
                ldt     0x44(g1), r4
                mulr    r5, g5, r3
                addr    r3, r4, r4
                mulr    r5, g6, r3
                addr    r3, r6, r6
                ldob    stage_num, r15
                ldob    byte_64938[r15], r15
                cmpobe  0, r15, loc_63FC8 # Branch if r15 = 0
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0x40000000, r14
                lda     0xD001A1A, r15
                st      r15, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                divr    r14, r4, r4
                b       loc_63FD8
# ---------------------------------------------------------------------------
loc_63FC8:                              # CODE XREF: tobi_kage_set_flag+90↑j
                clrbit  0x1F, r4, r4
                clrbit  0x1F, r6, r6
                cmpibl  r6, r4, loc_63FD8
                mov     r6, r4
loc_63FD8:                              # CODE XREF: tobi_kage_set_flag+CC↑j
                cmpibg  0, r5, loc_63FEC
                cmpibg  r4, g3, loc_63FEC
                ld      0x0(g1), r15
                clrbit  0xC, r15, r15
                st      r15, 0x0(g1)
loc_63FEC:                              # CODE XREF: tobi_kage_set_flag:loc_63FD8↑j
                cmpibl  r4, g4, loc_63FFC
                ld      0x0(g1), r15
                setbit  0xC, r15, r15
                st      r15, 0x0(g1)
loc_63FFC:                              # CODE XREF: tobi_kage_set_flag+60↑j
                lda     0x100(g1), g1
                cmpinco 0x1D, r12, r12
                bne     loc_63F54
                ret
# End of function tobi_kage_set_flag
# =============== S U B R O U T I N E =======================================
# "Projectile" (tobi)
# "Shadow" (kage)
tobi_kage_disp:                         # CODE XREF: rob_kage_disp_inside+2C↑p
                lda     0x800101, r15 # Label from official source
                st      r15, (g11)[g12*1]
                lda     0x22004444, r15
                st      r15, (g11)[g12*1]
                mov     0, r15
                st      r15, (g11)[g12*1]
                ld      mod_fa_tobi, r3 # Projectile (tobi = flight)
                lda     0x200(r3), r3
                mov     0x1E, r7
loc_6403C:                              # CODE XREF: tobi_kage_disp+1A0↓j
                ld      0x0(r3), r15
                bbc     0x1F, r15, loc_641A4
                ld      0x0(r3), r15
                bbs     6, r15, loc_641A4
                ld      0x0(r3), r15
                bbs     9, r15, loc_641A4
                mov     1, g5
                ld      0x0(r3), r15
                bbc     0xC, r15, loc_64064
                mov     2, g5
loc_64064:                              # CODE XREF: tobi_kage_disp+50↑j
                ldt     0x44(r3), r4
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x20804141, r15
                st      r15, (g11)[g12*1]
                lda     0x23004646, r15
                st      r15, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                lda     0x40000000, r4
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                lda     0x736, r11
                ld      0x24(r3), r15
                bbc     0x13, r15, loc_6418C
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_64134
                st      r13, 0x0(r15)
                b       loc_64140
# ---------------------------------------------------------------------------
loc_64134:                              # CODE XREF: tobi_kage_disp+11C↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_64140:                              # CODE XREF: tobi_kage_disp+124↑j
                mov     0, g1
                lda     (r11), g0
                call    set_obj
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                b       loc_64198
# ---------------------------------------------------------------------------
loc_6418C:                              # CODE XREF: tobi_kage_disp+DC↑j
                mov     0, g1
                lda     (r11), g0
                call    set_obj
loc_64198:                              # CODE XREF: tobi_kage_disp+17C↑j
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_641A4:                              # CODE XREF: tobi_kage_disp+34↑j
                lda     0x100(r3), r3
                cmpdeco 1, r7, r7
                bl      loc_6403C
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# End of function tobi_kage_disp
# =============== S U B R O U T I N E =======================================
mirror_rob_disp:                        # CODE XREF: camera_init+11EC↑p
                lda     0x800101, r15   # Label from official source
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r4
                lda     0xBF800000, r5
                mov     r4, r6
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ldob    POLYGON_DISP, r3
                ld      fa_camera, r4
                bbs     1, r3, loc_6423C
                ld      0x0(r4), r15
                bbc     1, r15, loc_6423C
                ld      fa_rob0, g7
                ld      POLYGON, r15
                call    rob_disp_mir
                ld      POLYGON, r14
                subo    r15, r14, r15
                stos    r15, _1P_MIRROR
loc_6423C:                              # CODE XREF: mirror_rob_disp+48↑j
                ldob    0xDE(g13), r3
                bbc     0, r3, loc_64280
                ldob    POLYGON_DISP, r3
                bbs     2, r3, loc_64280
                ld      0x0(r4), r15
                bbc     2, r15, loc_64280
                ld      fa_rob1, g7
                ld      POLYGON, r15
                call    rob_disp_mir
                ld      POLYGON, r14
                subo    r15, r14, r15
                stos    r15, _2P_MIRROR
loc_64280:                              # CODE XREF: mirror_rob_disp+80↑j
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# End of function mirror_rob_disp
# =============== S U B R O U T I N E =======================================
rob_disp_mir:                           # CODE XREF: ROM:000210FC↑p
                mov     0, r7           # Label from official source
                ld      0x0(g7), r15
                bbc     7, r15, loc_64444
                ldt     0x1F4(g7), g0
                call    mirror_area_check_group
                mov     0, r8
                mov     0x10, r9
                lda     0x40(g7), r11
loc_642B0:                              # CODE XREF: rob_disp_mir+1AC↓j
                lda     (r8)[r8*2], r3
                ldt     0x1F4(g7)[r3*4], g0
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                setbit  r8, r7, r7
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1B803737, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r8, r15
                st      r15, (g11)[g12*1]
                ld      0x2068(g7), r4
                cmpo    1, r4
                bne     loc_64344
                cmpo    0, r8
                bne     loc_64428
                ldob    0x1B1(g7), r4
                remo    0x1A, r4, r4
                cmpo    7, r4
                lda     0x2088(g7), g3
                ldt     0x24(g3), g0
                be      loc_6433C
                call    spin_attack_cnt_nml_dsp
                b       loc_64428
# ---------------------------------------------------------------------------
loc_6433C:                              # CODE XREF: rob_disp_mir+A0↑j
                call    spin_attack_cnt_esp_dsp
                b       loc_64428
# ---------------------------------------------------------------------------
loc_64344:                              # CODE XREF: rob_disp_mir+7C↑j
                ldob    4(g7), g1
                ld      (r11)[r8*4], r3
                cmpobne 1, r8, loc_6435C
                ld      0x70C(g7), r15
                bbc     0x17, r15, loc_6435C
                mov     0, r3
loc_6435C:                              # CODE XREF: rob_disp_mir+BC↑j
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                mov     0, g1
                lda     (r3), g0
                call    set_obj
                ldos    0x7A2(g7), r4
                cmpobe  0, r4, loc_64418
                lda     0x788(g7), r6
                ld      0x0(g7), r15
                bbc     0x1B, r15, loc_64398
                lda     0x7A0(g7), r6
loc_64398:                              # CODE XREF: rob_disp_mir+100↑j
                ldos    0x0(r6), r3
                cmpobne r8, r3, loc_64418
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                ldt     4(r6), r12
                stt     r12, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                ldis    0x12(r6), r15
                st      r15, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                ldis    0x10(r6), r15
                st      r15, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                ldis    0x14(r6), r15
                st      r15, (g11)[g12*1]
                ldos    2(r6), r12
                mov     0, g1
                lda     (r12), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_64418:                              # CODE XREF: rob_disp_mir+F4↑j
                ld      dword_64450[r8*4], r12
                cmpobe  0, r12, loc_64428
                balx    (r12), r6
loc_64428:                              # CODE XREF: rob_disp_mir+84↑j
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                addi    1, r8, r8
                cmpdeco 1, r9, r9
                bl      loc_642B0
                call    kosi_nobi_put
loc_64444:                              # CODE XREF: rob_disp_mir+8↑j
                stos    r7, 0x6F2(g7)
                ret
# End of function rob_disp_mir
# ---------------------------------------------------------------------------
                ret
# ---------------------------------------------------------------------------
dword_64450:    .long 0                 # DATA XREF: rob_disp_mir:loc_64418↑r
                .long mir_rob_plus_mune
                .long mir_rob_plus_kao
                .long 0
                .long 0
                .long mir_rob_plus_te
                .long 0
                .long 0
                .long mir_rob_plus_te
                .long mir_rob_plus_kosi
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
# ---------------------------------------------------------------------------
mir_rob_plus_mune:                      # DATA XREF: ROM:00064454↑o
                ldob    0x1B1(g7), r4   # Label from official source
                cmpobne 4, r4, loc_6449C # If not Fang, branch
                call    efc_fang_gun_disp
loc_6449C:                              # CODE XREF: ROM:00064494↑j
                bx      (r6)
# ---------------------------------------------------------------------------
mir_rob_plus_kao:                       # DATA XREF: ROM:00064458↑o
                ldl     0x2050(g7), r4  # Label from official source
                ld      0x0(g7), r15
                bbs     0x14, r15, loc_644E4
                ld      0x2058(g7), r12
                lda     (r12), g2
                mov     0, g1
                lda     (r4), g0
                call    set_obj_tpd
                ld      0x205C(g7), r12
                lda     (r12), g2
                mov     0, g1
                lda     (r5), g0
                call    set_obj_tpd
                b       loc_644FC
# ---------------------------------------------------------------------------
loc_644E4:                              # CODE XREF: ROM:000644AC↑j
                mov     0, g1
                lda     (r4), g0
                call    set_obj
                mov     0, g1
                lda     (r5), g0
                call    set_obj
loc_644FC:                              # CODE XREF: ROM:000644E0↑j
                call    efc_medama_put
                bx      (r6)
# ---------------------------------------------------------------------------
mir_rob_plus_kosi:                      # DATA XREF: ROM:00064474↑o
                ldob    0x1B0(g7), r4   # Label from official source
                cmpobe  1, r4, loc_64514 # Branch if selected player is Tails
                cmpobe  27, r4, loc_6451C # Branch if selected player is mirror Tails
                b       loc_64520
# ---------------------------------------------------------------------------
loc_64514:                              # CODE XREF: ROM:00064508↑j
                call    tails1_tail_disp
                b       loc_64520
# ---------------------------------------------------------------------------
loc_6451C:                              # CODE XREF: ROM:0006450C↑j
                call    tails2_tail_disp
loc_64520:                              # CODE XREF: ROM:00064510↑j
                bx      (r6)
# ---------------------------------------------------------------------------
mir_rob_plus_te:                        # DATA XREF: ROM:00064464↑o
                ld      0x2A3C(g7), r4  # Label from official source
                chkbit  5, r4
                be      loc_64580
                chkbit  8, r4
                bno     loc_64788
                addo    4, sp, sp
                st      r6, -4(sp)
                addo    4, sp, sp
                st      r7, -4(sp)
                addo    4, sp, sp
                st      r8, -4(sp)
                addo    4, sp, sp
                st      r9, -4(sp)
                addo    4, sp, sp
                st      r11, -4(sp)
                ldt     0x254(g7), r8
                b       loc_645C0
# ---------------------------------------------------------------------------
loc_64580:                              # CODE XREF: ROM:00064530↑j
                addo    4, sp, sp
                st      r6, -4(sp)
                addo    4, sp, sp
                st      r7, -4(sp)
                addo    4, sp, sp
                st      r8, -4(sp)
                addo    4, sp, sp
                st      r9, -4(sp)
                addo    4, sp, sp
                st      r11, -4(sp)
                ldt     0x230(g7), r8
loc_645C0:                              # CODE XREF: ROM:0006457C↑j
                ldt     0x20C(g7), r4
                subr    r4, r8, r8
                subr    r5, r9, r9
                subr    r6, r10, r10
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                notbit  0x1F, r9, r9
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r9
                lda     0x3EE66666, r10
                divr    r10, r9, r9
                lda     0x3F800000, r10
                notbit  0x1F, r10, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x2000404, r15
                st      r15, (g11)[g12*1]
                lda     0x2A40(g7), r15
                ld      0x0(r15), r14
                st      r14, (g11)[g12*1]
                ld      4(r15), r14
                st      r14, (g11)[g12*1]
                ld      8(r15), r14
                st      r14, (g11)[g12*1]
                ld      0xC(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x10(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x14(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x18(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x1C(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x20(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x24(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x28(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x2C(r15), r14
                st      r14, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                mov     0, g1
                lda     1189, g0        # Espio Tongue
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ld      -4(sp), r11
                subo    4, sp, sp
                ld      -4(sp), r9
                subo    4, sp, sp
                ld      -4(sp), r8
                subo    4, sp, sp
                ld      -4(sp), r7
                subo    4, sp, sp
                ld      -4(sp), r6
                subo    4, sp, sp
loc_64788:                              # CODE XREF: ROM:00064538↑j
                bx      (r6)
# =============== S U B R O U T I N E =======================================
mirror_area_init:                       # CODE XREF: camera_init+2A8↑p
                ld      0x0(g13), r8    # Label from official source
                setbit  8, r8, r8
                ldob    stage_num, r12
                shlo    8, r12, r4
                ldos    stage_data(r4), r3
                ldt     0x18(g13), r12
                bbs     0x1F, r13, loc_64888
                cmpibe  0, r13, loc_64888
# ---------------------------------------------------------------------------
                .long 0x785D958D        # divr    r13,+1.0,r11
# ---------------------------------------------------------------------------
                ld      stage_x, r10
                ld      0x50A1C0, r3
                mulr    r10, r3, r10
                setbit  0x1F, r10, r4
                subr    r12, r4, r4
                mulr    r11, r4, r4
                subr    r12, r10, r5
                mulr    r11, r5, r5
                setbit  0x1F, r10, r6
                subr    r14, r6, r6
                mulr    r11, r6, r6
                subr    r14, r10, r7
                mulr    r11, r7, r7
                stq     r4, 0x68(g13)
                st      r10, 0x78(g13)
                ld      0x5010CC, r4
                lda     0x43400000, r5
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                ldis    0x24(g13), r13
                subi    r13, r6, r6
                ldis    0x26(g13), r3
                shlo    0xE, 1, r5
                addi    r5, r6, r4
                bbc     0xF, r4, loc_64840
                notbit  0xF, r3, r3
loc_64840:                              # CODE XREF: mirror_area_init+AC↑j
                lda     0x11802323, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                subi    r3, 0, r3
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                stt     r4, 0x280(g13)
                clrbit  8, r8, r8
loc_64888:                              # CODE XREF: mirror_area_init+20↑j
                st      r8, 0x0(g13)
                ret
# End of function mirror_area_init
# =============== S U B R O U T I N E =======================================
mirror_area_check_group:                # CODE XREF: rob_disp_mir+10↑p
                ld      fa_camera, r7   # Label from official source
                ldt     0x18(r7), r4
                ldt     0x280(r7), r12
                subr    r6, g2, r3
                mulr    r13, r3, r13
                subr    r4, g0, r3
                mulr    r12, r3, r12
                addr    r12, r13, r13
                mulr    r14, r13, r13
                subr    r5, r13, r5
                ld      0x290(r7), r3
                addr    r3, r5, r5
                st      r5, 0x28C(r7)
                ret
# End of function mirror_area_check_group
# ---------------------------------------------------------------------------
                bbs     0x1F, g1, loc_64930
                ld      fa_camera, r9
                ld      0x0(r9), r15
                bbs     8, r15, loc_64930
                ld      0x28C(r9), r3
                cmpibg  g1, r3, loc_64930
                ldq     0x68(r9), r4
                ld      0x78(r9), r10
                mulr    r4, g1, r3
                subr    r3, g0, r3
                bbc     0x1F, r3, loc_64904
                clrbit  0x1F, r3, r3
                cmpibg  r3, r10, loc_64930
loc_64904:                              # CODE XREF: ROM:000648F8↑j
                mulr    r5, g1, r3
                subr    r3, g0, r3
                cmpibg  r3, r10, loc_64930
                mulr    r6, g1, r3
                subr    r3, g2, r3
                bbc     0x1F, r3, loc_64924
                clrbit  0x1F, r3, r3
                cmpibg  r3, r10, loc_64930
loc_64924:                              # CODE XREF: ROM:00064918↑j
                mulr    r7, g1, r3
                subr    r3, g2, r3
                cmpible r3, r10, loc_64934
loc_64930:                              # CODE XREF: ROM:000648CC↑j
                setbit  0x1F, g1, g1
loc_64934:                              # CODE XREF: ROM:0006492C↑j
                ret
# ---------------------------------------------------------------------------
byte_64938:     .byte 0                 # DATA XREF: rob_kage_set_flag_sub+2C↑r
                .byte 0                 # Flying Carpet
                .byte 0                 # Aurora Icefield
                .byte 1                 # Mushroom Hill
                .byte 0                 # Canyon Cruise
                .byte 0                 # Casino Night
                .byte 0                 # Dynamite Plant
                .byte 1                 # Giant Wing
                .byte 0                 # Death Egg's Eye
                .byte 0                 # Death Egg Transition
                .byte 0                 # Death Egg's Hangar
                .byte 0                 # Blank Stage
                .byte 0                 # Alt Mushroom Hill
                .byte 0                 # Alt South Island
                .byte 0                 # ADV_MOVIE stage
                .byte 0                 # ADV_MOVIE2 stage
stage_floats:   .float 1.6              # DATA XREF: sub_63B10+10↑r
                .float 1.0              # Flying Carpet
                .float 1.0              # Aurora Icefield
                .float 1.6              # Mushroom Hill
                .float 1.0              # Canyon Cruise
                .float 1.6              # Casino Night
                .float 1.0              # Dynamite Plant
                .float 1.6              # Giant Wing
                .float 1.6              # Death Egg's Eye
                .float 1.6              # Death Egg Transition
                .float 1.6              # Death Egg's Hangar
                .float 1.6              # Blank Stage
                .float 1.6              # Alt Mushroom Hill
                .float 1.6              # Alt South Island
                .float 1.6              # ADV_MOVIE stage
                .float 1.6              # ADV_MOVIE2 stage
char_shadow_offsets:.long SONIC_SHADOW  # DATA XREF: rob_kage_disp_test+30↑r
                .long TAILS_SHADOW
                .long AMY_SHADOW
                .long METAL_SONIC_SHADOW
                .long FANG_SHADOW
                .long BARK_SHADOW
                .long KNUCKLES_SHADOW
                .long ESPIO_SHADOW
                .long EGGMAN_SHADOW
                .long EGGMAN_SHADOW     # Does an EGGMANB_SHADOW exist
                .long BEAN_SHADOW
                .long EGGMAN_BOSS_SHADOW
                .long SONIC_SHADOW      # Egg Ufo Shadow
                .long ROBO_EGG_SHADOW
                .long ROCKET_METAL_SHADOW
                .long HONEY_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_I_SHADOW    # Does Sonic_I really have their own shadow
                .long TAILS_SHADOW
                .long AMY_SHADOW
                .long METAL_SONIC_SHADOW
                .long FANG_SHADOW
                .long BARK_SHADOW
                .long KNUCKLES_SHADOW
                .long ESPIO_SHADOW
                .long EGGMAN_SHADOW
                .long EGGMAN_SHADOW
                .long BEAN_SHADOW
                .long EGGMAN_BOSS_SHADOW
                .long SONIC_SHADOW
                .long ROBO_EGG_SHADOW
                .long ROCKET_METAL_SHADOW
                .long HONEY_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
                .long SONIC_SHADOW
unused_shadow:  .long 2
                .long 0x1A
                .long 6
                .long 0
                .long 0
                .long 0x3DCCCCCD
                .long 1
                .long 0x19
                .long 1
                .long 0
                .long 0
                .long 0
                .long 1
                .long 0x19
                .long 5
                .long 0
                .long 0
                .long 0xBDB851EC
                .long 1
                .long 0x19
                .long 5
                .long 0
                .long 0
                .long 0x3DB851EC
                .long 3
                .long 0x1C
                .long 1
                .long 0
                .long 0
                .long 0
                .long 4, 0x1E, 1
                .fill 3, 4, 0
                .long 6, 0x1B, 1
                .fill 3, 4, 0
                .long 7, 0x1D, 1
                .fill 3, 4, 0
                .long 9, 0x21, 5
                .fill 3, 4, 0
                .long 0xA, 0x23, 1
                .fill 3, 4, 0
                .long 0xB, 0x25, 1
                .fill 3, 4, 0
                .long 0xC, 0x27, 6, 0
                .long 0xBDA3D70A, 0
                .long 0xD, 0x22, 1
                .fill 3, 4, 0
                .long 0xE, 0x24, 1
                .fill 3, 4, 0
                .long 0xF, 0x26, 6, 0
                .long 0xBDA3D70A
                .fill 3, 4, 0
                .long 2, 0x1A, 6
                .fill 2, 4, 0
                .long 0x3CF5C28F, 1, 0x19, 1
                .fill 3, 4, 0
                .long 1, 0x19, 5
                .fill 2, 4, 0
                .long 0xBDB851EC, 1, 0x19, 5
                .fill 2, 4, 0
                .long 0x3DB851EC, 3, 0x1C, 1
                .fill 3, 4, 0
                .long 4, 0x1E, 1
                .fill 3, 4, 0
                .long 6, 0x1B, 1
                .fill 3, 4, 0
                .long 7, 0x1D, 1
                .fill 3, 4, 0
                .long 9, 0x21, 5
                .fill 3, 4, 0
                .long 0xA, 0x23, 1
                .fill 3, 4, 0
                .long 0xB, 0x25, 1
                .fill 3, 4, 0
                .long 0xC, 0x27, 6, 0
                .long 0xBDA3D70A, 0
                .long 0xD, 0x22, 1
                .fill 3, 4, 0
                .long 0xE, 0x24, 1
                .fill 3, 4, 0
                .long 0xF, 0x26, 6, 0
                .long 0xBDA3D70A
                .fill 3, 4, 0
                .long 2
                .long 0x1A
                .long 6
                .fill 2, 4, 0
                .long 0x3DCCCCCD, 1, 0x19, 1
                .fill 3, 4, 0
                .long 1, 0x19, 5
                .fill 2, 4, 0
                .long 0xBE23D70A, 1, 0x19, 5
                .fill 2, 4, 0
                .long 0x3E23D70A, 3, 0x1C, 1
                .fill 3, 4, 0
                .long 4, 0x1E, 1
                .fill 3, 4, 0
                .long 6, 0x1B, 1
                .fill 3, 4, 0
                .long 7, 0x1D, 1
                .fill 3, 4, 0
                .long 9, 0x21, 5
                .fill 3, 4, 0
                .long 0xA, 0x23, 1
                .fill 3, 4, 0
                .long 0xB, 0x25, 1
                .fill 3, 4, 0
                .long 0xC, 0x27, 6, 0
                .long 0xBD8F5C29, 0
                .long 0xD, 0x22, 1
                .fill 3, 4, 0
                .long 0xE, 0x24, 1
                .fill 3, 4, 0
                .long 0xF, 0x26, 6, 0
                .long 0xBD8F5C29
                .fill 3, 4, 0
SONIC_I_SHADOW: .long 2, 0x1A, 6        # DATA XREF: ROM:000649F0↑o
                .fill 2, 4, 0
                .long 0x3D4CCCCD, 1, 0x19, 1
                .fill 3, 4, 0
                .long 1, 0x19, 5
                .fill 2, 4, 0
                .long 0xBDE147AE, 1, 0x19, 5
                .fill 2, 4, 0
                .long 0x3DE147AE, 3, 0x1C, 1
                .fill 3, 4, 0
                .long 4, 0x1E, 1
                .fill 3, 4, 0
                .long 6, 0x1B, 1
                .fill 3, 4, 0
                .long 7, 0x1D, 1
                .fill 3, 4, 0
                .long 9, 0x21, 5, 0xBCC49BA6, 0x3CF5C28F, 0
                .long 0xA, 0x23, 1
                .fill 3, 4, 0
                .long 0xB, 0x25, 1
                .fill 3, 4, 0
                .long 0xC, 0x27, 6, 0
                .long 0xBDA3D70A, 0
                .long 0xD, 0x22, 1
                .fill 3, 4, 0
                .long 0xE, 0x24, 1
                .fill 3, 4, 0
                .long 0xF, 0x26, 6, 0
                .long 0xBDA3D70A
                .fill 3, 4, 0
                .long 2, 0x1A, 6
                .fill 2, 4, 0
                .long 0x3D8F5C29, 1, 0x19, 1
                .fill 3, 4, 0
                .long 1, 0x19, 5
                .fill 2, 4, 0
                .long 0xBDE147AE, 1, 0x19, 5
                .fill 2, 4, 0
                .long 0x3DE147AE, 3, 0x1C, 1
                .fill 3, 4, 0
                .long 4, 0x1E, 1
                .fill 3, 4, 0
                .long 6, 0x1B, 1
                .fill 3, 4, 0
                .long 7, 0x1D, 1
                .fill 3, 4, 0
                .long 9, 0x21, 5, 0xBCC49BA6, 0x3CF5C28F, 0
                .long 0xA, 0x23, 1
                .fill 3, 4, 0
                .long 0xB, 0x25, 1
                .fill 3, 4, 0
                .long 0xC, 0x27, 6, 0
                .long 0xBDA3D70A, 0
                .long 0xD, 0x22, 1
                .fill 3, 4, 0
                .long 0xE, 0x24, 1
                .fill 3, 4, 0
                .long 0xF, 0x26, 6, 0
                .long 0xBDA3D70A
                .fill 3, 4, 0
                .long 2, 0x1A, 6
                .fill 2, 4, 0
                .long 0x3CF5C28F, 1, 0x19, 1
                .fill 3, 4, 0
                .long 1, 0x19, 5
                .fill 2, 4, 0
                .long 0xBDCCCCCD, 1, 0x19, 5
                .fill 2, 4, 0
                .long 0x3DCCCCCD, 3, 0x1C, 1
                .fill 3, 4, 0
                .long 4, 0x1E, 1
                .fill 3, 4, 0
                .long 6, 0x1B, 1
                .fill 3, 4, 0
                .long 7, 0x1D, 1
                .fill 3, 4, 0
                .long 9, 0x21, 5, 0xBCC49BA6, 0x3CF5C28F, 0
                .long 0xA, 0x23, 1
                .fill 3, 4, 0
                .long 0xB, 0x25, 1
                .fill 3, 4, 0
                .long 0xC, 0x27, 6, 0
                .long 0xBDA3D70A, 0
                .long 0xD, 0x22, 1
                .fill 3, 4, 0
                .long 0xE, 0x24, 1
                .fill 3, 4, 0
                .long 0xF, 0x26, 6, 0
                .long 0xBDA3D70A
                .fill 3, 4, 0
                .long 2, 0x1A, 6
                .fill 2, 4, 0
                .long 0x3DCCCCCD, 1, 0x19, 1
                .fill 3, 4, 0
                .long 1, 0x19, 5
                .fill 2, 4, 0
                .long 0xBDCCCCCD, 1, 0x19, 5
                .fill 2, 4, 0
                .long 0x3DCCCCCD, 3, 0x1C, 1
                .fill 3, 4, 0
                .long 4, 0x1E, 1
                .fill 3, 4, 0
                .long 6, 0x1B, 1
                .fill 3, 4, 0
                .long 7, 0x1D, 1
                .fill 3, 4, 0
                .long 9, 0x21, 5
                .fill 3, 4, 0
                .long 0xA, 0x23, 1
                .fill 3, 4, 0
                .long 0xB, 0x25, 1
                .fill 3, 4, 0
                .long 0xC, 0x27, 6, 0
                .long 0xBD75C28F, 0
                .long 0xD, 0x22, 1
                .fill 3, 4, 0
                .long 0xE, 0x24, 1
                .fill 3, 4, 0
                .long 0xF, 0x26, 6, 0
                .long 0xBD75C28F
                .fill 3, 4, 0
                .long 2, 0x1A, 6
                .fill 2, 4, 0
                .long 0x3DCCCCCD, 1, 0x19, 1
                .fill 3, 4, 0
                .long 1, 0x19, 5
                .fill 2, 4, 0
                .long 0xBE23D70A, 1, 0x19, 5
                .fill 2, 4, 0
                .long 0x3E23D70A, 3, 0x1C, 1
                .fill 3, 4, 0
                .long 4, 0x1E, 1
                .fill 3, 4, 0
                .long 6, 0x1B, 1
                .fill 3, 4, 0
                .long 7, 0x1D, 1
                .fill 3, 4, 0
                .long 9, 0x21, 5
                .fill 3, 4, 0
                .long 0xA, 0x23, 1
                .fill 3, 4, 0
                .long 0xB, 0x25, 1
                .fill 3, 4, 0
                .long 0xC, 0x27, 6, 0
                .long 0xBD8F5C29, 0
                .long 0xD, 0x22, 1
                .fill 3, 4, 0
                .long 0xE, 0x24, 1
                .fill 3, 4, 0
                .long 0xF, 0x26, 6, 0
                .long 0xBD8F5C29
                .fill 3, 4, 0
                .long 2, 0x1A, 6
                .fill 2, 4, 0
                .long 0x3DCCCCCD, 1, 0x19, 1
                .fill 3, 4, 0
                .long 1, 0x19, 5
                .fill 2, 4, 0
                .long 0xBE23D70A, 1, 0x19, 5
                .fill 2, 4, 0
                .long 0x3E23D70A, 3, 0x1C, 1
                .fill 3, 4, 0
                .long 4, 0x1E, 1
                .fill 3, 4, 0
                .long 6, 0x1B, 1
                .fill 3, 4, 0
                .long 7, 0x1D, 1
                .fill 3, 4, 0
                .long 9, 0x21, 5
                .fill 3, 4, 0
                .long 0xA, 0x23, 1
                .fill 3, 4, 0
                .long 0xB, 0x25, 1
                .fill 3, 4, 0
                .long 0xC, 0x27, 6, 0
                .long 0xBD8F5C29, 0
                .long 0xD, 0x22, 1
                .fill 3, 4, 0
                .long 0xE, 0x24, 1
                .fill 3, 4, 0
                .long 0xF, 0x26, 6, 0
                .long 0xBD8F5C29
                .fill 3, 4, 0
SONIC_SHADOW:   .long 2                 # DATA XREF: ROM:char_shadow_offsets↑o
                .long 0x1A
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1
                .long 0x19
                .long 0
                .long 0
                .long 0
                .long 0
                .long 3
                .long 0x1C
                .long 0
                .long 0
                .long 0
                .long 0
                .long 4
                .long 0x1E
                .long 0
                .long 0
                .long 0
                .long 0
                .long 5
                .long 0x20
                .long 0
                .long 0
                .fill 2, 4, 0
                .long 6, 0x1B
                .fill 4, 4, 0
                .long 7, 0x1D
                .fill 4, 4, 0
                .long 8, 0x1F
                .fill 4, 4, 0
                .long 9, 0x21
                .fill 0xA, 4, 0
                .long 0xA, 0x23
                .fill 4, 4, 0
                .long 0xB, 0x25
                .fill 4, 4, 0
                .long 0xC, 0x27
                .fill 4, 4, 0
                .long 0xD, 0x22
                .fill 4, 4, 0
                .long 0xE, 0x24
                .fill 4, 4, 0
                .long 0xF, 0x26
                .fill 6, 4, 0
TAILS_SHADOW:   .long 2, 0x3A           # DATA XREF: ROM:0006498C↑o
                .fill 4, 4, 0
                .long 1, 0x39
                .fill 4, 4, 0
                .long 3, 0x3C
                .fill 4, 4, 0
                .long 4, 0x3E
                .fill 4, 4, 0
                .long 5, 0x40
                .fill 4, 4, 0
                .long 6, 0x3B
                .fill 4, 4, 0
                .long 7, 0x3D
                .fill 4, 4, 0
                .long 8, 0x3F
                .fill 4, 4, 0
                .long 9, 0x41
                .fill 0xA, 4, 0
                .long 0xA, 0x43
                .fill 4, 4, 0
                .long 0xB, 0x45
                .fill 4, 4, 0
                .long 0xC, 0x47
                .fill 4, 4, 0
                .long 0xD, 0x42
                .fill 4, 4, 0
                .long 0xE, 0x44
                .fill 4, 4, 0
                .long 0xF, 0x46
                .fill 6, 4, 0
AMY_SHADOW:     .long 2, 0x3E3          # DATA XREF: ROM:00064990↑o
                .fill 4, 4, 0
                .long 1, 0x3E8
                .fill 4, 4, 0
                .long 3, 0x3E5
                .fill 4, 4, 0
                .long 4, 0x3EC
                .fill 4, 4, 0
                .long 5, 0x3EA
                .fill 4, 4, 0
                .long 6, 0x3E4
                .fill 4, 4, 0
                .long 7, 0x3EB
                .fill 4, 4, 0
                .long 8, 0x3E9
                .fill 4, 4, 0
                .long 9, 0x21
                .fill 0xA, 4, 0
                .long 0xA, 0x3E7
                .fill 4, 4, 0
                .long 0xB, 0x3E2
                .fill 4, 4, 0
                .long 0xC, 0x3E0
                .fill 4, 4, 0
                .long 0xD, 0x3E6
                .fill 4, 4, 0
                .long 0xE, 0x3E1
                .fill 4, 4, 0
                .long 0xF, 0x3DF
                .fill 6, 4, 0
KNUCKLES_SHADOW:.long 2, 0x3D5          # DATA XREF: ROM:000649A0↑o
                .fill 4, 4, 0
                .long 1, 0x3DA
                .fill 4, 4, 0
                .long 3, 0x3D7
                .fill 4, 4, 0
                .long 4, 0x3DE
                .fill 4, 4, 0
                .long 5, 0x3DC
                .fill 4, 4, 0
                .long 6, 0x3D6
                .fill 4, 4, 0
                .long 7, 0x3DD
                .fill 4, 4, 0
                .long 8, 0x3DB
                .fill 4, 4, 0
                .long 9, 0x21
                .fill 0xA, 4, 0
                .long 0xA, 0x3D9
                .fill 4, 4, 0
                .long 0xB, 0x3D4
                .fill 4, 4, 0
                .long 0xC, 0x3D2
                .fill 4, 4, 0
                .long 0xD, 0x3D8
                .fill 4, 4, 0
                .long 0xE, 0x3D3
                .fill 4, 4, 0
                .long 0xF, 0x3D1
                .fill 6, 4, 0
FANG_SHADOW:    .long 2, 0x694          # DATA XREF: ROM:00064998↑o
                .fill 4, 4, 0
                .long 1, 0x69C
                .fill 4, 4, 0
                .long 3, 0x696
                .fill 4, 4, 0
                .long 4, 0x6A3
                .fill 4, 4, 0
                .long 5, 0x6A1
                .fill 4, 4, 0
                .long 6, 0x695
                .fill 4, 4, 0
                .long 7, 0x6A2
                .fill 4, 4, 0
                .long 8, 0x6A0
                .fill 4, 4, 0
                .long 9, 0x21
                .fill 0xA, 4, 0
                .long 0xA, 0x69B
                .fill 4, 4, 0
                .long 0xB, 0x693
                .fill 4, 4, 0
                .long 0xC, 0x691
                .fill 4, 4, 0
                .long 0xD, 0x69A
                .fill 4, 4, 0
                .long 0xE, 0x692
                .fill 4, 4, 0
                .long 0xF, 0x690
                .fill 6, 4, 0
METAL_SONIC_SHADOW:.long 2, 0x6FB       # DATA XREF: ROM:00064994↑o
                .fill 4, 4, 0
                .long 1, 0x700
                .fill 4, 4, 0
                .long 3, 0x6FD
                .fill 4, 4, 0
                .long 4, 0x704
                .fill 4, 4, 0
                .long 5, 0x702
                .fill 4, 4, 0
                .long 6, 0x6FC
                .fill 4, 4, 0
                .long 7, 0x703
                .fill 4, 4, 0
                .long 8, 0x701
                .fill 4, 4, 0
                .long 9, 0x21
                .fill 0xA, 4, 0
                .long 0xA, 0x6FF
                .fill 4, 4, 0
                .long 0xB, 0x6FA
                .fill 4, 4, 0
                .long 0xC, 0x6F8
                .fill 4, 4, 0
                .long 0xD, 0x6FE
                .fill 4, 4, 0
                .long 0xE, 0x6F9
                .fill 4, 4, 0
                .long 0xF, 0x6F7
                .fill 6, 4, 0
EGGMAN_SHADOW:  .long 2, 0x73B          # DATA XREF: ROM:000649A8↑o
                .fill 4, 4, 0
                .long 1, 0x740
                .fill 4, 4, 0
                .long 3, 0x73D
                .fill 4, 4, 0
                .long 4, 0x744
                .fill 4, 4, 0
                .long 5, 0x742
                .fill 4, 4, 0
                .long 6, 0x73C
                .fill 4, 4, 0
                .long 7, 0x743
                .fill 4, 4, 0
                .long 8, 0x741
                .fill 4, 4, 0
                .long 9, 0x21
                .fill 0xA, 4, 0
                .long 0xA, 0x73F
                .fill 4, 4, 0
                .long 0xB, 0x73A
                .fill 4, 4, 0
                .long 0xC, 0x738
                .fill 4, 4, 0
                .long 0xD, 0x73E
                .fill 4, 4, 0
                .long 0xE, 0x739
                .fill 4, 4, 0
                .long 0xF, 0x737
                .fill 6, 4, 0
BARK_SHADOW:    .long 2, 0x941          # DATA XREF: ROM:0006499C↑o
                .fill 4, 4, 0
                .long 1, 0x946
                .fill 4, 4, 0
                .long 3, 0x943
                .fill 4, 4, 0
                .long 4, 0x94B
                .fill 4, 4, 0
                .long 5, 0x949
                .fill 4, 4, 0
                .long 6, 0x942
                .fill 4, 4, 0
                .long 7, 0x94A
                .fill 4, 4, 0
                .long 8, 0x948
                .fill 4, 4, 0
                .long 9, 0x21
                .fill 0xA, 4, 0
                .long 0xA, 0x945
                .fill 4, 4, 0
                .long 0xB, 0x940
                .fill 4, 4, 0
dword_66320:    .long 0xC, 0x93E
                .fill 4, 4, 0
                .long 0xD, 0x944
                .fill 4, 4, 0
                .long 0xE, 0x93F
                .fill 4, 4, 0
                .long 0xF, 0x93D
                .fill 6, 4, 0
ESPIO_SHADOW:   .long 2, 0x96E          # DATA XREF: ROM:000649A4↑o
                .fill 4, 4, 0
                .long 1, 0x973
                .fill 4, 4, 0
                .long 3, 0x970
                .fill 4, 4, 0
                .long 4, 0x977
                .fill 4, 4, 0
                .long 5, 0x975
                .fill 4, 4, 0
                .long 6, 0x96F
                .fill 4, 4, 0
                .long 7, 0x976
                .fill 4, 4, 0
dword_66430:    .long 8, 0x974
                .fill 4, 4, 0
                .long 9, 0x21
                .fill 0xA, 4, 0
                .long 0xA, 0x972
                .fill 4, 4, 0
                .long 0xB, 0x96D
                .fill 4, 4, 0
                .long 0xC, 0x96B
                .fill 4, 4, 0
                .long 0xD, 0x971
                .fill 4, 4, 0
                .long 0xE, 0x96C
                .fill 4, 4, 0
                .long 0xF, 0x96A
                .fill 6, 4, 0
BEAN_SHADOW:    .long 2, 0x8A2          # DATA XREF: ROM:000649B0↑o
                .fill 4, 4, 0
                .long 1, 0x8A7
                .fill 4, 4, 0
                .long 3, 0x8A4
                .fill 4, 4, 0
                .long 4, 0x8AB
                .fill 4, 4, 0
                .long 5, 0x8A9
                .fill 4, 4, 0
                .long 6, 0x8A3
                .fill 4, 4, 0
                .long 7, 0x8AA
                .fill 4, 4, 0
                .long 8, 0x8A8
                .fill 4, 4, 0
                .long 9, 0x21
                .fill 0xA, 4, 0
                .long 0xA, 0x8A6
                .fill 4, 4, 0
                .long 0xB, 0x8A1
                .fill 4, 4, 0
                .long 0xC, 0x89F
                .fill 4, 4, 0
                .long 0xD, 0x8A5
                .fill 4, 4, 0
                .long 0xE, 0x8A0
                .fill 4, 4, 0
                .long 0xF, 0x747
                .fill 6, 4, 0
EGGMAN_BOSS_SHADOW:.long 2, 0xCEA       # DATA XREF: ROM:000649B4↑o
                .fill 4, 4, 0
                .long 1, 0xCF0
                .fill 4, 4, 0
                .long 3, 0xCEC
                .fill 4, 4, 0
                .long 4, 0xCF4
                .fill 4, 4, 0
                .long 5, 0xCF2
                .fill 4, 4, 0
                .long 6, 0xCEB
                .fill 4, 4, 0
                .long 7, 0xCF3
                .fill 4, 4, 0
                .long 8, 0xCF1
                .fill 4, 4, 0
                .long 9, 0xCED
                .fill 0xA, 4, 0
                .long 0xA, 0xCEF
                .fill 4, 4, 0
                .long 0xB, 0xCE9
                .fill 4, 4, 0
                .long 0xC, 0xCE7
                .fill 4, 4, 0
                .long 0xD, 0xCEE
                .fill 4, 4, 0
                .long 0xE, 0xCE8
                .fill 4, 4, 0
                .long 0xF, 0xCE6
                .fill 6, 4, 0
ROBO_EGG_SHADOW:.long 2, 0x34C          # DATA XREF: ROM:000649BC↑o
                .fill 4, 4, 0
                .long 1, 0x351
                .fill 4, 4, 0
                .long 3, 0x34E
                .fill 4, 4, 0
                .long 4, 0x355
                .fill 4, 4, 0
                .long 5, 0x353
                .fill 4, 4, 0
                .long 6, 0x34D
                .fill 4, 4, 0
                .long 7, 0x354
                .fill 4, 4, 0
                .long 8, 0x352
                .fill 4, 4, 0
                .long 9, 0x21
                .fill 0xA, 4, 0
                .long 0xA, 0x350
                .fill 4, 4, 0
                .long 0xB, 0x34B
                .fill 4, 4, 0
                .long 0xC, 0x349
                .fill 4, 4, 0
                .long 0xD, 0x34F
                .fill 4, 4, 0
                .long 0xE, 0x34A
                .fill 4, 4, 0
                .long 0xF, 0x348
                .fill 6, 4, 0
ROCKET_METAL_SHADOW:.long 2, 0xEC       # DATA XREF: ROM:000649C0↑o
                .fill 4, 4, 0
                .long 1, 0xF6
                .fill 4, 4, 0
                .long 3, 0xF3
                .fill 4, 4, 0
                .long 4
                .long 0xFB
                .long 0
                .long 0
                .long 0
                .long 0
                .long 5
                .long 0xF9
                .long 0
                .long 0
                .long 0
                .long 0
                .long 6, 0xF2
                .fill 4, 4, 0
                .long 7, 0xFA
                .fill 4, 4, 0
                .long 8, 0xF8
                .fill 4, 4, 0
                .long 9, 0x21
                .fill 0xA, 4, 0
                .long 0xA, 0xF5
                .fill 4, 4, 0
                .long 0xB, 0xEB
                .fill 4, 4, 0
                .long 0xC, 0xE9
                .fill 4, 4, 0
                .long 0xD, 0xF4
                .fill 4, 4, 0
                .long 0xE, 0xEA
                .fill 4, 4, 0
                .long 0xF, 0xE8
                .fill 6, 4, 0
HONEY_SHADOW:   .long 2                 # DATA XREF: ROM:000649C4↑o
                .long 0xEF2
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1
                .long 0xEF7
                .long 0
                .long 0
                .long 0
                .long 0
                .long 3
                .long 0xEF4
                .long 0
                .long 0
                .long 0
                .long 0
                .long 4
                .long 0xEFC
                .long 0
                .long 0
                .long 0
                .long 0
                .long 5
                .long 0xEFA
                .long 0
                .long 0
                .long 0
                .long 0
                .long 6
                .long 0xEF3
                .long 0
                .long 0
                .long 0
                .long 0
                .long 7
                .long 0xEFB
                .long 0
                .long 0
                .long 0
                .long 0
                .long 8
                .long 0xEF9
                .long 0
                .long 0
                .long 0
                .long 0
                .long 9
                .long 0x21
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0xA
                .long 0xEF6
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0xB
                .long 0xEF1
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0xC
                .long 0xEEF
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0xD
                .long 0xEF5
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0xE
                .long 0xEF0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0xF
                .long 0xEEE
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
# ---------------------------------------------------------------------------
sonic_11_08_dsp:                        # CODE XREF: ROM:time_int↓p
                addo    4, sp, sp
                st      g0, -4(sp)
                lda     0x1001732, g9
                balx    debug_disp_mes, r14
# ---------------------------------------------------------------------------
aSonic1108:     .asciz "SONIC 11.08"
# ---------------------------------------------------------------------------
                ld      -4(sp), g0
                subo    4, sp, sp
                ret
# ---------------------------------------------------------------------------
                ret                     # unreachable code
# =============== S U B R O U T I N E =======================================
un_old_osage:
                lda     osage_init, r15 # unreachable code
                st      r15, 0xC(g13)
                b       osage_init
# ---------------------------------------------------------------------------
                ldob    4(g13), r3      # unreachable code
                cmpobne 0, r3, loc_66D18
                ld      fa_rob0, g7
                b       loc_66D20
# ---------------------------------------------------------------------------
loc_66D18:                              # CODE XREF: un_old_osage+14↑j
                ld      fa_rob1, g7
loc_66D20:                              # CODE XREF: un_old_osage+20↑j
                lda     0x501500, r15
                st      r15, 0x10(g13)
                lda     0x41200000, r4
                st      r4, 0x501514
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mov     0xC, r15
                st      r15, (g11)[g12*1]
                lda     0x2800505, r15
                st      r15, (g11)[g12*1]
                lda     0x50E100, r15
                ld      (g11)[g12*1], r14
                st      r14, 0x0(r15)
                ld      (g11)[g12*1], r14
                st      r14, 4(r15)
                ld      (g11)[g12*1], r14
                st      r14, 8(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0xC(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x10(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x14(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x18(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x1C(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x20(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x24(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x28(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x2C(r15)
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mov     0x18, r15
                st      r15, (g11)[g12*1]
                lda     0x2800505, r15
                st      r15, (g11)[g12*1]
                lda     0x50E130, r15
                ld      (g11)[g12*1], r14
                st      r14, 0x0(r15)
                ld      (g11)[g12*1], r14
                st      r14, 4(r15)
                ld      (g11)[g12*1], r14
                st      r14, 8(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0xC(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x10(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x14(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x18(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x1C(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x20(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x24(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x28(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x2C(r15)
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                shlo    2, 0x1B, r15
                st      r15, (g11)[g12*1]
                lda     0x2800505, r15
                st      r15, (g11)[g12*1]
                lda     0x50E160, r15
                ld      (g11)[g12*1], r14
                st      r14, 0x0(r15)
                ld      (g11)[g12*1], r14
                st      r14, 4(r15)
                ld      (g11)[g12*1], r14
                st      r14, 8(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0xC(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x10(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x14(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x18(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x1C(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x20(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x24(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x28(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x2C(r15)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mov     0xC, r15
                st      r15, (g11)[g12*1]
                lda     0x6000C0C, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x21804343, r15
                st      r15, (g11)[g12*1]
                mov     0, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                mov     2, r3
                lda     0x1B803737, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r3, r15
                st      r15, (g11)[g12*1]
                lda     0x21804343, r15
                st      r15, (g11)[g12*1]
                mov     1, r15
                st      r15, (g11)[g12*1]
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                mov     9, r3
                lda     0x1B803737, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r3, r15
                st      r15, (g11)[g12*1]
                lda     0x21804343, r15
                st      r15, (g11)[g12*1]
                mov     2, r15
                st      r15, (g11)[g12*1]
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                ldt     debug_fx, r4
                lda     0x40000000, r3
                lda     0x2F005E5E, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x40000000, r3
                addr    r3, r6, r6
                lda     0xBE4CCCCD, r3
                addr    r3, r5, r5
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ldt     0x50907C, r4
                ld      0x50901C, r3
                cmpobne 0, r3, loc_67088
                mov     1, r3
loc_67088:                              # CODE XREF: un_old_osage+38C↑j
                muli    r3, r4, r4
                muli    r3, r5, r5
                muli    r3, r6, r6
                lda     0x8000(r4), r4
                lda     0xC000(r5), r5
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x1A803535, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mov     0xC, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x22804545, r15
                st      r15, (g11)[g12*1]
                mov     1, r15
                st      r15, (g11)[g12*1]
                lda     0x7800F0F, r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x7000E0E, r15
                st      r15, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ldt     0x509360, g0
                lda     0xC000(g0), g0
                lda     0x4000(g1), g1
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                lda     0x1A803535, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mov     0x18, r15
                st      r15, (g11)[g12*1]
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x22804545, r15
                st      r15, (g11)[g12*1]
                mov     2, r15
                st      r15, (g11)[g12*1]
                lda     0x1A803535, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                shlo    2, 0x1B, r15
                st      r15, (g11)[g12*1]
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                ldob    4(g7), r15
                mulo    8, r15, r15
                lda     0x501804(r15), r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_67260
                st      r13, 0x0(r15)
                b       loc_6726C
# ---------------------------------------------------------------------------
loc_67260:                              # CODE XREF: un_old_osage+560↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_6726C:                              # CODE XREF: un_old_osage+568↑j
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mov     0xC, r15
                st      r15, (g11)[g12*1]
                ld      0x44(g7), r3
                ldob    4(g7), g1
                lda     (r3), g0
                call    set_obj
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mov     0x18, r15
                st      r15, (g11)[g12*1]
                ld      0x48(g7), r3
                ldob    4(g7), g1
                lda     (r3), g0
                call    set_obj
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                shlo    2, 0x1B, r15
                st      r15, (g11)[g12*1]
                ld      0x64(g7), r3
                ldob    4(g7), g1
                lda     (r3), g0
                call    set_obj
                ldob    4(g7), r15
                mulo    8, r15, r15
                lda     0x501804(r15), r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                ret
# End of function un_old_osage
# ---------------------------------------------------------------------------
                lda     0x1000202, r15  # unreachable code
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x2000404, r15
                st      r15, (g11)[g12*1]
                lda     0x50E100, r15
                ld      0x0(r15), r14
                st      r14, (g11)[g12*1]
                ld      4(r15), r14
                st      r14, (g11)[g12*1]
                ld      8(r15), r14
                st      r14, (g11)[g12*1]
                ld      0xC(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x10(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x14(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x18(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x1C(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x20(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x24(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x28(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x2C(r15), r14
                st      r14, (g11)[g12*1]
                lda     0x1A803535, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mov     0xC, r15
                st      r15, (g11)[g12*1]
                lda     0x2000404, r15
                st      r15, (g11)[g12*1]
                lda     0x50E130, r15
                ld      0x0(r15), r14
                st      r14, (g11)[g12*1]
                ld      4(r15), r14
                st      r14, (g11)[g12*1]
                ld      8(r15), r14
                st      r14, (g11)[g12*1]
                ld      0xC(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x10(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x14(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x18(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x1C(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x20(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x24(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x28(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x2C(r15), r14
                st      r14, (g11)[g12*1]
                lda     0x1A803535, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mov     0x18, r15
                st      r15, (g11)[g12*1]
                lda     0x2000404, r15
                st      r15, (g11)[g12*1]
                lda     0x50E160, r15
                ld      0x0(r15), r14
                st      r14, (g11)[g12*1]
                ld      4(r15), r14
                st      r14, (g11)[g12*1]
                ld      8(r15), r14
                st      r14, (g11)[g12*1]
                ld      0xC(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x10(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x14(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x18(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x1C(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x20(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x24(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x28(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x2C(r15), r14
                st      r14, (g11)[g12*1]
                lda     0x1A803535, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                shlo    2, 0x1B, r15
                st      r15, (g11)[g12*1]
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# ---------------------------------------------------------------------------
                .long 0
dword_67520:    .long 0                 # DATA XREF: osage_dsp+354↓r
                .long 0
                .long 32
                .long 144
                .long 60
                .long 120
                .long 8
                .long 8
                .long 20
                .long 12
                .long 64
                .long 44
# ---------------------------------------------------------------------------
osage_return:                           # DATA XREF: osage_copro+54↓o
                ret
# =============== S U B R O U T I N E =======================================
osage_init:                             # CODE XREF: un_old_osage+C↑j
                ldob    4(g13), r3      # Label from official source
                cmpobne 0, r3, loc_67584
                ld      fa_rob0, r15
                st      r15, 0x40(g13)
                lda     0x91E800, r15
                st      r15, 0x48(g13)
                lda     loc_7A00, r15
                st      r15, 0x4C(g13)
                b       loc_675A4
# ---------------------------------------------------------------------------
loc_67584:                              # CODE XREF: osage_init+4↑j
                ld      fa_rob1, r15
                st      r15, 0x40(g13)
                lda     0x91F000, r15   # osage buffer ram limit offset
                st      r15, 0x48(g13)
                shlo    0xA, 0x1F, r15
                st      r15, 0x4C(g13)
loc_675A4:                              # CODE XREF: osage_init+2C↑j
                mov     0, r15
                stis    r15, 6(g13)
                lda     displacement, r3
                st      r3, 0x138(g13)
                st      r3, 0x13C(g13)
                st      r3, 0x140(g13)
                ld      0x40(g13), g7
                ld      0x0(g7), r15
                bbc     7, r15, loc_6763C
                ld      0x40(g13), g7
                ldob    0x1B0(g7), r3
                lda     osage_per_character[r3*4], r3
                lda     osage_fang, r4
                cmpobge r3, r4, loc_675F4
                ld      (r3), r15
                st      r15, 0x44(g13)
                b       loc_67600
# ---------------------------------------------------------------------------
loc_675F4:                              # CODE XREF: osage_init+90↑j
                lda     osage_null, r15
                st      r15, 0x44(g13)
loc_67600:                              # CODE XREF: osage_init+9C↑j
                lda     0x501500, r15
                st      r15, 0x10(g13)
                ld      0x0(g13), r3
                clrbit  1, r3, r3
                setbit  0, r3, r3
                clrbit  2, r3, r3
                clrbit  3, r3, r3
                clrbit  5, r3, r3
                clrbit  8, r3, r3
                st      r3, 0x0(g13)
                call    osage_dsp
                lda     osage_dsp, r15
                st      r15, 0xC(g13)
loc_6763C:                              # CODE XREF: osage_init+74↑j
                ret
# End of function osage_init
# =============== S U B R O U T I N E =======================================
osage_dsp:                              # CODE XREF: osage_init+D8↑p
                ld      0x0(g13), r15   # Label from official source
                bbs     3, r15, loc_67D24
                ld      0x40(g13), g7
                ldob    also_mode, r15
                lda     displacement64, r14
                lda     displacement128(r14), r14
                bbc     r15, r14, loc_67788
                ld      mod_fa_sel_disp, r3
                ld      0x0(r3), r3
                bbc     0x1F, r3, loc_67D24
                ld      0x0(g13), r15
                setbit  4, r15, r15
                st      r15, 0x0(g13)
                ld      0x0(g13), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g13)
                ldob    4(g7), r3
                cmpobne 0, r3, loc_67710
                lda     0x2000404, r15
                st      r15, (g11)[g12*1]
                lda     0x501128, r15
                ld      0x0(r15), r14
                st      r14, (g11)[g12*1]
                ld      4(r15), r14
                st      r14, (g11)[g12*1]
                ld      8(r15), r14
                st      r14, (g11)[g12*1]
                ld      0xC(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x10(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x14(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x18(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x1C(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x20(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x24(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x28(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x2C(r15), r14
                st      r14, (g11)[g12*1]
                b       loc_677CC
# ---------------------------------------------------------------------------
loc_67710:                              # CODE XREF: osage_dsp+54↑j
                lda     0x2000404, r15
                st      r15, (g11)[g12*1]
                lda     0x501158, r15
                ld      0x0(r15), r14
                st      r14, (g11)[g12*1]
                ld      4(r15), r14
                st      r14, (g11)[g12*1]
                ld      8(r15), r14
                st      r14, (g11)[g12*1]
                ld      0xC(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x10(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x14(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x18(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x1C(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x20(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x24(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x28(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x2C(r15), r14
                st      r14, (g11)[g12*1]
                b       loc_677CC
# ---------------------------------------------------------------------------
loc_67788:                              # CODE XREF: osage_dsp+24↑j
                ld      0x0(g13), r15
                clrbit  4, r15, r15
                st      r15, 0x0(g13)
                lda     displacement256, r14
                lda     (_INTR_ram__am1_users2_yasuda_mb_src_init_0+4)(r14), r14
                bbc     r15, r14, loc_677C4
                ldob    also_sub_mode, r15
                lda     displacement1, r14
                lda     (displacement2)(r14), r14
                bbs     r15, r14, loc_67D24
loc_677C4:                              # CODE XREF: osage_dsp+164↑j
                ld      0x0(g7), r15
                bbc     7, r15, loc_67D24
loc_677CC:                              # CODE XREF: osage_dsp+CC↑j
                ld      0x0(g13), r15
                clrbit  8, r15, r15
                st      r15, 0x0(g13)
                ld      fa_camera, r3
                ldob    4(g7), r4
                cmpobne 0, r4, loc_677F4
                ld      0x0(r3), r15
                bbc     1, r15, loc_67818
                b       loc_677FC
# ---------------------------------------------------------------------------
loc_677F4:                              # CODE XREF: osage_dsp+1A4↑j
                ld      0x0(r3), r15
                bbc     2, r15, loc_67818
loc_677FC:                              # CODE XREF: osage_dsp+1B0↑j
                ld      0x0(g13), r15
                clrbit  5, r15, r15
                st      r15, 0x0(g13)
                b       loc_67824
# ---------------------------------------------------------------------------
                ld      0x0(g13), r15
                setbit  8, r15, r15
                st      r15, 0x0(g13)
loc_67818:                              # CODE XREF: osage_dsp+1AC↑j
                ld      0x0(g13), r15
                setbit  5, r15, r15
                st      r15, 0x0(g13)
loc_67824:                              # CODE XREF: osage_dsp+1C8↑j
                ld      0x0(g13), r3
                bbs     2, r3, loc_67854
                bbs     0, r3, loc_67854
                ldl     TIMER_03, r14   # What the hell
                lda     0xFFFFF, r14    # Why does it do this
                and     r14, r15, r15
                subi    r15, r14, r15
                subo    0x12, r15, r15
                divo    0x19, r15, r15
                st      r15, 0x120(g13)
loc_67854:                              # CODE XREF: osage_dsp+1E8↑j
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                ldob    4(g7), r15
                mulo    8, r15, r15
                lda     0x501804(r15), r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_678A4
                st      r13, 0x0(r15)
                b       loc_678B0
# ---------------------------------------------------------------------------
loc_678A4:                              # CODE XREF: osage_dsp+258↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_678B0:                              # CODE XREF: osage_dsp+260↑j
                lda     0x50E404, r15
                st      r15, 0x50E400
                ld      0x0(g13), r15
                bbc     4, r15, loc_678D4
                lda     0xC479F99A, r3
                b       loc_67908
# ---------------------------------------------------------------------------
loc_678D4:                              # CODE XREF: osage_dsp+284↑j
                ldt     0x20C(g7), r4
                clrbit  0x1F, r4, r4
                clrbit  0x1F, r6, r6
                cmpibg  r4, r6, loc_678E8
                mov     r6, r4
loc_678E8:                              # CODE XREF: osage_dsp+2A0↑j
                ld      stage_x, r3
                cmpibg  r4, r3, loc_67900
                lda     displacement, r3
                b       loc_67908
# ---------------------------------------------------------------------------
loc_67900:                              # CODE XREF: osage_dsp+2B0↑j
                lda     0xBF000000, r3
loc_67908:                              # CODE XREF: osage_dsp+290↑j
                st      r3, 0xE4(g13)
                lda     0x3F000000, r4
                addr    r3, r4, r3
                ld      0x210(g7), r4
                cmpr    r4, r3
                bl      loc_67940
                ld      0x0(g13), r15
                clrbit  6, r15, r15
                st      r15, 0x0(g13)
                ld      0x0(g13), r15
                clrbit  7, r15, r15
                st      r15, 0x0(g13)
                b       loc_67958
# ---------------------------------------------------------------------------
loc_67940:                              # CODE XREF: osage_dsp+2E0↑j
                ld      0x0(g13), r15
                setbit  6, r15, r15
                st      r15, 0x0(g13)
                ld      0x0(g13), r15
                setbit  7, r15, r15
                st      r15, 0x0(g13)
loc_67958:                              # CODE XREF: osage_dsp+2FC↑j
                call    calc_kaze       # Kaze = "Wind"
                mov     0, r3
                st      r3, 0x144(g13)
                shlo    2, 0x15, r15
                st      r15, 0x50(g13)
                ld      0x44(g13), g9
                ld      0x48(g13), g8
loc_67974:                              # CODE XREF: osage_dsp+364↓j
                ld      (g9), r3
                addo    4, g9, g9
                st      r3, (g8)
                addo    4, g8, g8
                cmpobe  0, r3, loc_679C0
                ld      dword_679A8[r3*4], r4
                callx   (r4)
                ldl     dword_67520[r3*8], r4
                addo    r4, g9, g9
                addo    r5, g8, g8
                b       loc_67974
# ---------------------------------------------------------------------------
dword_679A8:    .long 0                 # DATA XREF: osage_dsp+348↑r
                .long os_set_matrix
                .long os_set_coli
                .long os_set_etc
                .long os_set_tsukene
                .long os_set_osage
# ---------------------------------------------------------------------------
loc_679C0:                              # CODE XREF: osage_dsp+344↑j
                shlo    9, 1, r3        # r3 = 0x200
                ld      0x48(g13), r4   # g13 = mod_fa_osage0_1_add
                lda     (r4)[r3*4], r3
                cmpobl  g8, r3, loc_67A14
                lda     0x1000CA8, g9
                mov     g8, g0
                balx    debug_disp_hex, r14
# ---------------------------------------------------------------------------
aOsEramOver:    .asciz "os_eram_over"
                .fill 3, 1, 0
# ---------------------------------------------------------------------------
                lda     0x1000D28, g9
                mov     r3, g0
                balx    debug_disp_hex, r14
# ---------------------------------------------------------------------------
aLimitIs:       .asciz "limit is"
                .fill 3, 1, 0
# ---------------------------------------------------------------------------
loc_67A14:                              # CODE XREF: osage_dsp+38C↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1] # g11 = 0x880000
                                        #
                call    osage_copro     # Some sort of time eater
                lda     0x1000202, r15
                st      r15, (g11)[g12*1] # g11 = 0x880000
                                        #
                call    set_situation_flags
                ldob    4(g7), r15
                mulo    8, r15, r15
                lda     0x501804(r15), r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                ldob    stage_num, r3
                lda     displacement2, r15
                cmpobe  r15, r3, loc_67A90
                b       loc_67CB4
# ---------------------------------------------------------------------------
loc_67A90:                              # CODE XREF: osage_dsp+448↑j
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501834, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_67AD8
                st      r13, 0x0(r15)
                b       loc_67AE4
# ---------------------------------------------------------------------------
loc_67AD8:                              # CODE XREF: osage_dsp+48C↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_67AE4:                              # CODE XREF: osage_dsp+494↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x6000C0C, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x21804343, r15
                st      r15, (g11)[g12*1]
                mov     0, r15
                st      r15, (g11)[g12*1]
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x40C00000, r4
                lda     0x40000000, r5
                mulr    r5, r4, r5
                lda     displacement, r4
                lda     0x3F800000, r4
                lda     0xBF800000, r5
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                lda     0x22804545, r15
                st      r15, (g11)[g12*1]
                mov     0, r15
                st      r15, (g11)[g12*1]
                lda     0x50E404, r5
                ld      0x50E400, r6
loc_67BA8:                              # CODE XREF: osage_dsp+628↓j
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                cmpobe  r5, r6, loc_67C6C
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x5800B0B, r15
                st      r15, (g11)[g12*1]
                lda     (r5), r15
                ld      0x0(r15), r14
                st      r14, (g11)[g12*1]
                ld      4(r15), r14
                st      r14, (g11)[g12*1]
                ld      8(r15), r14
                st      r14, (g11)[g12*1]
                ld      0xC(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x10(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x14(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x18(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x1C(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x20(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x24(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x28(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x2C(r15), r14
                st      r14, (g11)[g12*1]
                lda     0x30(r5), r5
                ld      (r5), g0
                addo    4, r5, r5
                cmpobe  0, g0, loc_67C5C
                ldob    4(g7), g1
                lda     (g0), g0
                call    set_obj
loc_67C5C:                              # CODE XREF: osage_dsp+60C↑j
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                b       loc_67BA8
# ---------------------------------------------------------------------------
loc_67C6C:                              # CODE XREF: osage_dsp+580↑j
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x501834, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
loc_67CB4:                              # CODE XREF: osage_dsp+44C↑j
                ldos    6(g13), r3
                addo    1, r3, r3
                stos    r3, 6(g13)
                ld      0x0(g13), r3
                bbs     2, r3, loc_67D18
                bbs     0, r3, loc_67D18
                ldob    RAMBASE_START, r3
                cmpobne 0, r3, loc_67D18
                ldl     TIMER_03, r14
                lda     0xFFFFF, r14
                and     r14, r15, r15
                subi    r15, r14, r15
                subo    0x12, r15, r15
                divo    0x19, r15, r15
                st      r15, 0x124(g13)
                ld      0x120(g13), r13
                ld      0x124(g13), r14
                subi    r13, r14, r15
                st      r15, 0x128(g13)
                ld      0x0(g13), r15
                setbit  2, r15, r15
                st      r15, 0x0(g13)
loc_67D18:                              # CODE XREF: osage_dsp+684↑j
                ld      0x0(g13), r15
                clrbit  0, r15, r15
                st      r15, 0x0(g13)
loc_67D24:                              # CODE XREF: osage_dsp+4↑j
                ret
# End of function osage_dsp
# =============== S U B R O U T I N E =======================================
os_set_matrix:                          # DATA XREF: osage_dsp+36C↑o
                lda     0x800101, r15   # Label from official source
                st      r15, (g11)[g12*1]
                ld      0x0(g9), r3
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r3, r15
                st      r15, (g11)[g12*1]
                ldt     4(g9), g0
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ldt     0x10(g9), g0
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                lda     0x21804343, r15
                st      r15, (g11)[g12*1]
                mov     0, r15
                st      r15, (g11)[g12*1]
                lda     0x7800F0F, r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                notbit  0x1F, g1, g1
                ld      0xE4(g13), g0
                addr    g1, g0, g1
                st      g1, 0xF4(g13)
                lda     0x6000C0C, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x21804343, r15
                st      r15, (g11)[g12*1]
                mov     1, r15
                st      r15, (g11)[g12*1]
                ldt     0x138(g13), g4
                ld      0x50A000, r4
                ld      0x1C(g9), r3
                notbit  0x1F, r4, r4
                mulr    r3, r4, r4
                addr    g5, r4, g5
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x6800D0D, r15
                st      r15, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], g4
                ld      (g11)[g12*1], g5
                ld      (g11)[g12*1], g6
                ld      0x0(g13), r15
                bbc     0, r15, loc_67E7C
                stt     g4, 0x114(g13)
loc_67E7C:                              # CODE XREF: os_set_matrix+14C↑j
                lda     0x2B805757, r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                stt     g0, 0xE8(g13)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ld      0x50(g13), r10
                ld      0x0(g13), r15
                bbc     0, r15, loc_67EC0
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                b       loc_67EF0
# ---------------------------------------------------------------------------
loc_67EC0:                              # CODE XREF: os_set_matrix+184↑j
                lda     0x5800B0B, r15
                st      r15, (g11)[g12*1]
                lda     (g13)[r10], r15
                ldt     0x0(r15), r12
                stt     r12, (g11)[g12*1]
                ldt     0xC(r15), r12
                stt     r12, (g11)[g12*1]
                ldt     0x18(r15), r12
                stt     r12, (g11)[g12*1]
                ldt     0x24(r15), r12
                stt     r12, (g11)[g12*1]
loc_67EF0:                              # CODE XREF: os_set_matrix+194↑j
                lda     0x2800505, r15
                st      r15, (g11)[g12*1]
                lda     0x30(g8), r15
                ld      (g11)[g12*1], r14
                st      r14, 0x0(r15)
                ld      (g11)[g12*1], r14
                st      r14, 4(r15)
                ld      (g11)[g12*1], r14
                st      r14, 8(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0xC(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x10(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x14(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x18(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x1C(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x20(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x24(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x28(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x2C(r15)
                lda     0x7000E0E, r15
                st      r15, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                lda     0x2800505, r15
                st      r15, (g11)[g12*1]
                lda     0x60(g8), r15
                ld      (g11)[g12*1], r14
                st      r14, 0x0(r15)
                ld      (g11)[g12*1], r14
                st      r14, 4(r15)
                ld      (g11)[g12*1], r14
                st      r14, 8(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0xC(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x10(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x14(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x18(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x1C(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x20(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x24(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x28(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x2C(r15)
                lda     0x22004444, r15
                st      r15, (g11)[g12*1]
                mov     0, r15
                st      r15, (g11)[g12*1]
                lda     0x2800505, r15
                st      r15, (g11)[g12*1]
                lda     (g13)[r10], r15
                ldt     (g11)[g12*1], r12
                stt     r12, 0x0(r15)
                ldt     (g11)[g12*1], r12
                stt     r12, 0xC(r15)
                ldt     (g11)[g12*1], r12
                stt     r12, 0x18(r15)
                ldt     (g11)[g12*1], r12
                stt     r12, 0x24(r15)
                lda     0x30(r10), r10
                st      r10, 0x50(g13)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x22804545, r15
                st      r15, (g11)[g12*1]
                mov     0, r15
                st      r15, (g11)[g12*1]
                lda     0x2800505, r15
                st      r15, (g11)[g12*1]
                lda     0x0(g8), r15
                ld      (g11)[g12*1], r14
                st      r14, 0x0(r15)
                ld      (g11)[g12*1], r14
                st      r14, 4(r15)
                ld      (g11)[g12*1], r14
                st      r14, 8(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0xC(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x10(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x14(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x18(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x1C(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x20(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x24(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x28(r15)
                ld      (g11)[g12*1], r14
                st      r14, 0x2C(r15)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# End of function os_set_matrix
# =============== S U B R O U T I N E =======================================
os_set_tsukene:                         # DATA XREF: osage_dsp+378↑o
                ld      0x0(g9), r3     # Label from official source
                ld      off_680F0[r3*4], r3
                bx      (r3)
# End of function os_set_tsukene
# ---------------------------------------------------------------------------
off_680F0:      .long ost_norm          # DATA XREF: os_set_tsukene+4↑r
                .long ost_same
                .long ost_save
                .long ost_load
# ---------------------------------------------------------------------------
ost_norm:                               # DATA XREF: ROM:off_680F0↑o
                ld      4(g9), r3       # Label from official source
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r3, r15
                st      r15, (g11)[g12*1]
                ldt     8(g9), g0
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                lda     0x22004444, r15
                st      r15, (g11)[g12*1]
                mov     1, r15
                st      r15, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     g0, 0xFC(g13)
                b       loc_68290
# ---------------------------------------------------------------------------
ost_save:                               # DATA XREF: ROM:000680F8↑o
                ld      4(g9), r3       # Label from official source
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ldt     8(g9), g0
                lda     0x22004444, r15
                st      r15, (g11)[g12*1]
                mov     1, r15
                st      r15, (g11)[g12*1]
                lda     0x1B803737, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r3, r15
                st      r15, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                lda     0x21804343, r15
                st      r15, (g11)[g12*1]
                mov     2, r15
                st      r15, (g11)[g12*1]
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     g0, 0xFC(g13)
                b       loc_68290
# ---------------------------------------------------------------------------
ost_load:                               # DATA XREF: ROM:000680FC↑o
                lda     0x800101, r15 # Label from official source
                st      r15, (g11)[g12*1]
                ldt     8(g9), g0
                lda     0x22004444, r15
                st      r15, (g11)[g12*1]
                mov     2, r15
                st      r15, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     g0, 0xFC(g13)
                b       loc_68290
# ---------------------------------------------------------------------------
ost_same:                               # DATA XREF: ROM:000680F4↑o
                ldt     0xFC(g13), g0   # Label from official source
loc_68290:                              # CODE XREF: ROM:0006819C↑j
                stt     g0, 0x0(g8)
                stt     g0, 0x108(g13)
                ret
# =============== S U B R O U T I N E =======================================
os_set_coli:                            # DATA XREF: osage_dsp+370↑o
                ld      0x0(g13), r15   # Label from official source
                bbc     0, r15, loc_68378
                ld      0xC(g9), r3
                st      r3, 0x1C(g8)
                mulr    r3, r3, r3
                st      r3, 0x20(g8)
                ld      0x18(g9), r3
                st      r3, 0x30(g8)
                mulr    r3, r3, r3
                st      r3, 0x34(g8)
                ld      0x1C(g9), r3
                st      r3, 0x38(g8)
                mulr    r3, r3, r3
                st      r3, 0x3C(g8)
                shlo    0xE, 1, r13
                ld      0x20(g9), r14
                subi    r13, r14, r3
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                st      r15, 0x40(g8)
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                st      r15, 0x44(g8)
                ld      0x40(g8), r13
                ld      0x38(g8), r14
                mulr    r13, r14, r15
                st      r15, 0x48(g8)
                shlo    0xE, 1, r13
                ld      0x24(g9), r14
                addi    r13, r14, r3
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                st      r15, 0x4C(g8)
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                st      r15, 0x50(g8)
                ld      0x4C(g8), r13
                ld      0x38(g8), r14
                mulr    r13, r14, r15
                st      r15, 0x54(g8)
                ld      0x54(g8), r14
                notbit  0x1F, r14, r15
                st      r15, 0x54(g8)
loc_68378:                              # CODE XREF: os_set_coli+4↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      0x0(g9), r3
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r3, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r5
                ld      4(g9), r4
                ld      8(g9), r6
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], g4
                ld      (g11)[g12*1], g5
                ld      (g11)[g12*1], g6
                ld      0x10(g9), r4
                ld      0x14(g9), r6
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                lda     0x22004444, r15
                st      r15, (g11)[g12*1]
                mov     1, r15
                st      r15, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], g4
                ld      (g11)[g12*1], g5
                ld      (g11)[g12*1], g6
                stt     g4, 0x10(g8)
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                stt     g0, 0x24(g8)
                ld      0x28(g9), r3
                lda     0x1B803737, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r3, r15
                st      r15, (g11)[g12*1]
                lda     0x2B005656, r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], g4
                ld      (g11)[g12*1], g5
                ld      (g11)[g12*1], r3
                lda     0x7800F0F, r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                ld      (g11)[g12*1], r12
                ld      (g11)[g12*1], r9
                lda     0x2D005A5A, r15
                st      r15, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                ld      (g11)[g12*1], g4
                ld      (g11)[g12*1], g5
                ld      0x2C(g9), r3
                lda     0x2D805B5B, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                lda     0x2C805959, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                ld      0x30(g9), r6
                addr    r3, r6, r6
                st      r4, 0x60(g8)
                st      r5, 0x64(g8)
                st      r6, 0x68(g8)
                ld      0x40(g8), r8
                ld      0x44(g8), r9
                ld      0x48(g8), r10
                mulr    r10, r4, g0
                mulr    r6, r8, g1
                mulr    r9, r4, g2
                mulr    r5, r8, g3
                subr    g0, g1, g0
                subr    g2, g3, g2
                divr    g2, g0, r3
                st      r3, 0x58(g8)
                ld      0x34(g9), r3
                lda     0x2D805B5B, r15
loc_68564:                              # DATA XREF: MAIN_DATA:02447521↓o
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                lda     0x2C805959, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                ld      0x38(g9), r6
                addr    r3, r6, r6
                st      r4, 0x6C(g8)
                st      r5, 0x70(g8)
                st      r6, 0x74(g8)
                ld      0x4C(g8), r8
                ld      0x50(g8), r9
                ld      0x54(g8), r10
                mulr    r10, r4, g0
                mulr    r6, r8, g1
                mulr    r9, r4, g2
                mulr    r5, r8, g3
                subr    g0, g1, g0
                subr    g2, g3, g2
                divr    g2, g0, r3
                st      r3, 0x5C(g8)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ldt     0xE8(g13), r4
                ld      0xF4(g13), r7
                stt     r4, 0x0(g8)
                st      r7, 0xC(g8)
                ret
# End of function os_set_coli
# =============== S U B R O U T I N E =======================================
os_set_osage:                           # DATA XREF: osage_dsp+37C↑o
                ld      0x0(g13), r15   # Label from official source
                bbc     0, r15, loc_686EC
                ldt     0x114(g13), g0
                ldt     0x28(g9), r4
                lda     0x2E005C5C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                lda     0x18003030, r15
                st      r15, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                ld      0x24(g9), r4
                lda     0x2F005E5E, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                ldt     0x108(g13), r4
                lda     0x2E005C5C, r15
                st      r15, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                stt     r4, 0x108(g13)
                stt     r4, 0x0(g8)
                ldt     0xC(g9), r12
                stt     r12, 0xC(g8)
                ld      0x18(g9), r15
                st      r15, 0x18(g8)
                ld      0x24(g9), r15
                st      r15, 0x1C(g8)
                ldt     0x28(g9), r12
                stt     r12, 0x20(g8)
                b       loc_68754
# ---------------------------------------------------------------------------
loc_686EC:                              # CODE XREF: os_set_osage+4↑j
                ld      0x0(g13), r15
                ld      0x144(g13), r3
                bbs     7, r15, loc_68738
                bbs     1, r15, loc_68704
                ldt     0x28(g9), r4
                b       loc_68708
# ---------------------------------------------------------------------------
loc_68704:                              # CODE XREF: os_set_osage+FC↑j
                ldt     0x34(g9), r4
loc_68708:                              # CODE XREF: os_set_osage+104↑j
                cmpobe  0, r3, loc_68750
                lda     0x2F005E5E, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                b       loc_68750
# ---------------------------------------------------------------------------
loc_68738:                              # CODE XREF: os_set_osage+F8↑j
                lda     displacement, r4
                lda     displacement, r5
                lda     displacement, r6
loc_68750:                              # CODE XREF: os_set_osage:loc_68708↑j
                stt     r4, 0x20(g8)
loc_68754:                              # CODE XREF: os_set_osage+EC↑j
                ret
# End of function os_set_osage
# =============== S U B R O U T I N E =======================================
os_set_etc:                             # DATA XREF: osage_dsp+374↑o
                ld      0x0(g9), r15    # Label from official source
                st      r15, 0x0(g8)
                ld      4(g9), r3
                ld      0x0(g13), r15
                bbc     6, r15, loc_68774
                lda     0x3F4CCCCD, r3
loc_68774:                              # CODE XREF: os_set_etc+10↑j
                st      r3, 4(g8)
                ld      0x0(g13), r15
                bbc     4, r15, loc_68788
                mov     1, r15
                st      r15, 0x0(g8)
loc_68788:                              # CODE XREF: os_set_etc+24↑j
                ret
# End of function os_set_etc
# =============== S U B R O U T I N E =======================================
set_situation_flags:                    # CODE XREF: osage_dsp+3F0↑p
                ldob    0x1B1(g7), r3   # Label from official source
                cmpobne 3, r3, loc_6879C
                ld      0x0(g13), r15
                bbs     9, r15, loc_687A4
loc_6879C:                              # CODE XREF: set_situation_flags+4↑j
                ld      0xF8(g13), r3
                cmpibg  0, r3, loc_687B4
loc_687A4:                              # CODE XREF: set_situation_flags+C↑j
                ld      0x0(g13), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g13)
                b       loc_687C0
# ---------------------------------------------------------------------------
loc_687B4:                              # CODE XREF: set_situation_flags+14↑j
                ld      0x0(g13), r15
                setbit  1, r15, r15
                st      r15, 0x0(g13)
loc_687C0:                              # CODE XREF: set_situation_flags+24↑j
                ret
# End of function set_situation_flags
# =============== S U B R O U T I N E =======================================
# Some sort of time eater
osage_copro:                            # CODE XREF: osage_dsp+3E0↑p
                ld      0x4C(g13), r3   # Label from official source
                lda     0x25004A4A, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      0x44(g13), g9
                ld      0x48(g13), g8
loc_687E0:                              # CODE XREF: osage_copro+4C↓j
                ld      (g11)[g12*1], r3
                ld      (g9), r3
                addo    4, g9, g9
                addo    4, g8, g8
                cmpobe  0, r3, loc_6882C
                ld      dword_68814[r3*4], r4
                callx   (r4)
                ldl     dword_67520[r3*8], r4
                addo    r4, g9, g9
                addo    r5, g8, g8
                b       loc_687E0
# ---------------------------------------------------------------------------
dword_68814:    .long 0                 # DATA XREF: osage_copro+30↑r
                .long osage_return
                .long osage_return
                .long osage_return
                .long osage_return
                .long os_set_osage_after
# ---------------------------------------------------------------------------
loc_6882C:                              # CODE XREF: osage_copro+2C↑j
                ret
# End of function osage_copro
# =============== S U B R O U T I N E =======================================
os_set_osage_after:                     # DATA XREF: osage_copro+64↑o
                ldob    0x1B1(g7), r3   # Label from official source
                cmpobne 4, r3, loc_688A4
                lda     0x169, r13
                ldos    0x1A8(g7), r14
                cmpobe  r13, r14, loc_68858
                lda     0x16A, r13
                ldos    0x1A8(g7), r14
                cmpobe  r13, r14, loc_68858
                ldob    0x84C(g7), r14
                cmpobne 3, r14, loc_688A4
loc_68858:                              # CODE XREF: os_set_osage_after+10↑j
                ld      0x50E400, g3
                ld      0x0(g13), g2
                chkbit  5, g2
                mov     0, g0
                teste   g2
                cmpo    0, g0
                ldob    4(g7), g1
                teste   r15
                or      g2, r15, g2
                mov     g3, r3
                call    set_obj_fifo
                cmpobe  g3, r3, loc_688A0
                mov     0, r15
                st      r15, (g3)
                addo    4, g3, g3
                st      g3, 0x50E400
loc_688A0:                              # CODE XREF: os_set_osage_after+58↑j
                b       loc_688EC
# ---------------------------------------------------------------------------
loc_688A4:                              # CODE XREF: os_set_osage_after+4↑j
                ld      0x50E400, g3
                ld      0x0(g13), g2
                chkbit  5, g2
                ld      0x18(g9), g0
                teste   g2
                cmpo    0, g0
                ldob    4(g7), g1
                teste   r15
                or      g2, r15, g2
                mov     g3, r3
                call    set_obj_fifo
                cmpobe  g3, r3, loc_688EC
                ld      0x1C(g9), r15
                st      r15, (g3)
                addo    4, g3, g3
                st      g3, 0x50E400
loc_688EC:                              # CODE XREF: os_set_osage_after:loc_688A0↑j
                ld      0x0(g8), r15
                st      r15, 0xF8(g13)
                ldos    6(g13), r3
                cmpoble 2, r3, loc_68910
                lda     displacement, r12
                mov     r12, r13
                mov     r12, r14
                stt     r12, 0xC(g8)
loc_68910:                              # CODE XREF: os_set_osage_after+C8↑j
                ret
# End of function os_set_osage_after
# ---------------------------------------------------------------------------
off_68914:      .long dword_689E4       # DATA XREF: calc_kaze+11C↓r
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
                .long dword_689E4
dword_689E4:    .long 0x11C7            # DATA XREF: ROM:off_68914↑o
                .long 0
                .long 0x11C7, 0
                .long 0x11C7, 0
                .long 0x11C7, 0
                .long 0xC60
                .long 0x3FA8F5C3
                .long 0x6C1
                .long 0x3E52F1AA
                .long 0xA50
                .long 0x3F8AC083
                .long 0x642
                .long 0x3EDA9FBE
                .long 0x800
                .long 0x3F000000
                .long 0x700
                .long 0x3EDA9FBE
                .long 0x93F
                .long 0x3F19999A
                .long 0x57A
                .long 0x3E27EF9E
                .long 0x11C7
                .long 0x3F666666
                .long 0x1000
                .long 0x3E4CCCCD
                .long 0x11C7
                .long 0x3F666666
                .long 0x765
                .long 0x3E083127
                .long 0x71C
                .long 0x3EEB851F
                .long 0x456
                .long 0x3E49BA5E
                .long 0x800
                .long 0x3E99999A
                .long 0x7F7
                .long 0x3E5F3B64
                .long 0x9F5
                .long 0x3F666666
                .long 0x6D4
                .long 0x3E6872B0
                .long 0x800
                .long 0
                .long send_tex_col_part
                .long 0
# =============== S U B R O U T I N E =======================================
# Kaze = "Wind"
calc_kaze:                              # CODE XREF: osage_dsp:loc_67958↑p
                ld      0x0(g13), r15   # Label from official source
                bbs     4, r15, loc_68C68
                ld      0x0(g13), r15
                bbs     6, r15, loc_68C68
                shlo    0xC, 0xF, r15
                st      r15, 0x134(g13)
                ld      0x0(g13), r15
                setbit  0xA, r15, r15
                st      r15, 0x0(g13)
                ldob    stage_num, r15
                lda     stage8, r14
                cmpobe  r14, r15, loc_68B1C
                lda     displacement, r14
                cmpobe  r14, r15, loc_68B34
                lda     start_ip_add+1, r14
                cmpobe  r14, r15, loc_68B34
                lda     prcb+2, r14
                cmpobe  r14, r15, loc_68B34
                lda     displacement2, r14
                cmpobe  r14, r15, loc_68B4C
                lda     displacement, r14
                cmpobe  r14, r15, loc_68B64
                b       loc_68B7C
# ---------------------------------------------------------------------------
loc_68B1C:                              # CODE XREF: calc_kaze+34↑j
                shlo    0xC, 7, r15
                st      r15, 0x134(g13)
                ld      0x0(g13), r15
                setbit  0xA, r15, r15
                st      r15, 0x0(g13)
                b       loc_68BB0
# ---------------------------------------------------------------------------
loc_68B34:                              # CODE XREF: calc_kaze+40↑j
                shlo    0xC, 0xF, r15
                st      r15, 0x134(g13)
                ld      0x0(g13), r15
                setbit  0xA, r15, r15
                st      r15, 0x0(g13)
                b       loc_68BB0
# ---------------------------------------------------------------------------
loc_68B4C:                              # CODE XREF: calc_kaze+64↑j
                shlo    0xE, 3, r15
                st      r15, 0x134(g13)
                ld      0x0(g13), r15
                clrbit  0xA, r15, r15
                st      r15, 0x0(g13)
                b       loc_68BB0
# ---------------------------------------------------------------------------
loc_68B64:                              # CODE XREF: calc_kaze+70↑j
                shlo    0xF, 1, r15
                st      r15, 0x134(g13)
                ld      0x0(g13), r15
                clrbit  0xA, r15, r15
                st      r15, 0x0(g13)
                b       loc_68BB0
# ---------------------------------------------------------------------------
loc_68B7C:                              # CODE XREF: calc_kaze+74↑j
                ldob    also_sub_mode, r15
                lda     sys_proc_table, r14
                lda     0x8000(r14), r14
                bbc     r15, r14, loc_68C68
                ldob    winner, r15
                ldob    4(g7), r14
                cmpobne r15, r14, loc_68C68
                ldob    0x1B1(g7), r14
                cmpobe  1, r14, loc_68C68
loc_68BB0:                              # CODE XREF: calc_kaze+8C↑j
                ld      0x0(g13), r15
                setbit  9, r15, r15
                st      r15, 0x0(g13)
                ldob    0x1B0(g7), r3
                ld      off_68914[r3*4], r3
                ld      0x0(g13), r15
                bbs     0xA, r15, loc_68BD4
                lda     8(r3), r3
loc_68BD4:                              # CODE XREF: calc_kaze+128↑j
                ldos    0x0(r3), g0
                ld      4(r3), g2
                ld      0x130(g13), r10
                addo    g0, r10, r10
                st      r10, 0x130(g13)
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                lda     0x40000000, r4
                addr    r3, r4, r3
                mulr    g2, r3, r9
                ld      0x50A000, r3
                mulr    r9, r3, r9
                ld      0x134(g13), r3
                lda     0x12802525, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0x12002424, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                ld      0x50A000, r5
                cmpr    r9, r5
                bg      loc_68C60
                mov     r9, r5
loc_68C60:                              # CODE XREF: calc_kaze+1B4↑j
                stt     r4, 0x138(g13)
                b       loc_68C98
# ---------------------------------------------------------------------------
loc_68C68:                              # CODE XREF: calc_kaze+4↑j
                ld      0x0(g13), r15
                clrbit  9, r15, r15
                st      r15, 0x0(g13)
                mov     0, r15
                st      r15, 0x130(g13)
                lda     displacement, r4
                lda     displacement, r5
                lda     displacement, r6
                stt     r4, 0x138(g13)
loc_68C98:                              # CODE XREF: calc_kaze+1C0↑j
                ret
# End of function calc_kaze
# =============== S U B R O U T I N E =======================================
fa_kill_osage:                          # DATA XREF: ROM:0008F29C↓o
                ld      mod_fa_osage0_1, r7
                ld      mod_fa_osage0_2, r8
                ld      frame_counter, r3
                bbs     0, r3, loc_68CC4
                mov     r7, r15
                mov     r8, r7
                mov     r15, r8
loc_68CC4:                              # CODE XREF: fa_kill_osage+18↑j
                ldl     TIMER_03, r14
                lda     0xFFFFF, r14
                and     r14, r15, r15
                subi    r15, r14, r15
                subo    0x12, r15, r15
                divo    0x19, r15, g6
                mov     r7, g7
                call    sub_68CF8
                mov     r8, g7
                call    sub_68CF8
                ret
# End of function fa_kill_osage
# =============== S U B R O U T I N E =======================================
sub_68CF8:                              # CODE XREF: fa_kill_osage+4C↑p
                mov     0, r7
                ld      0xC(g7), r3
                lda     osage_dsp, r4
                cmpobne r3, r4, loc_68D50
                ld      0x0(g7), r3
                bbs     0, r3, loc_68D50
                bbc     2, r3, loc_68D50
                ld      0x128(g7), r7
                lda     0x4268, r6
                addo    r7, g6, r3
                cmpobl  r3, r6, loc_68D50
                ld      0x0(g7), r15
                setbit  3, r15, r15
                st      r15, 0x0(g7)
                ld      0x500164, r15
                lda     1(r15), r15
                st      r15, 0x500164
                b       loc_68D60
# ---------------------------------------------------------------------------
loc_68D50:                              # CODE XREF: sub_68CF8+10↑j
                ld      0x0(g7), r15
                clrbit  3, r15, r15
                st      r15, 0x0(g7)
                addo    r7, g6, g6
loc_68D60:                              # CODE XREF: sub_68CF8+54↑j
                ret
# End of function sub_68CF8
# ---------------------------------------------------------------------------
osage_per_character:.long osage_null    # DATA XREF: osage_init+80↑o
                .long osage_null        # Tails
                .long osage_null        # Amy
                .long osage_null        # Metal Sonic
                .long osage_fang        # Fang
                .long osage_bark        # Bark
                .long osage_null        # Knuckles
                .long osage_espio       # Espio
                .long osage_null        # Eggman
                .long osage_null        # Big Eggman
                .long osage_bean        # Bean
                .long osage_null        # Eggman Boss
                .long osage_null        # Eggman UFO
                .long osage_null        # Egg Robo
                .long osage_null        # Rocket Metal
                .long osage_honey       # Honey
                .long osage_null        # Super Sonic
                .long osage_null        # DUM9
                .long osage_null        # DUM10
                .long osage_null        # DUM11
                .long osage_null        # DUM12
                .long osage_null        # DUM13
                .long osage_null        # DUM14
                .long osage_null        # DUM15
                .long osage_null        # DUM16
                .long osage_null        # DUM17
                .long osage_null        # SONIC_I
                .long osage_null        # TAILS_I
                .long osage_null        # AMY_I
                .long osage_null        # METAL_I
                .long osage_fang_I      # FANG_I
                .long osage_bark_I      # KUMA_I
                .long osage_null        # KNUCKLE_I
                .long osage_espio_I     # ESPIO_I
                .long osage_null        # EGGMAN_I
                .long osage_null        # EGGMANB_I
                .long osage_bean_I      # BEAN_I
                .long osage_null        # Eggman Boss_I
                .long osage_null        # Eggman UFO_I
                .long osage_null        # Egg Robo_I
                .long osage_null        # Rocket Metal_I
kill_osage_sub: .long osage_honey_I     # Label from official source
                .long osage_null        # Super Sonic_I
                .long osage_null
                .long osage_null
                .long osage_null
                .long osage_null
                .long osage_null
                .long osage_null
                .long osage_null
                .long osage_null
                .long osage_null
osage_fang:     .long 1                 # DATA XREF: osage_init+88↑o
                .long 1
                .long 0x382D
                .long 0x8000
                .long 0
                .long 0xBCE56042
                .long 0x3E75C28F
                .long 0
                .long 0x3F800000
                .long 2
                .long 0
                .long 0x3C656042
                .long 0xBE21CAC1
                .long 0x3DED9168
                .long 0xBBC49BA6
                .long 0xBD6D9168
                .long 0x3D83126F
                .long 0x3DE147AE
                .long 0x3B05
                .long 0x47D2
                .long 9
                .long 0x4D70
                .long 0x3DB851EC
                .long 0xC1EB
                .long 0x3DFDF3B6
                .long 3
                .long 1
                .long 0x3F4CCCCD
                .long 4
                .long 2
                .long 1
                .long 0xBE800000
                .long 0x3E3851EC
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 428
                .long 428
                .long 0
                .long 0x3F800000
                .long 0x3E4CCCCD
                .long 0xBF008312
                .long 0
                .long 0x3E4CCCCD
                .long 0xBF008312
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 429
                .long 429
                .long 0
                .long 0x3F800000
                .long 0x3E4DD2F2
                .long 0x3F800000
                .long 0
                .long 0x3E4DD2F2
                .long 0x3F800000
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 430
                .long 430
                .long 0
                .long 0x3F4CCCCD
                .long 0x3E4ED917
                .long 0x3F800000
                .long 0
                .long 0x3E4ED917
                .long 0x3F800000
                .long 0
                .long 0
osage_fang_I:   .long 1                 # DATA XREF: ROM:00068DDC↑o
                .long 1
                .long 0x382D
                .long 0x8000
                .long 0
                .long 0xBCE56042
                .long 0x3E75C28F
                .long 0
                .long 0x3F800000
                .long 2
                .long 0
                .long 0x3C656042
                .long 0xBE21CAC1
                .long 0x3DED9168
                .long 0xBBC49BA6
                .long 0xBD6D9168
                .long 0x3D83126F
                .long 0x3DE147AE
                .long 0x3B05
                .long 0x47D2
                .long 9
                .long 0x4D70
                .long 0x3DB851EC
                .long 0xC1EB
                .long 0x3DFDF3B6
                .long 3
                .long 1
                .long 0x3F4CCCCD
                .long 4
                .long 2
                .long 1
                .long 0xBE800000
                .long 0x3E3851EC
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1514
                .long 1514
                .long 0
                .long 0x3F800000
                .long 0x3E4CCCCD
                .long 0xBF008312
                .long 0
                .long 0x3E4CCCCD
                .long 0xBF008312
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1519
                .long 1519
                .long 0
                .long 0x3F800000
                .long 0x3E4DD2F2
                .long 0x3F800000
                .long 0
                .long 0x3E4DD2F2
                .long 0x3F800000
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1524
                .long 1524
                .long 0
                .long 0x3F4CCCCD
                .long 0x3E4ED917
                .long 0x3F800000
                .long 0
                .long 0x3E4ED917
                .long 0x3F800000
                .long 0
                .long 0
osage_bean:     .long 1                 # DATA XREF: ROM:00068D8C↑o
                .long 1
                .long 0x382D
                .long 0x8000
                .long 0
                .long 0xBCE56042
                .long 0x3E75C28F
                .long 0
                .long 0x3F800000
                .long 2
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 9
                .long 0
                .long 0
                .long 0xC1EB
                .long 0
                .long 3
                .long 0
                .long 0x3F8147AE
                .long 4
                .long 0
                .long 1
                .long 0x3EAE147B
                .long 0x3DE56042
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1812
                .long 1812
                .long 0
                .long 0x3F800000
                .long 0xBC23D70A
                .long 0
                .long 0x3C23D70A
                .long 0xBC23D70A
                .long 0
                .long 0x3C23D70A
                .long 4
                .long 0
                .long 1
                .long 0x3EAE147B
                .long 0x3DE56042
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1812
                .long 1812
                .long 0
                .long 0x3F800000
                .long 0xBC23D70A
                .long 0
                .long 0xBC23D70A
                .long 0xBC23D70A
                .long 0
                .long 0xBC23D70A
                .long 3
                .long 1
                .long 0x3F800000
                .long 4
                .long 0
                .long 1
                .long 0xBE010625
                .long 0x3E6C8B44
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1810
                .long 1810
                .long 0
                .long 0x3F800000
                .long 0x3C03126F
                .long 0xBC8B4396
                .long 0
                .long 0x3C03126F
                .long 0xBC8B4396
                .long 0
                .long 4
                .long 0
                .long 1
                .long 0xBE010625
                .long 0x3E6C8B44
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1811
                .long 1811
                .long 0
                .long 0x3F800000
                .long 0x3C23D70A
                .long 0xBC75C28F
                .long 0
                .long 0x3C23D70A
                .long 0xBC75C28F
                .long 0
                .long 0
osage_bean_I:   .long 1                 # DATA XREF: ROM:00068DF4↑o
                .long 1
                .long 0x382D
                .long 0x8000
                .long 0
                .long 0xBCE56042
                .long 0x3E75C28F
                .long 0
                .long 0x3F800000
                .long 2
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 9
                .long 0
                .long 0
                .long 0xC1EB
                .long 0
                .long 3
                .long 0
                .long 0x3F8147AE
                .long 4
                .long 0
                .long 1
                .long 0x3EAE147B
                .long 0x3DE56042
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1921
                .long 1921
                .long 0
                .long 0x3F800000
                .long 0xBC23D70A
                .long 0
                .long 0x3C23D70A
                .long 0xBC23D70A
                .long 0
                .long 0x3C23D70A
                .long 4
                .long 0
                .long 1
                .long 0x3EAE147B
                .long 0x3DE56042
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1921
                .long 1921
                .long 0
                .long 0x3F800000
                .long 0xBC23D70A
                .long 0
                .long 0xBC23D70A
                .long 0xBC23D70A
                .long 0
                .long 0xBC23D70A
                .long 3
                .long 1
                .long 0x3F800000
                .long 4
                .long 0
                .long 1
                .long 0xBE010625
                .long 0x3E6C8B44
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1919
                .long 1919
                .long 0
                .long 0x3F800000
                .long 0x3C03126F
                .long 0xBC8B4396
                .long 0
                .long 0x3C03126F
                .long 0xBC8B4396
                .long 0
                .long 4
                .long 0
                .long 1
                .long 0xBE010625
                .long 0x3E6C8B44
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1920
                .long 1920
                .long 0
                .long 0x3F800000
                .long 0x3C23D70A
                .long 0xBC75C28F
                .long 0
                .long 0x3C23D70A
                .long 0xBC75C28F
                .long 0
                .long 0
osage_espio:    .long 1                 # DATA XREF: ROM:00068D80↑o
                .long 1
                .long 0x382D
                .long 0x8000
                .long 0
                .long 0xBCE56042
                .long 0x3E75C28F
                .long 0
                .long 0x3F800000
                .long 2
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 9
                .long 0
                .long 0
                .long 0xC1EB
                .long 0
                .long 3
                .long 0
                .long 0x3F666666
                .long 4
                .long 0
                .long 1
                .long 0xBEB5C28F
                .long 0x3DED9168
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1192
                .long 1192
                .long 0
                .long 0x3F800000
                .long 0xBCA3D70A
                .long 0xBDC49BA6
                .long 0
                .long 0xBCA3D70A
                .long 0xBDC49BA6
                .long 0
                .long 0
osage_espio_I:  .long 1                 # DATA XREF: ROM:00068DE8↑o
                .long 1
                .long 0x382D
                .long 0x8000
                .long 0
                .long 0xBCE56042
                .long 0x3E75C28F
                .long 0
                .long 0x3F800000
                .long 2
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 9
                .long 0
                .long 0
                .long 0xC1EB
                .long 0
                .long 3
                .long 0
                .long 0x3F666666
                .long 4
                .long 0
                .long 1
                .long 0xBEB5C28F
                .long 0x3DED9168
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 1487
                .long 1487
                .long 0
                .long 0x3F800000
                .long 0xBCA3D70A
                .long 0xBDC49BA6
                .long 0
                .long 0xBCA3D70A
                .long 0xBDC49BA6
                .long 0
                .long 0
osage_bark:     .long 1                 # DATA XREF: ROM:00068D78↑o
                .long 1
                .long 0x382D
                .long 0x8000
                .long 0
                .long 0xBCE56042
                .long 0x3E75C28F
                .long 0
                .long 0x3F800000
                .long 2
                .long 2
                .long 0
                .long 0xBEBEF9DB
                .long 0x3EB53F7D
                .long 0
                .long 0
                .long 0x3EB53F7D
                .long 0x3F483127
                .long 0
                .long 0
                .long 2
                .long 0
                .long 0
                .long 0xC1EB
                .long 0
                .long 3
                .long 0
                .long 0x3F666666
                .long 4
                .long 0
                .long 2
                .long 0xBEAA7EFA
                .long 0
                .long 0xBEB851EC
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 2239
                .long 2239
                .long 0
                .long 0x3ECCCCCD
                .long 0x3DF5F6FD
                .long 0xBCFDF3B6
                .long 0
                .long 0x3DF5F6FD
                .long 0xBCFDF3B6
                .long 0
                .long 0
osage_bark_I:   .long 1                 # DATA XREF: ROM:00068DE0↑o
                .long 1
                .long 0x382D
                .long 0x8000
                .long 0
                .long 0xBCE56042
                .long 0x3E75C28F
                .long 0
                .long 0x3F800000
                .long 2
                .long 2
                .long 0
                .long 0xBEBEF9DB
                .long 0x3EB53F7D
                .long 0
                .long 0
                .long 0x3EB53F7D
                .long 0x3F483127
                .long 0
                .long 0
                .long 2
                .long 0
                .long 0
                .long 0xC1EB
                .long 0
                .long 3
                .long 0
                .long 0x3F666666
                .long 4
                .long 0
                .long 2
                .long 0xBEAA7EFA
                .long 0
                .long 0xBEB851EC
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 2333
                .long 2333
                .long 0
                .long 0x3ECCCCCD
                .long 0x3DF5F6FD
                .long 0xBCFDF3B6
                .long 0
                .long 0x3DF5F6FD
                .long 0xBCFDF3B6
                .long 0
                .long 0
osage_honey:    .long 1                 # DATA XREF: ROM:00068DA0↑o
                .long 1
                .long 0x382D
                .long 0x8000
                .long 0
                .long 0xBCE56042
                .long 0x3E75C28F
                .long 0
                .long 0x3F800000
                .long 2
                .long 2
                .long 0
                .long 0xBEBEF9DB
                .long 0x3F370A3D
                .long 0
                .long 0
                .long 0x3EB53F7D
                .long 0xBEDC28F6
                .long 0x8AE1
                .long 0xA9F4
                .long 2
                .long 0x34E8
                .long 0
                .long 0x56C1
                .long 0xBF08F5C3
                .long 3
                .long 0
                .long 0x3F666666
                .long 4
                .long 0
                .long 2
                .long 0xBED0E560
                .long 0x3ED70A3D
                .long 0xBF3374BC
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 3525
                .long 3525
                .long 0
                .long 0x3ECDD2F2
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 3526
                .long 3526
                .long 0
                .long 0x3F0353F8
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 3527
                .long 3527
                .long 0
                .long 0x3F0353F8
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 3
                .long 0
                .long 0x3F666666
                .long 4
                .long 0
                .long 2
                .long 0xBED0E560
                .long 0xBED70A3D
                .long 0xBF3374BC
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 3525
                .long 3525
                .long 0
                .long 0x3ECDD2F2
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 3526
                .long 3526
                .long 0
                .long 0x3F0353F8
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 3527
                .long 3527
                .long 0
                .long 0x3F0353F8
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 2
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 9
                .long 0
                .long 0
                .long 0x1555
                .long 0
                .long 3
                .long 0
                .long 0x3F666666
                .long 4
                .long 0
                .long 1
                .long 0xBE828F5C
                .long 0x3E16872B
                .long 0xBC1374BC
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 3528
                .long 3528
                .long 0
                .long 0x3F800000
                .long 0xBCA3D70A
                .long 0xBDC49BA6
                .long 0
                .long 0xBCA3D70A
                .long 0xBDC49BA6
                .long 0
                .long 0
osage_honey_I:  .long 1                 # DATA XREF: ROM:kill_osage_sub↑o
                .long 1
                .long 0x382D
                .long 0x8000
                .long 0
                .long 0xBCE56042
                .long 0x3E75C28F
                .long 0
                .long 0x3F800000
                .long 2
                .long 2
                .long 0
                .long 0xBEBEF9DB
                .long 0x3F370A3D
                .long 0
                .long 0
                .long 0x3EB53F7D
                .long 0xBEDC28F6
                .long 0x8AE1
                .long 0xA9F4
                .long 2
                .long 0x34E8
                .long 0
                .long 0x56C1
                .long 0xBF08F5C3
                .long 3
                .long 0
                .long 0x3F666666
                .long 4
                .long 0
                .long 2
                .long 0xBED0E560
                .long 0x3ED70A3D
                .long 0xBF3374BC
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 2740
                .long 2740
                .long 0
                .long 0x3ECDD2F2
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 2741
                .long 2741
                .long 0
                .long 0x3F0353F8
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 2742
                .long 2742
                .long 0
                .long 0x3F0353F8
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 3
                .long 0
                .long 0x3F666666
                .long 4
                .long 0
                .long 2
                .long 0xBED0E560
                .long 0xBED70A3D
                .long 0xBF3374BC
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 2740
                .long 2740
                .long 0
                .long 0x3ECDD2F2
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 2741
                .long 2741
                .long 0
                .long 0x3F0353F8
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 2742
                .long 2742
                .long 0
                .long 0x3F0353F8
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 0x3B9374BC
                .long 0
                .long 0
                .long 2
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 9
                .long 0
                .long 0
                .long 0x1555
                .long 0
                .long 3
                .long 0
                .long 0x3F666666
                .long 4
                .long 0
                .long 1
                .long 0xBE828F5C
                .long 0x3E16872B
                .long 0xBC1374BC
                .long 5
                .long 0x3F800000
                .long 0x3F800000
                .long 0
                .long 0
                .long 0
                .long 0
                .long 2743
                .long 2743
                .long 0
                .long 0x3F800000
                .long 0xBCA3D70A
                .long 0xBDC49BA6
                .long 0
                .long 0xBCA3D70A
                .long 0xBDC49BA6
                .long 0
                .long 0
osage_null:     .long 0                 # DATA XREF: osage_init:loc_675F4↑o
# =============== S U B R O U T I N E =======================================
camera_work:                            # CODE XREF: camera_init+210↑p
                ldob    0x40(g13), r3   # Label from official source
                ld      cam_mode_list[r3*4], r4
                callx   (r4)
cam_mode_ret:                           # DATA XREF: ROM:cam_mode_list↓o
                ret
# End of function camera_work
# =============== S U B R O U T I N E =======================================
sub_69DFC:                              # DATA XREF: ROM:0009C7F4↓o
                addo    4, sp, sp
                st      g13, -4(sp)
                lda     0x3B4(g13), g13
                call    sub_69EC0
                ld      -4(sp), g13
                subo    4, sp, sp
                lda     check_word3+1, r15
                stib    r15, 0x40(g13)  # cam_mode = 19
                b       loc_69E4C
# ---------------------------------------------------------------------------
loc_69E2C:                              # DATA XREF: ROM:0009C7F8↓o
                addo    4, sp, sp
                st      g13, -4(sp)
                lda     0x3B4(g13), g13
                call    sub_69F60
                ld      -4(sp), g13
                subo    4, sp, sp
loc_69E4C:                              # CODE XREF: sub_69DFC+2C↑j
                lda     0x3B4(g13), r3
                ldt     0x5C(r3), r4
                ldt     0x44(r3), r8
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                stt     r4, 0x18(g13)
                ret
# End of function sub_69DFC
# =============== S U B R O U T I N E =======================================
sub_69EC0:                              # CODE XREF: adv_movie_cont+F04↑p
                xor     r3, r3, r3
                stos    r3, 0x0(g13)
                lda     displacement, r15
                st      r15, 8(g13)
                lda     displacement, r15
                st      r15, 0xC(g13)
                lda     displacement, r15
                st      r15, 0x10(g13)
                lda     displacement, r15
                st      r15, 0x1C(g13)
                lda     displacement, r15
                st      r15, 0x20(g13)
                lda     displacement, r15
                st      r15, 0x24(g13)
                lda     displacement, r15
                st      r15, 0x30(g13)
                lda     displacement, r15
                st      r15, 0x34(g13)
                lda     displacement, r15
                st      r15, 0x38(g13)
                lda     displacement, r15
                st      r15, 0x14(g13)
                lda     displacement, r15
                st      r15, 0x28(g13)
                lda     displacement, r15
                st      r15, 0x3C(g13)
                ld      4(g13), g0
                b       loc_69F90
# End of function sub_69EC0
# =============== S U B R O U T I N E =======================================
sub_69F60:                              # CODE XREF: adv_movie_cont+10B0↑p
                ld      4(g13), g0
                ldos    0xE(g0), r4
                cmpobe  0, r4, loc_69FE4
                cmpobe  1, r4, loc_69F78
                call    sub_69FF4
                call    sub_6A078
loc_69F78:                              # CODE XREF: sub_69F60+C↑j
                ldos    0x0(g13), r3
                ldos    0x1C(g0), r5
                cmpobe  r3, r5, loc_69F88
                b       loc_69FE0
# ---------------------------------------------------------------------------
loc_69F88:                              # CODE XREF: sub_69F60+20↑j
                addo    0x10, g0, g0
                st      g0, 4(g13)
loc_69F90:                              # CODE XREF: sub_69EC0+9C↑j
                ldos    0xE(g0), r4
                cmpobe  1, r4, loc_69FA8
                ldos    0x1E(g0), r4
                cmpobe  2, r4, loc_69FAC
                cmpobe  1, r4, loc_69FA8
                cmpobe  0, r4, loc_69FB4
loc_69FA8:                              # CODE XREF: sub_69F60+34↑j
                b       loc_69FE0
# ---------------------------------------------------------------------------
loc_69FAC:                              # CODE XREF: sub_69F60+3C↑j
                call    sub_6A170
                b       loc_69FE0
# ---------------------------------------------------------------------------
loc_69FB4:                              # CODE XREF: sub_69F60+44↑j
                lda     displacement, r15
                st      r15, 0x18(g13)
                lda     displacement, r15
                st      r15, 0x2C(g13)
                lda     displacement, r15
                st      r15, 0x40(g13)
                call    sub_6A260
                b       loc_69FE0
# ---------------------------------------------------------------------------
loc_69FE0:                              # CODE XREF: sub_69F60+24↑j
                call    sub_6A0E4
loc_69FE4:                              # CODE XREF: sub_69F60+8↑j
                ldos    0x0(g13), r3
                addo    1, r3, r3
                stos    r3, 0x0(g13)
                ret
# End of function sub_69F60
# =============== S U B R O U T I N E =======================================
sub_69FF4:                              # CODE XREF: sub_69F60+10↑p
                ldos    0xC(g0), r3
                ldos    0x0(g13), r4
                cvtir   r3, r3
                cvtir   r4, r4
                subr    r3, r4, r3
                ld      8(g13), r4
                ld      0xC(g13), r5
                ld      0x10(g13), r6
                bal     sub_6A048
                st      r4, 0x14(g13)
                ld      0x1C(g13), r4
                ld      0x20(g13), r5
                ld      0x24(g13), r6
                bal     sub_6A048
                st      r4, 0x28(g13)
                ld      0x30(g13), r4
                ld      0x34(g13), r5
                ld      0x38(g13), r6
                bal     sub_6A048
                st      r4, 0x3C(g13)
                ret
# End of function sub_69FF4
# =============== S U B R O U T I N E =======================================
sub_6A048:                              # CODE XREF: sub_69FF4+20↑p
                mulr    r3, r3, r7
                lda     0x40400000, r8
                lda     0x40000000, r9
                mulr    r4, r7, r4
                mulr    r8, r4, r4
                mulr    r5, r3, r5
                mulr    r9, r5, r5
                subr    r5, r4, r4
                addr    r4, r6, r4
                bx      (g14)
# End of function sub_6A048
# =============== S U B R O U T I N E =======================================
sub_6A078:                              # CODE XREF: sub_69F60+14↑p
                ldos    0xC(g0), r3
                ldos    0x0(g13), r4
                cvtir   r3, r3
                cvtir   r4, r4
                subr    r3, r4, r3
                ld      8(g13), r4
                ld      0xC(g13), r5
                bal     sub_6A0C0
                st      r4, 0x50(g13)
                ld      0x1C(g13), r4
                ld      0x20(g13), r5
                bal     sub_6A0C0
                st      r4, 0x54(g13)
                ld      0x30(g13), r4
                ld      0x34(g13), r5
                bal     sub_6A0C0
                st      r4, 0x58(g13)
                ret
# End of function sub_6A078
# =============== S U B R O U T I N E =======================================
sub_6A0C0:                              # CODE XREF: sub_6A078+1C↑p
                lda     0x40C00000, r6
                lda     0x40000000, r7
                mulr    r4, r6, r4
                mulr    r3, r4, r4
                mulr    r5, r7, r5
                addr    r4, r5, r4
                bx      (g14)
# End of function sub_6A0C0
# =============== S U B R O U T I N E =======================================
sub_6A0E4:                              # CODE XREF: sub_69F60:loc_69FE0↑p
                ldos    0xC(g0), r3
                ldos    0x0(g13), r4
                cvtir   r3, r3
                cvtir   r4, r4
                subr    r3, r4, r3
                ld      8(g13), r4
                ld      0xC(g13), r5
                ld      0x10(g13), r6
                ld      0x0(g0), r7
                bal     sub_6A14C
                mov     r4, r10
                ld      0x1C(g13), r4
                ld      0x20(g13), r5
                ld      0x24(g13), r6
                ld      4(g0), r7
                bal     sub_6A14C
                mov     r4, r11
                ld      0x30(g13), r4
                ld      0x34(g13), r5
                ld      0x38(g13), r6
                ld      8(g0), r7
                bal     sub_6A14C
                st      r10, 0x5C(g13)
                st      r11, 0x60(g13)
                st      r4, 0x64(g13)
                ret
# End of function sub_6A0E4
# =============== S U B R O U T I N E =======================================
sub_6A14C:                              # CODE XREF: sub_6A0E4+24↑p
                mulr    r3, r3, r8
                mulr    r3, r8, r9
                mulr    r4, r9, r4
                mulr    r5, r8, r5
                mulr    r6, r3, r6
                subr    r5, r4, r4
                addr    r4, r6, r4
                addr    r4, r7, r4
                bx      (g14)
# End of function sub_6A14C
# =============== S U B R O U T I N E =======================================
sub_6A170:                              # CODE XREF: sub_69F60:loc_69FAC↑p
                ldos    0xC(g0), r3
                ldos    0x1C(g0), r5
                ldos    0x2C(g0), r6
                cvtir   r3, r3
                cvtir   r5, r5
                cvtir   r6, r6
                subr    r3, r6, r4
                subr    r3, r5, r3
                ld      0x0(g0), r5
                ld      0x10(g0), r7
                ld      0x20(g0), r8
                subr    r5, r8, r6
                subr    r5, r7, r5
                ld      0x14(g13), r7
                bal     sub_6A20C
                st      r5, 8(g13)
                st      r6, 0xC(g13)
                st      r7, 0x10(g13)
                ld      4(g0), r5
                ld      0x14(g0), r7
                ld      0x24(g0), r8
                subr    r5, r8, r6
                subr    r5, r7, r5
                ld      0x28(g13), r7
                bal     sub_6A20C
                st      r5, 0x1C(g13)
                st      r6, 0x20(g13)
                st      r7, 0x24(g13)
                ld      8(g0), r5
                ld      0x18(g0), r7
                ld      0x28(g0), r8
                subr    r5, r8, r6
                subr    r5, r7, r5
                ld      0x3C(g13), r7
                bal     sub_6A20C
                st      r5, 0x30(g13)
                st      r6, 0x34(g13)
                st      r7, 0x38(g13)
                ret
# End of function sub_6A170
# =============== S U B R O U T I N E =======================================
sub_6A20C:                              # CODE XREF: sub_6A170+38↑p
                mulr    r3, r3, r12
                mulr    r4, r4, r13
                mulr    r3, r4, r14
                subr    r4, r3, r15
                mulr    r12, r13, r8
                mulr    r8, r15, r8
                mulr    r7, r14, r9
                mulr    r9, r15, r9
                mulr    r5, r13, r10
                mulr    r6, r12, r11
                addr    r9, r10, r5
                subr    r11, r5, r5
                divr    r8, r5, r5
                addr    r3, r4, r6
                mulr    r9, r6, r6
                mulr    r4, r10, r10
                mulr    r3, r11, r11
                addr    r6, r10, r6
                subr    r11, r6, r6
                divr    r8, r6, r6
                bx      (g14)
# End of function sub_6A20C
# =============== S U B R O U T I N E =======================================
sub_6A260:                              # CODE XREF: sub_69F60+78↑p
                ldos    0xC(g0), r3
                ldos    0x1C(g0), r4
                cvtir   r3, r3
                cvtir   r4, r4
                subr    r3, r4, r3
                ld      0x0(g0), r4
                ld      0x10(g0), r5
                subr    r4, r5, r5
                ld      0x14(g13), r6
                ld      0x18(g13), r7
                bal     sub_6A2E4
                st      r4, 8(g13)
                st      r5, 0xC(g13)
                st      r6, 0x10(g13)
                ld      4(g0), r4
                ld      0x14(g0), r5
                subr    r4, r5, r5
                ld      0x28(g13), r6
                ld      0x2C(g13), r7
                bal     sub_6A2E4
                st      r4, 0x1C(g13)
                st      r5, 0x20(g13)
                st      r6, 0x24(g13)
                ld      8(g0), r4
                ld      0x18(g0), r5
                subr    r4, r5, r5
                ld      0x3C(g13), r6
                ld      0x40(g13), r7
                bal     sub_6A2E4
                st      r4, 0x30(g13)
                st      r5, 0x34(g13)
                st      r6, 0x38(g13)
                ret
# End of function sub_6A260
# =============== S U B R O U T I N E =======================================
sub_6A2E4:                              # CODE XREF: sub_6A260+28↑p
                mulr    r3, r3, r12
                mulr    r3, r12, r13
                addr    r6, r7, r14
                addr    r5, r5, r15
                mulr    r14, r3, r4
                subr    r15, r4, r4
                divr    r13, r4, r4
                addr    r6, r14, r14
                addr    r5, r15, r15
                mulr    r14, r3, r5
                subr    r15, r5, r5
                divr    r12, r5, r5
                bx      (g14)
# End of function sub_6A2E4
# ---------------------------------------------------------------------------
dword_6A318:    .long 0x41C80000        # DATA XREF: ROM:0006A8E4↓o
                .long 0x4063D70A
                .long 0xC1C80000
                .long 0x20000
                .long 0x41500000
                .long 0x4023D70A
                .long 0xC1500000
                .long 0x20028
                .long 0x4119999A
                .long 0x41200000
                .long 0xC119999A
                .long 0x20037
                .long 0x4083D70A
                .long 0x4063D70A
                .long 0xC083D70A
                .long 0x20050
                .long 0x4083D70A
                .long 0x4063D70A
                .long 0xC083D70A
                .long 0x2005F
                .long 0x4083D70A
                .long 0x4063D70A
                .long 0xC083D70A
                .long 0x2006E
                .long 0x405B851F
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x78
                .long 0
                .long 0x41200000
                .long 0xC1A00000
                .long 0x20000
                .long 0
                .long 0x40A00000, 0xC1700000, 0x2003C, 0x405B851F, 0x4053D70A
                .long 0xC05B851F, 0x78, 0
                .long 0x417451EC, 0xC0600000, 0x20000, 0x401E6666, 0x414C51EC
                .long 0xC01E6666, 0x20010, 0x40600000, 0x412451EC, 0
                .long 0x20020, 0x401E6666, 0x410C51EC, 0x401E6666, 0x20030
                .long 0
                .long 0x40E8A3D7, 0x40600000, 0x20040, 0xC01E6666, 0x40D8A3D7
                .long 0x401E6666, 0x20050, 0xC0600000, 0x4088A3D7, 0
dword_6A424:    .long 0x20060
                .long 0x405B851F
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x80
dword_6A438:    .long 0                 # DATA XREF: ROM:0006A8D8↓o
                .long 0x3FA28F5C, 0x40600000, 0x20000, 0x40C00000, 0x4098A3D7
                .long 0x40800000, 0x20020, 0x41000000, 0x40C8A3D7, 0
                .long 0x20040, 0x41000000, 0x40C8A3D7, 0
                .long 0x20048, 0x405B851F, 0x4053D70A, 0xC05B851F, 0x80
                .long 0
                .long 0x405147AE, 0xC1700000, 0x20000, 0
                .long 0x3FF5C28F, 0xC0CFAE14, 0x60
                .fill 2, 4, 0
                .long 0xC1580000, 0x20000, 0
                .long 0x40700000, 0xC1300000, 0x2001A, 0
                .long 0x40F00000, 0xC1080000, 0x20040, 0
                .long 0x40F00000, 0xC1080000, 0x20041, 0
                .long 0x40700000, 0xC0C00000, 0x20067, 0
                .long 0x3FF5C28F, 0xC0CFAE14, 0x81, 0x41200000, 0x3FA28F5C
                .long 0xC0600000, 0x20000, 0x40600000, 0x3FA28F5C, 0xC0F00000
                .long 0x20040, 0x405B851F, 0x4053D70A, 0xC05B851F, 0x80
                .long 0xC1700000, 0x3FA28F5C, 0x40D00000, 0x20000, 0x40A00000
                .long 0x3FA28F5C, 0x40000000, 0x20050, 0x405B851F, 0x4053D70A
                .long 0xC05B851F, 0x80, 0
                .long 0x3FF5C28F, 0
dword_6A574:    .long 0x20000
                .long 0x40000000
                .long 0x3FF5C28F
                .long 0x3F800000
                .long 0x200C8
                .long 0x40200000
                .long 0x3F800000
                .long 0x40400000
                .long 0x201F4
                .long 0x40000000
                .long 0x3E4CCCCD
                .long 0x40E00000
                .long 0x30C
dword_6A5A8:    .long 0x42280000        # DATA XREF: ROM:0006A8C4↓o
                .long 0x4154CCCD
                .long 0x412E6666
                .long 0x20000
                .long 0x42280000
                .long 0x4154CCCD
                .long 0x412E6666
                .long 0x2001E
                .long 0x42180000
                .long 0x3ECCCCCD
                .long 0x41266666
                .long 0x20050
                .long 0x405B851F
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x78
dword_6A5E8:    .long 0xC0800000        # DATA XREF: ROM:0006A8C0↓o
                .long 0
                .long 0x410B3333, 0x20000, 0xC0800000, 0
dword_6A600:    .long 0x410B3333
                .long 0x20028
                .long 0xC0A00000
                .long 0x40200000
                .long 0xC0A00000
                .long 0x20050
                .long 0x405B851F
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x78
dword_6A628:    .long 0x42AA6666        # DATA XREF: ROM:0006A8D4↓o
                .long 0x41D9999A
                .long 0xC3250000
                .long 0x20000
                .long 0x42AA0000
                .long 0x41D40000
                .long 0xC3220000
                .long 0x20014
                .long 0x42A9CCCD
                .long 0x41D80000
                .long 0xC31F199A
                .long 0x20024
                .long 0x42AA0000
                .long 0x41D00000
                .long 0xC31C0000
                .long 0x2003C
                .long 0x42A93333
                .long 0x41D26666
                .long 0xC31A0000
                .long 0x20050
                .long 0x405B851F
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x78
dword_6A688:    .long 0                 # DATA XREF: ROM:0006A8C8↓o
                .long 0x41733333
                .byte 0
                .byte 0, 0x54, 0x42
                .long 0x20000, 0
dword_6A69C:    .long 0x4149999A
                .long 0x41C80000
                .long 0x20028
                .long 0xC1300000
                .long 0x40933333
                .long 0xC0C66666
                .long 0x20050
                .long 0x405B851F
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x78
dword_6A6C8:    .long 0xC1E00000        # DATA XREF: ROM:stage_start_cam_path↓o
                .long 0x40ACCCCD
                .long 0x3F19999A
                .long 0x20000
                .long 0xC1800000
                .long 0x40ACCCCD
                .long 0x3ECCCCCD
                .long 0x2001E
                .long 0xC11CCCCD
                .long 0x41100000
                .long 0x3E4CCCCD
                .long 0x2002D
                .long 0x3F4CCCCD
                .long 0x40600000
                .long 0xC104CCCD
                .long 0x2005A
                .long 0x405B851F
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x78
dword_6A718:    .long 0x41A00000        # DATA XREF: ROM:0006A8BC↓o
                .long 0x4063D70A
                .long 0xC1A00000
                .long 0x20000
                .long 0x41500000
                .long 0x4023D70A
                .long 0xC1500000
                .long 0x20028
                .long 0x4119999A
                .long 0x41200000
                .long 0xC119999A
                .long 0x20037
                .long 0x4083D70A
                .long 0x4063D70A
                .long 0xC083D70A
                .long 0x20050
                .long 0x4083D70A
                .long 0x4063D70A
                .long 0xC083D70A
                .long 0x2005F
                .long 0x4083D70A
                .long 0x4063D70A
                .long 0xC083D70A
                .long 0x2006E
                .long 0x405B851F
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x78
dword_6A788:    .long 0xBF19999A        # DATA XREF: ROM:0006A8CC↓o
                .long 0x40D66666
                .long 0xC2040000
                .long 0x20000
                .long 0xBF19999A
                .long 0x40D66666
                .long 0xC2040000
                .long 0x2001E
                .long 0x408DC28F
                .long 0x40B1EB85
                .long 0xC05B851F
                .long 0x20050
                .long 0x408DC28F
                .long 0x4091EB85
                .long 0xC05B851F
                .long 0x2005F
                .long 0x405B851F
                .long 0x4063D70A
                .long 0xC05B851F
                .long 0x2006E
                .long 0x405B851F
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x78
                .long 0xC1E0CCCD
                .long 0x40333333
                .long 0xC0800000
                .long 0x20000
                .long 0xC079999A
                .long 0x40333333
                .long 0xC1E00000
                .long 0x20028
                .long 0x41980000
                .long 0x40333333
                .long 0xC1A80000
                .long 0x20050
                .long 0x405B851F
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x78
                .long 0xC1300000
                .long 0x4101999A
                .long 0xC1A80000
                .long 0x20000
                .long 0x409CCCCD
                .long 0x40A9999A
                .long 0xC16CCCCD
                .long 0x20050
                .long 0x405B851F
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x78
dword_6A858:    .long 0x405B851F        # DATA XREF: ROM:0006A8DC↓o
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x20000
                .long 0x405B851F
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x78
                .long 0
                .long 0x408CCCCD
                .long 0xC1C80000
                .long 0x20000
                .long 0
                .long 0x40000000
                .long 0xC1400000
                .long 0x20055
                .long 0
                .long 0x40A00000
                .long 0xC1100000
                .long 0x20064
                .long 0x405B851F
                .long 0x4053D70A
                .long 0xC05B851F
                .long 0x78
stage_start_cam_path:.long dword_6A6C8  # DATA XREF: shifts_graphics_somehow+A4↓r
                .long dword_6A718
                .long dword_6A5E8
                .long dword_6A5A8
                .long dword_6A688
                .long dword_6A788
                .long dword_6A6C8
                .long dword_6A628
                .long dword_6A438
                .long dword_6A858
                .long dword_6A858
                .long dword_6A318
                .long dword_6A318
                .long dword_6A318
                .long dword_6A318
                .long dword_6A318
                .long dword_6A318
                .long dword_6A318
                .long dword_6A318
# ---------------------------------------------------------------------------
cam_mode_11:                            # DATA XREF: ROM:0009C7C0↓o
                lda     start_ip_add, r15
                stib    r15, 0x40(g13)
                mov     0, r3
                stob    r3, 0x294(g13)
                stos    r3, 6(g13)
                ld      0x210(g13), g0
                b       loc_6A948
# ---------------------------------------------------------------------------
cam_mode_12:                            # DATA XREF: ROM:0009C7C4↓o
                ld      0x210(g13), g0
                ldos    6(g13), r3
                ldos    0x40(g0), r12
                cmpobne r3, r12, loc_6A958
                lda     0x24(g0), g0
                st      g0, 0x210(g13)
                ldob    0x294(g13), r14
                addi    1, r14, r15
                stob    r15, 0x294(g13)
loc_6A948:                              # CODE XREF: ROM:0006A920↑j
                ldob    0x1E(g0), r11
                ld      off_9C824[r11*4], r15
                bx      (r15)
# ---------------------------------------------------------------------------
loc_6A958:                              # CODE XREF: ROM:0006A930↑j
                ldos    6(g13), r3
                ldob    0x1E(g0), r11
                ld      0x9C830[r11*4], r15
                bx      (r15)
# ---------------------------------------------------------------------------
loc_6A96C:                              # DATA XREF: ROM:off_9C824↓o
                ldt     0x0(g0), r4
                stt     r4, 0x18(g13)
                ldt     0xC(g0), r8
                b       loc_6AD08
# ---------------------------------------------------------------------------
loc_6A97C:                              # DATA XREF: ROM:0009C828↓o
                ldos    0x40(g0), r12
                ldos    0x1C(g0), r13
                subi    r13, r12, r13
                cvtir   r13, r13
                st      r13, 0x230(g13)
                lda     displacement, r15
                st      r15, 0x214(g13)
                b       loc_6A958
# ---------------------------------------------------------------------------
loc_6A9A0:                              # DATA XREF: ROM:0009C834↓o
                ld      0x230(g13), r3
                ld      0x214(g13), g3
                ldt     0x0(g0), r8
                ldt     0x24(g0), r4
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r9
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                stt     r8, 0x18(g13)
                ldt     0xC(g0), r8
                ldt     0x30(g0), r4
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r9
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                lda     0x3F800000, r13
                addr    r13, g3, r15
                st      r15, 0x214(g13)
                ldt     0x18(g13), r4
                b       loc_6AD08
# ---------------------------------------------------------------------------
loc_6AA94:                              # DATA XREF: ROM:0009C82C↓o
                ldos    0x40(g0), r12
                ldos    0x1C(g0), r13
                subi    r13, r12, r13
                cvtir   r13, r13
                st      r13, 0x230(g13)
                lda     displacement, r15
                st      r15, 0x214(g13)
                ldob    0x294(g13), r14
                cmpobe  0, r14, loc_6AB34
                ldob    -6(g0), r14
                cmpobe  0, r14, loc_6AB34
                ldos    -8(g0), r3
                ldos    0x40(g0), r11
                subi    r3, r11, r3
                shri    5, r3, r3
                cvtir   r3, r3
                ldt     -0x24(g0), r4
                ldt     0x24(g0), r8
                subr    r4, r8, r4
                subr    r5, r9, r5
                subr    r6, r10, r6
                divr    r3, r4, r4
                divr    r3, r5, r5
                divr    r3, r6, r6
                stt     r4, 0x218(g13)
                ldt     -0x18(g0), r4
                ldt     0x30(g0), r8
                subr    r4, r8, r4
                subr    r5, r9, r5
                subr    r6, r10, r6
                divr    r3, r4, r4
                divr    r3, r5, r5
                divr    r3, r6, r6
                stt     r4, 0x298(g13)
                b       loc_6AB4C
# ---------------------------------------------------------------------------
loc_6AB34:                              # CODE XREF: ROM:0006AAB8↑j
                lda     displacement, r4
                mov     r4, r5
                mov     r4, r6
                stt     r4, 0x218(g13)
                stt     r4, 0x298(g13)
loc_6AB4C:                              # CODE XREF: ROM:0006AB30↑j
                ldob    0x42(g0), r14
                cmpobe  0, r14, loc_6ABB4
                ldos    0x1C(g0), r3
                ldos    0x64(g0), r11
                subi    r3, r11, r3
                shri    5, r3, r3
                cvtir   r3, r3
                ldt     0x0(g0), r4
                ldt     0x48(g0), r8
                subr    r4, r8, r4
                subr    r5, r9, r5
                subr    r6, r10, r6
                divr    r3, r4, r4
                divr    r3, r5, r5
                divr    r3, r6, r6
                stt     r4, 0x224(g13)
                ldt     0xC(g0), r4
                ldt     0x54(g0), r8
                subr    r4, r8, r4
                subr    r5, r9, r5
                subr    r6, r10, r6
                divr    r3, r4, r4
                divr    r3, r5, r5
                divr    r3, r6, r6
                stt     r4, 0x2A4(g13)
                b       loc_6ABCC
# ---------------------------------------------------------------------------
loc_6ABB4:                              # CODE XREF: ROM:0006AB50↑j
                lda     displacement, r4
                mov     r4, r5
                mov     r4, r6
                stt     r4, 0x224(g13)
                stt     r4, 0x2A4(g13)
loc_6ABCC:                              # CODE XREF: ROM:0006ABB0↑j
                b       loc_6A958
# ---------------------------------------------------------------------------
loc_6ABD0:                              # DATA XREF: ROM:0009C838↓o
                mov     g0, r7
                ld      0x230(g13), r3
                ld      0x214(g13), g3
                ldt     0x0(r7), g0
                ldt     0x24(r7), r4
                ldt     0x218(g13), r8
                ldt     0x224(g13), g4
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                stt     r4, 0x18(g13)
                ldt     0xC(r7), g0
                ldt     0x30(r7), r4
                ldt     0x298(g13), r8
                ldt     0x2A4(g13), g4
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                ld      (g11)[g12*1], r9
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                lda     0x3F800000, r13
                addr    r13, g3, r15
                st      r15, 0x214(g13)
                mov     r7, g0
                ldt     0x18(g13), r4
loc_6AD08:                              # CODE XREF: ROM:0006A978↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                ldob    0x1F(g0), g3
                call    sub_6AE98
                ldt     0x18(g13), r4
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                ldob    0x20(g0), g3
                call    sub_6AE98
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                ldis    0x500432, r15
                st      r15, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x18(g13)
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                divr    r12, r13, r13
                lda     0x13002626, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ldis    (g11)[g12*1], r13
                shlo    0xD, 1, r15
                cmpibl  r13, r15, loc_6AE6C
                mov     r15, r13
loc_6AE6C:                              # CODE XREF: ROM:0006AE64↑j
                stos    r13, 0x24(g13)
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                stos    r12, 0x26(g13)
                ret
# =============== S U B R O U T I N E =======================================
sub_6AE98:                              # CODE XREF: ROM:0006AD24↑p
                mov     g3, r3
                cmpobe  0, r3, loc_6AEB4
                cmpobe  1, r3, loc_6AF28
                cmpobe  2, r3, loc_6AF34
                cmpobe  3, r3, loc_6AFAC
                cmpobe  4, r3, loc_6AEB8
                cmpobe  5, r3, loc_6AEF0
loc_6AEB4:                              # CODE XREF: sub_6AE98+4↑j
                ret
# ---------------------------------------------------------------------------
loc_6AEB8:                              # CODE XREF: sub_6AE98+14↑j
                ld      fa_rob0, r3
                mov     4, r4
                stob    r4, 0x12C(r3)
                ld      0x1A4(r3), r4
                bbs     0x12, r4, loc_6AF3C
                ld      fa_rob1, r3
                mov     4, r4
                stob    r4, 0x12C(r3)
                ld      0x1A4(r3), r4
                bbs     0x12, r4, loc_6AF3C
                mov     0, r3
                b       loc_6AEB4
# ---------------------------------------------------------------------------
loc_6AEF0:                              # CODE XREF: sub_6AE98+18↑j
                ld      fa_rob0, r4
                ld      fa_rob1, r3
                ld      0x1A4(r4), r5
                bbs     0x12, r5, loc_6AF3C
                ld      fa_rob0, r3
                ld      fa_rob1, r4
                ld      0x1A4(r4), r5
                bbs     0x13, r5, loc_6AF3C
                mov     0, r3
                b       loc_6AEB4
# ---------------------------------------------------------------------------
loc_6AF28:                              # CODE XREF: sub_6AE98+8↑j
                ld      fa_rob0, r3
                b       loc_6AF3C
# ---------------------------------------------------------------------------
loc_6AF34:                              # CODE XREF: sub_6AE98+C↑j
                ld      fa_rob1, r3
loc_6AF3C:                              # CODE XREF: sub_6AE98+34↑j
                ld      0x1A4(r3), r15
                bbc     5, r15, loc_6AF50
                ld      0x1F4(r3), r4
                ld      0x1FC(r3), r6
                b       loc_6AF58
# ---------------------------------------------------------------------------
loc_6AF50:                              # CODE XREF: sub_6AE98+A8↑j
                ld      0x18(r3), r4
                ld      0x20(r3), r6
loc_6AF58:                              # CODE XREF: sub_6AE98+B4↑j
                bbs     0x10, r15, loc_6AF64
                bbs     0xE, r15, loc_6AF64
                bbc     4, r15, loc_6AF6C
loc_6AF64:                              # CODE XREF: sub_6AE98:loc_6AF58↑j
                ld      0x1F8(r3), r5
                b       loc_6AF7C
# ---------------------------------------------------------------------------
loc_6AF6C:                              # CODE XREF: sub_6AE98+C8↑j
                ld      0x1C(r3), r5
                lda     0x3F800000, r15
                addr    r15, r5, r5
loc_6AF7C:                              # CODE XREF: sub_6AE98+D0↑j
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                ldis    0x26(r3), r15
                st      r15, (g11)[g12*1]
                b       loc_6AEB4
# ---------------------------------------------------------------------------
loc_6AFAC:                              # CODE XREF: sub_6AE98+10↑j
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                ld      0x1A4(g7), r15
                bbc     5, r15, loc_6AFD0
                ld      0x1F4(g7), r4
                ld      0x1FC(g7), r6
                b       loc_6AFD8
# ---------------------------------------------------------------------------
loc_6AFD0:                              # CODE XREF: sub_6AE98+128↑j
                ld      0x18(g7), r4
                ld      0x20(g7), r6
loc_6AFD8:                              # CODE XREF: sub_6AE98+134↑j
                bbs     0x10, r15, loc_6AFE4
                bbs     0xE, r15, loc_6AFE4
                bbc     4, r15, loc_6AFEC
loc_6AFE4:                              # CODE XREF: sub_6AE98:loc_6AFD8↑j
                ld      0x1F8(g7), r5
                b       loc_6AFFC
# ---------------------------------------------------------------------------
loc_6AFEC:                              # CODE XREF: sub_6AE98+148↑j
                ld      0x1C(g7), r5
                lda     0x3F800000, r15
                addr    r15, r5, r5
loc_6AFFC:                              # CODE XREF: sub_6AE98+150↑j
                ld      0x1A4(g8), r15
                bbc     5, r15, loc_6B010
                ld      0x1F4(g8), r8
                ld      0x1FC(g8), r10
                b       loc_6B018
# ---------------------------------------------------------------------------
loc_6B010:                              # CODE XREF: sub_6AE98+168↑j
                ld      0x18(g8), r8
                ld      0x20(g8), r10
loc_6B018:                              # CODE XREF: sub_6AE98+174↑j
                bbs     0x10, r15, loc_6B024
                bbs     0xE, r15, loc_6B024
                bbc     4, r15, loc_6B02C
loc_6B024:                              # CODE XREF: sub_6AE98:loc_6B018↑j
                ld      0x1F8(g8), r9
                b       loc_6B03C
# ---------------------------------------------------------------------------
loc_6B02C:                              # CODE XREF: sub_6AE98+188↑j
                ld      0x1C(g8), r9
                lda     0x3F800000, r15
                addr    r15, r9, r9
loc_6B03C:                              # CODE XREF: sub_6AE98+190↑j
                addr    r4, r8, r8
                addr    r6, r10, r10
                lda     0x3F000000, r3
                mulr    r3, r8, r8
                mulr    r3, r10, r10
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                shlo    0xE, 1, r13
                addi    r13, r7, r7
                lda     0x3F666666, r9
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                b       loc_6AEB4
# End of function sub_6AE98
# =============== S U B R O U T I N E =======================================
shifts_graphics_somehow:                # CODE XREF: SEL_DSP+5E8↑p
                ldob    also_mode, r15
                lda     displacement64, r14
                lda     displacement128(r14), r14
                bbs     r15, r14, loc_6B198
                ldob    _sub_mode, r3
                lda     displacement2, r4
                cmpobe  r3, r4, loc_6B120
                ldob    curr_round_num, r3
                cmpobe  1, r3, loc_6B11C
                ld      fa_camera, r3
                lda     cam_mode11, r15
                stib    r15, 0x40(r3)   # cam_mode = 0x0B
                call    rand            # Random value stored to g0
                divo    6, g0, r4
                mulo    6, r4, r4
                subo    r4, g0, r4
                ld      GAME_MASK_related[r4*4], r4 # if r4 = 01, then r4 becomes 9C9E0
                st      r4, 0x210(r3)   # r3 = 519E80 (mod_fa_camera_add), so it manipulates mod_fa_camera+0x210
loc_6B11C:                              # CODE XREF: shifts_graphics_somehow+38↑j
                ret
# ---------------------------------------------------------------------------
loc_6B120:                              # CODE XREF: shifts_graphics_somehow+2C↑j
                ld      fa_camera, r3
                lda     check_word3, r15
                stib    r15, 0x40(r3)   # cam_mode=18
                addo    4, sp, sp
                st      g0, -4(sp)
                call    rand            # Random value stored to g0
                mov     7, r4
                and     g0, r4, r4
                ldob    stage_num, r4
                ld      stage_start_cam_path[r4*4], r4 # Stage camera path
                ld      -4(sp), g0
                subo    4, sp, sp
                lda     0x3B4(r3), r5   # fa_camera+0x3B4
                st      r4, 4(r5)
                lda     displacement, r15
                st      r15, 0x44(r5)
                lda     0x40066666, r15
                st      r15, 0x48(r5)
                lda     displacement, r15
                st      r15, 0x4C(r5)
                ret
# ---------------------------------------------------------------------------
loc_6B198:                              # CODE XREF: shifts_graphics_somehow+18↑j
                ld      fa_camera, r3
                shlo    0xE, 1, r4
                shlo    0xE, 3, r5
                stos    r4, 0x358(r3)
                stos    r5, 0x35A(r3)
                lda     sub_22B2C, r15
                st      r15, 0x35C(r3)
                lda     sub_22EB0, r15
                st      r15, 0x360(r3)
                lda     displacement, r15
                stib    r15, 0x40(r3)   # cam_mode = 0
                ret
# End of function shifts_graphics_somehow
# =============== S U B R O U T I N E =======================================
cam_mode_9:                             # CODE XREF: camera_init+160↑p
                lda     0x3F000000, r15
                st      r15, 0x30C(g13)
                lda     0xF600, r15
                stis    r15, 0xF8(g13)
                lda     0x3FA66666, r15
                st      r15, 0x2DC(g13)
                lda     0x40400000, r15
                st      r15, 0x2E0(g13)
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                ld      0x1A4(g7), r15
                bbc     5, r15, loc_6B22C
                ld      0x1F4(g7), r8
                ld      0x1FC(g7), r9
                b       loc_6B234
# ---------------------------------------------------------------------------
loc_6B22C:                              # CODE XREF: cam_mode_9+44↑j
                ld      0x18(g7), r8
                ld      0x20(g7), r9
loc_6B234:                              # CODE XREF: cam_mode_9+50↑j
                bbs     0x10, r15, loc_6B240
                bbs     0xE, r15, loc_6B240
                bbc     4, r15, loc_6B248
loc_6B240:                              # CODE XREF: cam_mode_9:loc_6B234↑j
                ld      0x1F8(g7), g3
                b       loc_6B258
# ---------------------------------------------------------------------------
loc_6B248:                              # CODE XREF: cam_mode_9+64↑j
                ld      0x1C(g7), g3
                lda     0x3F800000, r15
                addr    r15, g3, g3
loc_6B258:                              # CODE XREF: cam_mode_9+6C↑j
                ld      0x1A4(g8), r15
                bbc     5, r15, loc_6B26C
                ld      0x1F4(g8), r10
                ld      0x1FC(g8), r11
                b       loc_6B274
# ---------------------------------------------------------------------------
loc_6B26C:                              # CODE XREF: cam_mode_9+84↑j
                ld      0x18(g8), r10
                ld      0x20(g8), r11
loc_6B274:                              # CODE XREF: cam_mode_9+90↑j
                bbs     0x10, r15, loc_6B280
                bbs     0xE, r15, loc_6B280
                bbc     4, r15, loc_6B288
loc_6B280:                              # CODE XREF: cam_mode_9:loc_6B274↑j
                ld      0x1F8(g8), r4
                b       loc_6B298
# ---------------------------------------------------------------------------
loc_6B288:                              # CODE XREF: cam_mode_9+A4↑j
                ld      0x1C(g8), r4
                lda     0x3F800000, r15
                addr    r15, r4, r4
loc_6B298:                              # CODE XREF: cam_mode_9+AC↑j
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                ld      0x2DC(g13), g5
                lda     0x3E4CCCCD, r13
                mulr    r13, r5, r3
                addr    r3, g5, g5
                addr    r8, r10, g4
                addr    r9, r11, g6
                lda     0x3F000000, r3
                mulr    g4, r3, g4
                mulr    g6, r3, g6
                ld      0x30C(g13), r13
                mulr    r13, r5, r5
                ld      0x2E0(g13), r13
                addr    r13, r5, r5
                st      r5, 0x2E8(g13)
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                shlo    0xE, 1, r13
                addi    r13, r7, r7
                ldos    0xF8(g13), r3
                stt     g4, 0x120(g13)
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      0x2F0(g13), g1
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                notbit  0x1F, g1, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r11
                notbit  0x1F, r5, r5
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x18(g13)
                stos    r3, 0x24(g13)
                stos    r7, 0x26(g13)
                call    cam_mode_to_33  # set cam_mode to 21
                lda     cam_mode10, r15
                stib    r15, 0x40(g13)  # then immediately change cam_mode to 0x0A WHY
cam_mode_10:                            # DATA XREF: ROM:0009C7BC↓o
                ldob    mode, r3
                lda     mode9, r4
                cmpobne r3, r4, loc_6B480
                ldob    _sub_mode, r3
                lda     sub_mode9, r4
                cmpobne r3, r4, loc_6B480
                ldob    0x41(g13), r5
                and     1, r5, r5
                ld      INTERUPT_FLAGS_MOMENTARY, r10
                mov     4, r4
                ldob    gameprogram, r3 # bit 0 clear = Player 1
                cmpo    1, r3
                bl      loc_6B478
                cmpo    0, r3
                be      loc_6B46C
                mov     g8, r15
                mov     g7, g8
                mov     r15, g7
                mov     5, r4
loc_6B46C:                              # CODE XREF: cam_mode_9+280↑j
                bbc     r4, r10, loc_6B478
                notbit  0, r5, r5
                stob    r5, 0x41(g13)
loc_6B478:                              # CODE XREF: cam_mode_9+278↑j
                cmpo    0, r5
                bne     sub_6DCCC
loc_6B480:                              # CODE XREF: cam_mode_9+240↑j
                lda     cam_mot_check, r11
loc_6B488:                              # CODE XREF: cam_mode_9+2E8↓j
                ldos    (r11), r3       # Load motion check
                cmpobe  0, r3, loc_6B644
                ldos    2(r11), r8
                ldos    4(r11), r9
                ld      8(r11), r10
                ld      fa_rob0, g7
                ldos    0x1A8(g7), r12  # p1_mot_num
                cmpobe  r3, r12, loc_6B4C4
                ld      fa_rob1, g7
                ldos    0x1A8(g7), r12  # p1_mot_num
                cmpobe  r3, r12, loc_6B4C4
                addi    16, r11, r11
                b       loc_6B488
# ---------------------------------------------------------------------------
loc_6B4C4:                              # CODE XREF: cam_mode_9+2D0↑j
                ld      0x0(g7), r12
                bbc     1, r12, loc_6B4D0
                ld      0xC(r11), r10
loc_6B4D0:                              # CODE XREF: cam_mode_9+2F0↑j
                addi    0x10, r11, r11
                ldos    0x1AA(g7), r12
                cmpobe  r12, r8, loc_6B4EC
                cmpobl  r12, r8, loc_6B488
                cmpobge r12, r9, loc_6B488
                call    sub_6BA98
                b       loc_6B570
# ---------------------------------------------------------------------------
loc_6B4EC:                              # CODE XREF: cam_mode_9+300↑j
                st      r10, 0x210(g13)
                ld      0x26(g13), r15
                st      r15, 0x302(g13)
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                call    sub_6B998
                ldt     0x18(g13), r12
                lda     0x35006A6A, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                ld      (g11)[g12*1], r13
                ld      (g11)[g12*1], r14
                stt     r12, 0x2B8(g13)
                ldt     0x120(g13), r12
                lda     0x35006A6A, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                ld      (g11)[g12*1], r13
                ld      (g11)[g12*1], r14
                stt     r12, 0x2C4(g13)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                call    sub_6BA84
loc_6B570:                              # CODE XREF: cam_mode_9+310↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                call    sub_6B998
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], g4
                ld      (g11)[g12*1], g5
                ld      (g11)[g12*1], g6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                subr    r5, g5, r13
                divr    r11, r13, r3
                lda     0x13002626, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ldis    (g11)[g12*1], r3
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                mov     r11, r5
                st      r5, 0x2E8(g13)
                b       loc_6B8C0
# ---------------------------------------------------------------------------
loc_6B644:                              # CODE XREF: cam_mode_9+2B4↑j
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                ld      0x1A4(g7), r12
                ld      0x1A4(g8), r13
                or      r13, r12, g2
                addo    0x1F, 1, r15
                stis    r15, 0x304(g13)
                lda     0x3D4CCCCD, r15
                st      r15, 0x2E4(g13)
                ld      0x1A4(g7), r15
                bbc     5, r15, loc_6B688
                ld      0x1F4(g7), r8
                ld      0x1FC(g7), r9
                b       loc_6B690
# ---------------------------------------------------------------------------
loc_6B688:                              # CODE XREF: cam_mode_9+4A0↑j
                ld      0x18(g7), r8
                ld      0x20(g7), r9
loc_6B690:                              # CODE XREF: cam_mode_9+4AC↑j
                bbs     0x10, r15, loc_6B69C
                bbs     0xE, r15, loc_6B69C
                bbc     4, r15, loc_6B6A4
loc_6B69C:                              # CODE XREF: cam_mode_9:loc_6B690↑j
                ld      0x1F8(g7), g3
                b       loc_6B6B4
# ---------------------------------------------------------------------------
loc_6B6A4:                              # CODE XREF: cam_mode_9+4C0↑j
                ld      0x1C(g7), g3
                lda     0x3F800000, r15
                addr    r15, g3, g3
loc_6B6B4:                              # CODE XREF: cam_mode_9+4C8↑j
                ld      0x1A4(g8), r15
                bbc     5, r15, loc_6B6C8
                ld      0x1F4(g8), r10
                ld      0x1FC(g8), r11
                b       loc_6B6D0
# ---------------------------------------------------------------------------
loc_6B6C8:                              # CODE XREF: cam_mode_9+4E0↑j
                ld      0x18(g8), r10
                ld      0x20(g8), r11
loc_6B6D0:                              # CODE XREF: cam_mode_9+4EC↑j
                bbs     0x10, r15, loc_6B6DC
                bbs     0xE, r15, loc_6B6DC
                bbc     4, r15, loc_6B6E4
loc_6B6DC:                              # CODE XREF: cam_mode_9:loc_6B6D0↑j
                ld      0x1F8(g8), r4
                b       loc_6B6F4
# ---------------------------------------------------------------------------
loc_6B6E4:                              # CODE XREF: cam_mode_9+500↑j
                ld      0x1C(g8), r4
                lda     0x3F800000, r15
                addr    r15, r4, r4
loc_6B6F4:                              # CODE XREF: cam_mode_9+508↑j
                lda     0x40800000, r15
                ldt     0x2C(g7), r12
                mulr    r15, r12, r12
                mulr    r15, r14, r14
                addr    r12, r8, r8
                addr    r14, r9, r9
                ldt     0x2C(g8), r12
                mulr    r15, r12, r12
                mulr    r15, r14, r14
                addr    r12, r10, r10
                addr    r14, r11, r11
                cmpr    r4, g3
                bl      loc_6B730
                mov     r4, g3
loc_6B730:                              # CODE XREF: cam_mode_9+550↑j
                lda     0x3F800000, r14
                lda     0x40200000, r14
                mulr    r14, g3, g3
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                mov     r5, r4
                cmpr    g3, r5
                bl      loc_6B774
                mov     g3, r5
loc_6B774:                              # CODE XREF: cam_mode_9+594↑j
                lda     0x40400000, r3
                cmpoble r3, r5, loc_6B784
                mov     r3, r5
loc_6B784:                              # CODE XREF: cam_mode_9+5A4↑j
                lda     0x41700000, r3
                cmpobge r3, r5, loc_6B794
                mov     r3, r5
loc_6B794:                              # CODE XREF: cam_mode_9+5B4↑j
                ld      0x2DC(g13), g5
                lda     0x3E4CCCCD, r13
                mulr    r13, r5, r3
                addr    r3, g5, g5
                addr    r8, r10, g4
                addr    r9, r11, g6
                lda     0x3F000000, r3
                mulr    g4, r3, g4
                mulr    g6, r3, g6
                ld      0x30C(g13), r13
                mulr    r13, r5, r5
                ld      0x2E0(g13), r13
                addr    r13, r5, r5
                ldos    0x26(g13), r7
                lda     0x3F800000, r12
                cmpr    r4, r12
                bl      loc_6B824
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                shlo    0xE, 1, r13
                addi    r13, r7, r7
                ldis    0x26(g13), r13
                subi    r13, r7, r3
                shlo    0xE, 1, r13
                addi    r13, r3, r3
                bbc     0xF, r3, loc_6B824
                notbit  0xF, r7, r7
loc_6B824:                              # CODE XREF: cam_mode_9+608↑j
                shlo    0x10, r7, r7
                ldos    0x26(g13), r3
                shlo    0x10, r3, r3
                ldos    0x304(g13), r11
                subi    r3, r7, r7
                divi    r11, r7, r7
                addi    r3, r7, r7
                shro    0x10, r7, r7
                lda     0x3CA3D70A, r6
                ld      0x2E8(g13), r3
                cmpr    r5, r3
                ble     loc_6B860
                lda     0x3F000000, r6
loc_6B860:                              # CODE XREF: cam_mode_9+67C↑j
                subr    r3, r5, r5
                mulr    r6, r5, r5
                addr    r3, r5, r5
                st      r5, 0x2E8(g13)
                ldos    0xF8(g13), r3
                shlo    0x10, r3, r3
                ldos    0x24(g13), r11
                shlo    0x10, r11, r11
                ldos    0x304(g13), r12
                subi    r11, r3, r3
                divi    r12, r3, r3
                addi    r11, r3, r3
                shro    0x10, r3, r3
                ld      0x2E4(g13), r11
                ldt     0x120(g13), r8
                subr    r8, g4, g4
                mulr    r11, g4, g4
                addr    r8, g4, g4
                subr    r9, g5, g5
                mulr    r11, g5, g5
                addr    r9, g5, g5
                subr    r10, g6, g6
                mulr    r11, g6, g6
                addr    r10, g6, g6
loc_6B8C0:                              # CODE XREF: cam_mode_9+468↑j
                stt     g4, 0x120(g13)
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      0x2F0(g13), g1
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                notbit  0x1F, g1, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r11
                notbit  0x1F, r5, r5
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x18(g13)
                stos    r3, 0x24(g13)
                stos    r7, 0x26(g13)
                ret
# End of function cam_mode_9
# =============== S U B R O U T I N E =======================================
sub_6B998:                              # CODE XREF: cam_mode_9+32C↑p
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                ld      fa_rob0, r10
                ld      fa_rob1, r11
                ld      0x1A4(r10), r15
                bbc     5, r15, loc_6B9C8
                ld      0x1F4(r10), r4
                ld      0x1FC(r10), r6
                b       loc_6B9D0
# ---------------------------------------------------------------------------
loc_6B9C8:                              # CODE XREF: sub_6B998+20↑j
                ld      0x18(r10), r4
                ld      0x20(r10), r6
loc_6B9D0:                              # CODE XREF: sub_6B998+2C↑j
                bbs     0x10, r15, loc_6B9DC
                bbs     0xE, r15, loc_6B9DC
                bbc     4, r15, loc_6B9E4
loc_6B9DC:                              # CODE XREF: sub_6B998:loc_6B9D0↑j
                ld      0x1F8(r10), r5
                b       loc_6B9F4
# ---------------------------------------------------------------------------
loc_6B9E4:                              # CODE XREF: sub_6B998+40↑j
                ld      0x1C(r10), r5
                lda     0x3F800000, r15
                addr    r15, r5, r5
loc_6B9F4:                              # CODE XREF: sub_6B998+48↑j
                ld      0x1A4(r11), r15
                bbc     5, r15, loc_6BA08
                ld      0x1F4(r11), r8
                ld      0x1FC(r11), r10
                b       loc_6BA10
# ---------------------------------------------------------------------------
loc_6BA08:                              # CODE XREF: sub_6B998+60↑j
                ld      0x18(r11), r8
                ld      0x20(r11), r10
loc_6BA10:                              # CODE XREF: sub_6B998+6C↑j
                bbs     0x10, r15, loc_6BA1C
                bbs     0xE, r15, loc_6BA1C
                bbc     4, r15, loc_6BA24
loc_6BA1C:                              # CODE XREF: sub_6B998:loc_6BA10↑j
                ld      0x1F8(r11), r9
                b       loc_6BA34
# ---------------------------------------------------------------------------
loc_6BA24:                              # CODE XREF: sub_6B998+80↑j
                ld      0x1C(r11), r9
                lda     0x3F800000, r15
                addr    r15, r9, r9
loc_6BA34:                              # CODE XREF: sub_6B998+88↑j
                ldos    0x302(g13), r7
                addr    r4, r8, r8
                addr    r6, r10, r10
                lda     0x3F000000, r3
                mulr    r3, r8, r8
                mulr    r3, r10, r10
                lda     displacement, r9
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                ret
# End of function sub_6B998
# =============== S U B R O U T I N E =======================================
sub_6BA84:                              # CODE XREF: cam_mode_9+394↑p
                mov     0, r3
                stob    r3, 0x294(g13)
                stos    r3, 6(g13)
                ld      0x210(g13), g0
                b       loc_6BABC
# End of function sub_6BA84
# =============== S U B R O U T I N E =======================================
sub_6BA98:                              # CODE XREF: cam_mode_9+30C↑p
                ld      0x210(g13), g0
                ldos    6(g13), r3
                ldos    0x40(g0), r12
                cmpobne r3, r12, loc_6BACC
                lda     0x24(g0), g0
                st      g0, 0x210(g13)
                ldob    0x294(g13), r14
                addi    1, r14, r15
                stob    r15, 0x294(g13)
loc_6BABC:                              # CODE XREF: sub_6BA84+10↑j
                ldob    0x1E(g0), r11
                ld      off_9C83C[r11*4], r15
                bx      (r15)
# ---------------------------------------------------------------------------
loc_6BACC:                              # CODE XREF: sub_6BA98+C↑j
                ldob    0x1E(g0), r11
                ld      off_9C848[r11*4], r15
                bx      (r15)
# End of function sub_6BA98
# =============== S U B R O U T I N E =======================================
sub_6BADC:                              # DATA XREF: ROM:off_9C83C↓o
                ldt     0xC(g0), g4
                ldt     0x0(g0), g0
                ret
# End of function sub_6BADC
# =============== S U B R O U T I N E =======================================
sub_6BAE8:                              # DATA XREF: ROM:0009C840↓o
                ldos    0x40(g0), r12
                ldos    0x1C(g0), r13
                subi    r13, r12, r13
                cvtir   r13, r13
                st      r13, 0x230(g13)
                lda     displacement, r15
                st      r15, 0x214(g13)
                b       loc_6BACC
# End of function sub_6BAE8
# =============== S U B R O U T I N E =======================================
sub_6BB0C:                              # DATA XREF: ROM:0009C84C↓o
                ld      0x230(g13), r3
                ld      0x214(g13), g3
                ldt     0x0(g0), r8
                ldt     0x24(g0), r4
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                ldt     0xC(g0), r8
                ldt     0x30(g0), r4
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], g4
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], g5
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], g6
                movt    r4, g0
                lda     0x3F800000, r13
                addr    r13, g3, r15
                st      r15, 0x214(g13)
                ret
# End of function sub_6BB0C
# =============== S U B R O U T I N E =======================================
sub_6BBFC:                              # DATA XREF: ROM:0009C844↓o
                ldos    0x40(g0), r12
                ldos    0x1C(g0), r13
                subi    r13, r12, r13
                cvtir   r13, r13
                st      r13, 0x230(g13)
                lda     displacement, r15
                st      r15, 0x214(g13)
                ldob    0x294(g13), r14
                cmpobe  0, r14, loc_6BCBC
                ldob    -6(g0), r14
                cmpobe  0, r14, loc_6BCBC
                ldos    -8(g0), r3
                ldos    0x40(g0), r11
                subi    r3, r11, r3
                cvtir   r3, r3
                lda     0x42800000, r13
                divr    r13, r3, r3
                ldt     -0x24(g0), r4
                ldob    0x294(g13), r14
                cmpobne 1, r14, loc_6BC64
                ldt     0x2B8(g13), r4
loc_6BC64:                              # CODE XREF: sub_6BBFC+60↑j
                ldt     0x24(g0), r8
                subr    r4, r8, r4
                subr    r5, r9, r5
                subr    r6, r10, r6
                divr    r3, r4, r4
                divr    r3, r5, r5
                divr    r3, r6, r6
                stt     r4, 0x218(g13)
                ldt     -0x18(g0), r4
                ldob    0x294(g13), r14
                cmpobne 1, r14, loc_6BC98
                ldt     0x2C4(g13), r4
loc_6BC98:                              # CODE XREF: sub_6BBFC+94↑j
                ldt     0x30(g0), r8
                subr    r4, r8, r4
                subr    r5, r9, r5
                subr    r6, r10, r6
                divr    r3, r4, r4
                divr    r3, r5, r5
                divr    r3, r6, r6
                stt     r4, 0x298(g13)
                b       loc_6BCC8
# ---------------------------------------------------------------------------
loc_6BCBC:                              # CODE XREF: sub_6BBFC+24↑j
                movt    0, r4
                stt     r4, 0x218(g13)
                stt     r4, 0x298(g13)
loc_6BCC8:                              # CODE XREF: sub_6BBFC+BC↑j
                ldob    0x42(g0), r14
                cmpobe  0, r14, loc_6BD38
                ldos    0x1C(g0), r3
                ldos    0x64(g0), r11
                subi    r3, r11, r3
                cvtir   r3, r3
                lda     0x42800000, r13
                divr    r13, r3, r3
                ldt     0x0(g0), r4     # g0 will be float from cam_mot_check
                ldt     72(g0), r8
                subr    r4, r8, r4
                subr    r5, r9, r5
                subr    r6, r10, r6
                divr    r3, r4, r4
                divr    r3, r5, r5
                divr    r3, r6, r6
                stt     r4, 0x224(g13)
                ldt     12(g0), r4
                ldt     84(g0), r8
                subr    r4, r8, r4
                subr    r5, r9, r5
                subr    r6, r10, r6
                divr    r3, r4, r4
                divr    r3, r5, r5
                divr    r3, r6, r6
                stt     r4, 0x2A4(g13)
                b       loc_6BD44
# ---------------------------------------------------------------------------
loc_6BD38:                              # CODE XREF: sub_6BBFC+D0↑j
                movt    0, r4
                stt     r4, 0x224(g13)
                stt     r4, 0x2A4(g13)
loc_6BD44:                              # CODE XREF: sub_6BBFC+138↑j
                b       loc_6BACC
# End of function sub_6BBFC
# =============== S U B R O U T I N E =======================================
sub_6BD48:                              # DATA XREF: ROM:0009C850↓o
                mov     g0, r7
                ld      0x230(g13), r3
                ld      0x214(g13), g3
                ldt     0xC(r7), g0
                ldob    0x294(g13), r14
                cmpobne 0, r14, loc_6BD64
                ldt     0x2C4(g13), g0
loc_6BD64:                              # CODE XREF: sub_6BD48+14↑j
                ldt     0x30(r7), r4
                ldt     0x298(g13), r8
                ldt     0x2A4(g13), g4
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                ld      (g11)[g12*1], g4
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                ld      (g11)[g12*1], g5
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], g6
                ldt     0x0(r7), g0
                ldob    0x294(g13), r14
                cmpobne 0, r14, loc_6BDF8
                ldt     0x2B8(g13), g0
loc_6BDF8:                              # CODE XREF: sub_6BD48+A8↑j
                ldt     0x24(r7), r4
                ldt     0x218(g13), r8
                ldt     0x224(g13), r12
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], g1
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                ld      (g11)[g12*1], g2
                lda     0x3F800000, r13
                addr    r13, g3, r15
                st      r15, 0x214(g13)
                ret
# End of function sub_6BD48
# ---------------------------------------------------------------------------
cam_mot_check:  .short 466              # DATA XREF: cam_mode_9:loc_6B480↑o
                .short 14
                .short 145
                .short 0
                .long flt_6CB4C         # Right
                .long flt_6CB4C         # Left
                .short 167              # KURURI_N
                .short 10
                .short 120
                .short 0
                .long flt_6CCD8
                .long flt_6CDB0
                .short 284              # SUKUI_SNC_N
                .short 10
                .short 75
                .short 0
                .long flt_6CE88
                .long flt_6CF3C
                .short 175              # MAWASI_Y
                .short 10
                .short 210
                .short 0
                .long flt_6D1A0
                .long flt_6D278
                .short 180              # PACHIKI_N
                .short 10
                .short 80
                .short 0
                .long flt_6D350
                .long flt_6D350
                .short 307              # UFO_N
                .short 10
                .short 110
                .short 0
                .long flt_6D3E0
                .long flt_6D3E0
                .short 105              # FUMIDAI_N
                .short 10
                .short 70
                .short 0
                .long flt_6D7D0
                .long flt_6D8A8
                .short 281              # SON_FUMI_Y
                .short 10
                .short 76
                .short 0
                .long flt_6D620
                .long flt_6D6F8
                .short 165              # KUMA_TATAKI_N
                .short 10
                .short 90
                .short 0
                .long flt_6D980
                .long flt_6DA10
                .short 147              # KUMA_HAM_NAGE_N
                .short 10
                .short 90
                .short 0
                .long flt_6DAA0
                .long flt_6DAA0
                .short 464              # MSN_SKY2_N
                .short 10
                .short 140
                .short 0
                .long flt_6DB30
                .long flt_6DB30
                .short 36               # BIG_NAGE00_N
                .short 10
                .short 70
                .short 0
                .long flt_6DB9C
                .long flt_6DC2C
                .short 34               # BERO_N
                .short 10
                .short 70
                .short 0
                .long flt_6CFF0
                .long flt_6D080
                .short 32               # ASIFUMI_N
                .short 10
                .short 70
                .short 0
                .long flt_6D590
                .long flt_6D590
                .short 445              # MEMAWASHI_N
                .short 10
                .short 220
                .short 0
                .long flt_6C7A4
                .long flt_6C858
                .short 435              # KUIMA_BOWL_N
                .short 10
                .short 110
                .short 0
                .long flt_6C90C
                .long flt_6C99C
                .short 418              # BETA_N
                .short 10
                .short 110
                .short 0
                .long flt_6CA2C
                .long flt_6CABC
                .short 413              # MIDAREZUKI_Y
                .short 10
                .long 210
                .long flt_6C5AC
                .long flt_6C4D4
                .short 411              # KUMA_ATAMA_N
                .short 10
                .short 85
                .short 0
                .long flt_6C684
                .long flt_6C714
                .short 443              # HM_UBAI_N
                .short 10
                .short 200
                .short 0
                .long flt_6C0E4
                .long flt_6C1E0
                .short 448              # GUN_UBAI_N
                .short 10
                .short 200
                .short 0
                .long flt_6C0E4
                .long flt_6C1E0
                .short 409              # BERO_COMB_N
                .short 10
                .short 70
                .short 0
                .long flt_6CFF0
                .long flt_6D080
                .short 492              # BOMB_UBAI_N
                .short 10
                .short 190
                .short 0
                .long flt_6C2DC
                .long flt_6C3D8
                .short 484              # HIPPARI_N
                .short 10
                .short 100
                .short 0
                .long flt_6D110
                .long flt_6D110
                .short 495              # TLS_SKY3_N
                .short 14
                .short 130
                .short 0
                .long flt_6CBB8
                .long flt_6CC48
                .short 0
                .short 0
                .short 0
                .short 0
                .float 0.0
                .float 0.0
                .long 0
                .float 1.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .float 0.0
                .float -6.5
                .float 1.27
                .float 0.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 20
                .short 2
                .float 0.0
                .float 0.0
                .float 1.27
                .float 6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 40
                .short 2
                .float 0.0
                .float 6.5
                .float 1.27
                .float -0.1
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 60
                .short 2
                .float 0.0
                .float 0.0
                .float 1.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 70
                .short 2
                .float 0.0
flt_6C0E4:      .float 0.0              # DATA XREF: ROM:0006BFC8↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float -1.0             # Block #1
                .float 1.0
                .float -2.5
                .float 0.0
                .float 1.3
                .float 0.0
                .float 100.0
                .short 5
                .short 0x502
                .short 0
                .short 0
                .float -0.5             # Block #2
                .float 2.3
                .float -2.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x23
                .short 0x502
                .short 3
                .short 0
                .float 0.0              # Block #3
                .float 2.3
                .float -2.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x502
                .short 3
                .short 0
                .float 2.0              # Block #4
                .float 2.3
                .float -2.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x50
                .short 0x402
                .short 3
                .short 0
                .float 3.0              # Block #5
                .float 2.3
                .float -3.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x78
                .short 0x402
                .short 3
                .short 0
                .float 4.0              # Block #6
                .float 2.3
                .float -3.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0xC8
                .short 0x400
                .short 3
                .short 0
flt_6C1E0:      .float 0.0              # DATA XREF: ROM:0006BFCC↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 1.0              # Block #8
                .float 1.0
                .float -2.5
                .float 0.0
                .float 1.3
                .float 0.0
                .float 100.0
                .short 5
                .short 0x502
                .short 0
                .short 0
                .float 0.5              # Block #9
                .float 2.3
                .float -2.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x23
                .short 0x502
                .short 3
                .short 0
                .float 0.0              # Block #10
                .float 2.3
                .float -2.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x502
                .short 3
                .short 0
                .float -2.0             # Block #11
                .float 2.3
                .float -2.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x50
                .short 0x402
                .short 3
                .short 0
                .float -3.0             # Block #12
                .float 2.3
                .float -3.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x78
                .short 0x402
                .short 3
                .short 0
                .float -4.0             # Block #13
                .float 2.3
                .float -3.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0xC8
                .short 0x400
                .short 3
                .short 0
flt_6C2DC:      .float 0.0              # DATA XREF: ROM:0006BFF8↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float -1.0             # Block #15
                .float 1.0
                .float -2.5
                .float 0.0
                .float 1.3
                .float 0.0
                .float 100.0
                .short 5
                .short 0x502
                .short 0
                .short 0
                .float -0.5             # Block #16
                .float 2.3
                .float -2.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x23
                .short 0x502
                .short 3
                .short 0
                .float 0.0              # Block #17
                .float 2.3
                .float -2.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x502
                .short 3
                .short 0
                .float -4.0             # Block #18
                .float 2.3
                .float 0.0
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x50
                .short 0x502
                .short 3
                .short 0
                .float -4.0             # Block #19
                .float 2.3
                .float 3.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x78
                .short 0x502
                .short 3
                .short 0
                .float -3.5             # Block #20
                .float 2.3
                .float 3.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0xBE
                .short 0x400
                .short 3
                .short 0
flt_6C3D8:      .float 0.0              # DATA XREF: ROM:0006BFFC↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 1.0              # Block #22
                .float 1.0
                .float -2.5
                .float 0.0
                .float 1.3
                .float 0.0
                .float 100.0
                .short 5
                .short 0x502
                .short 0
                .short 0
                .float 0.5              # Block #23
                .float 2.3
                .float -2.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x23
                .short 0x502
                .short 3
                .short 0
                .float 0.0              # Block #24
                .float 2.3
                .float -2.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x502
                .short 3
                .short 0
                .float 2.0              # Block #25
                .float 2.3
                .float -2.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x50
                .short 0x402
                .short 3
                .short 0
                .float 3.0              # Block #26
                .float 2.3
                .float -3.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x78
                .short 0x402
                .short 3
                .short 0
                .float 4.0              # Block #27
                .float 2.3
                .float -3.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0xBE
                .short 0x400
                .short 3
                .short 0
flt_6C4D4:      .float 0.0              # DATA XREF: ROM:0006BFAC↑o
                .float 1.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 0x302
                .short 3
                .short 0
                .float -3.0             # Block #29
                .float 2.27
                .float -3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x1E
                .short 0x502
                .short 3
                .short 0
                .float 3.0              # Block #30
                .float 2.27
                .float -3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x502
                .short 3
                .short 0
                .float 3.0              # Block #31
                .float 3.27
                .float 3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x78
                .short 0x502
                .short 3
                .short 0
                .float -3.0             # Block #32
                .float 3.27
                .float 3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xB4
                .short 0x502
                .short 3
                .short 0
                .float -3.0             # Block #33
                .float 3.27
                .float -3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xD2
                .short 0x300
                .short 3
                .short 0
flt_6C5AC:      .float 0.0              # DATA XREF: ROM:0006BFA8↑o
                .float 1.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 0x302
                .short 3
                .short 0
                .float -3.0             # Block #35
                .float 2.27
                .float -3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x1E
                .short 0x502
                .short 3
                .short 0
                .float -3.0             # Block #36
                .float 2.27
                .float 3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x502
                .short 3
                .short 0
                .float 3.0              # Block #37
                .float 3.27
                .float 3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x78
                .short 0x502
                .short 3
                .short 0
                .float 3.0              # Block #38
                .float 3.27
                .float -3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xB4
                .short 0x502
                .short 3
                .short 0
                .float -3.0             # Block #39
                .float 3.27
                .float -3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xD2
                .short 0x300
                .short 3
                .short 0
flt_6C684:      .float 0.0              # DATA XREF: ROM:0006BFB8↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #41
                .float 3.5
                .float -4.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 0
                .short 0
                .float 4.5              # Block #42
                .float 2.27
                .float -4.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x46
                .short 0x402
                .short 3
                .short 0
                .float 5.5              # Block #43
                .float 2.27
                .float -4.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x55
                .short 0x400
                .short 3
                .short 0
flt_6C714:      .float 0.0              # DATA XREF: ROM:0006BFBC↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 4.5              # Block #45
                .float 3.5
                .float -4.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 0
                .short 0
                .float 4.5              # Block #46
                .float 2.27
                .float 0.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x28
                .short 0x402
                .short 3
                .short 0
                .float 4.5              # Block #47
                .float 2.27
                .float 4.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x55
                .short 0x400
                .short 3
                .short 0
flt_6C7A4:      .float 0.0              # DATA XREF: ROM:0006BF78↑o
                .float 1.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 0x302
                .short 3
                .short 0
                .float -3.5             # Block #49
                .float 2.27
                .float -3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x14
                .short 0x502
                .short 3
                .short 0
                .float -3.5             # Block #50
                .float 2.27
                .float -3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x78
                .short 0x502
                .short 3
                .short 0
                .float -1.0             # Block #51
                .float 3.27
                .float -3.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xB4
                .short 0x502
                .short 3
                .short 0
                .float -2.0             # Block #52
                .float 3.27
                .float -4.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xDC
                .short 0x300
                .short 3
                .short 0
flt_6C858:      .float 0.0              # DATA XREF: ROM:0006BF7C↑o
                .float 1.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 0x302
                .short 3
                .short 0
                .float 3.5              # Block #54
                .float 2.27
                .float -3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x14
                .short 0x502
                .short 3
                .short 0
                .float 3.5              # Block #55
                .float 2.27
                .float -3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x78
                .short 0x502
                .short 3
                .short 0
                .float 1.0              # Block #56
                .float 3.27
                .float -3.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xB4
                .short 0x502
                .short 3
                .short 0
                .float 2.0              # Block #57
                .float 3.27
                .float -4.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xDC
                .short 0x300
                .short 3
                .short 0
flt_6C90C:      .float 0.0              # DATA XREF: ROM:0006BF88↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #59
                .float 3.5
                .float -3.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 0
                .short 0
                .float 8.5              # Block #60
                .float 3.27
                .float 0.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x50
                .short 0x302
                .short 3
                .short 0
                .float 9.5              # Block #61
                .float 4.27
                .float 0.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x64
                .short 0x300
                .short 3
                .short 0
flt_6C99C:      .float 0.0              # DATA XREF: ROM:0006BF8C↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #63
                .float 3.5
                .float -3.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 0
                .short 0
                .float -8.5             # Block #64
                .float 3.27
                .float 0.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x50
                .short 0x302
                .short 3
                .short 0
                .float -9.5             # Block #65
                .float 4.27
                .float 0.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x64
                .short 0x300
                .short 3
                .short 0
flt_6CA2C:      .float 0.0              # DATA XREF: ROM:0006BF98↑o
                .float 1.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 0x302
                .short 3
                .short 0
                .float 4.5              # Block #67
                .float 3.27
                .float 0.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x1E
                .short 0x402
                .short 4
                .short 0
                .float 4.5              # Block #68
                .float 3.27
                .float 0.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x50
                .short 0x402
                .short 4
                .short 0
                .float 4.5              # Block #69
                .float 3.27
                .float 2.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x64
                .short 0x400
                .short 3
                .short 0
flt_6CABC:      .float 0.0              # DATA XREF: ROM:0006BF9C↑o
                .float 1.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 0x302
                .short 3
                .short 0
                .float -4.5             # Block #71
                .float 3.27
                .float 0.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x1E
                .short 0x402
                .short 4
                .short 0
                .float -4.5             # Block #72
                .float 3.27
                .float 0.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x50
                .short 0x402
                .short 4
                .short 0
                .float -4.5             # Block #73
                .float 3.27
                .float 2.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x64
                .short 0x400
                .short 3
                .short 0
flt_6CB4C:      .float 0.0              # DATA XREF: ROM:0006BE98↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #75
                .float 2.27
                .float -6.5
                .float 0.0
                .float 7.0
                .float 0.0
                .float 100.0
                .short 0x4B
                .short 0x302
                .short 3
                .short 0
                .float 0.0              # Block #76
                .float 0.56999999
                .float -6.5
                .float 0.0
                .float 3.5
                .float 0.0
                .float 100.0
                .short 0x64
                .short 0
                .short 0
                .short 0
flt_6CBB8:      .float 0.0              # DATA XREF: ROM:0006C018↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #78
                .float 1.0
                .float -3.5
                .float 0.0
                .float 4.0999999
                .float 0.0
                .float 100.0
                .short 0x1E
                .short 0x402
                .short 0
                .short 0
                .float 8.5              # Block #79
                .float 2.27
                .float -2.0
                .float 0.0
                .float 4.0999999
                .float 0.0
                .float 100.0
                .short 0x50
                .short 0x302
                .short 3
                .short 0
                .float 10.5             # Block #80
                .float 5.27
                .float -2.0
                .float 0.0
                .float 10.1
                .float 0.0
                .float 100.0
                .short 0x82
                .short 0x300
                .short 3
                .short 0
flt_6CC48:      .float 0.0              # DATA XREF: ROM:0006C01C↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #82
                .float 1.0
                .float -3.5
                .float 0.0
                .float 4.0999999
                .float 0.0
                .float 100.0
                .short 0x1E
                .short 0x402
                .short 0
                .short 0
                .float -8.5             # Block #83
                .float 2.27
                .float -2.0
                .float 0.0
                .float 4.0999999
                .float 0.0
                .float 100.0
                .short 0x50
                .short 0x302
                .short 3
                .short 0
                .float -10.5            # Block #84
                .float 5.27
                .float -2.0
                .float 0.0
                .float 10.1
                .float 0.0
                .float 100.0
                .short 0x82
                .short 0x300
                .short 3
                .short 0
flt_6CCD8:      .float 0.0              # DATA XREF: ROM:0006BEA8↑o
                .float 1.27
                .float -2.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 0x402
                .short 4
                .short 0
                .float 4.5              # Block #86
                .float 1.27
                .float -3.5
                .float 0.0
                .float 2.0999999
                .float 0.0
                .float 100.0
                .short 0x14
                .short 0x302
                .short 3
                .short 0
                .float 4.0              # Block #87
                .float 2.27
                .float -4.5
                .float 0.0
                .float 3.5
                .float 0.0
                .float 100.0
                .short 0x23
                .short 0x502
                .short 3
                .short 0
                .float 4.5              # Block #88
                .float 1.27
                .float -3.5
                .float 0.0
                .float 3.0999999
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x502
                .short 3
                .short 0
                .float 7.8000002        # Block #89
                .float 1.27
                .float -2.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x46
                .short 0x400
                .short 3
                .short 0
                .float 7.8000002        # Block #90
                .float 1.27
                .float -2.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x64
                .short 0x400
                .short 3
                .short 0
flt_6CDB0:      .float 0.0              # DATA XREF: ROM:0006BEAC↑o
                .float 1.27
                .float -2.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 0x402
                .short 4
                .short 0
                .float 4.5              # Block #92
                .float 1.27
                .float -3.5
                .float 0.0
                .float 2.0999999
                .float 0.0
                .float 100.0
                .short 0x14
                .short 0x302
                .short 3
                .short 0
                .float -4.0             # Block #93
                .float 2.27
                .float -4.5
                .float 0.0
                .float 3.5
                .float 0.0
                .float 100.0
                .short 0x23
                .short 0x502
                .short 3
                .short 0
                .float -4.5             # Block #94
                .float 1.27
                .float -3.5
                .float 0.0
                .float 3.0999999
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x502
                .short 3
                .short 0
                .float -7.8000002       # Block #95
                .float 1.27
                .float -2.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x46
                .short 0x400
                .short 3
                .short 0
                .float -7.8000002       # Block #96
                .float 1.27
                .float -2.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x64
                .short 0x400
                .short 3
                .short 0
flt_6CE88:      .float 0.0              # DATA XREF: ROM:0006BEB8↑o
                .float 1.27
                .float -2.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 0x402
                .short 4
                .short 0
                .float 3.5              # Block #98
                .float 3.27
                .float -2.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xA
                .short 2
                .short 0
                .short 0
                .float 1.5              # Block #99
                .float 8.8000002
                .float -2.5
                .float 0.0
                .float 2.0999999
                .float 0.0
                .float 100.0
                .short 0x28
                .short 0x502
                .short 5
                .short 0
                .float 7.0              # Block #100
                .float 3.27
                .float -4.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x500
                .short 3
                .short 0
                .float 7.0              # Block #101
                .float 3.27
                .float -4.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x4B
                .short 0x500
                .short 3
                .short 0
flt_6CF3C:      .float 0.0              # DATA XREF: ROM:0006BEBC↑o
                .float 1.27
                .float -2.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 0x402
                .short 4
                .short 0
                .float 3.5              # Block #103
                .float 3.27
                .float -2.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xA
                .short 2
                .short 0
                .short 0
                .float -1.5             # Block #104
                .float 8.8000002
                .float -2.5
                .float 0.0
                .float 2.0999999
                .float 0.0
                .float 100.0
                .short 0x28
                .short 0x502
                .short 5
                .short 0
                .float -7.0             # Block #105
                .float 3.27
                .float -4.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x500
                .short 3
                .short 0
                .float -7.0             # Block #106
                .float 3.27
                .float -4.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x4B
                .short 0x500
                .short 3
                .short 0
flt_6CFF0:      .float 0.0              # DATA XREF: ROM:0006BF58↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #108
                .float 1.8
                .float -3.0
                .float 0.0
                .float 2.0
                .float 0.0
                .float 100.0
                .short 0xF
                .short 0x402
                .short 3
                .short 0
                .float 7.5              # Block #109
                .float 3.5
                .float -4.5
                .float 0.0
                .float 1.0
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x300
                .short 3
                .short 0
                .float 7.5              # Block #110
                .float 3.5
                .float -4.5
                .float 0.0
                .float 1.0
                .float 0.0
                .float 100.0
                .short 0x46
                .short 0x300
                .short 3
                .short 0
flt_6D080:      .float 0.0              # DATA XREF: ROM:0006BF5C↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #112
                .float 1.8
                .float -3.0
                .float 0.0
                .float 2.0
                .float 0.0
                .float 100.0
                .short 0xF
                .short 0x402
                .short 3
                .short 0
                .float -7.5             # Block #113
                .float 3.5
                .float -4.5
                .float 0.0
                .float 1.0
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x300
                .short 3
                .short 0
                .float -7.5             # Block #114
                .float 3.5
                .float -4.5
                .float 0.0
                .float 1.0
                .float 0.0
                .float 100.0
                .short 0x46
                .short 0x300
                .short 3
                .short 0
flt_6D110:      .float 0.0              # DATA XREF: ROM:0006C008↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #116
                .float 3.5
                .float -4.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 0
                .short 0
                .float 1.0              # Block #117
                .float 1.8
                .float -3.0
                .float 0.0
                .float 1.5
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x402
                .short 3
                .short 0
                .float 1.0              # Block #118
                .float 2.3
                .float -5.5
                .float 0.0
                .float 1.5
                .float 0.0
                .float 100.0
                .short 0x64
                .short 0x400
                .short 3
                .short 0
flt_6D1A0:      .float 0.0              # DATA XREF: ROM:0006BEC8↑o
                .float 1.27
                .float -2.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 0x402
                .short 4
                .short 0
                .float -3.0             # Block #120
                .float 0.5
                .float -3.0
                .float 0.0
                .float 0.5
                .float 0.0
                .float 100.0
                .short 0x1E
                .short 0x402
                .short 4
                .short 0
                .float -3.0             # Block #121
                .float 4.27
                .float -3.0
                .float 0.0
                .float 1.0
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x302
                .short 3
                .short 0
                .float -3.5             # Block #122
                .float 7.5
                .float -1.5
                .float 0.0
                .float 0.5
                .float 0.0
                .float 100.0
                .short 0x82
                .short 0x302
                .short 5
                .short 0
                .float -10.0            # Block #123
                .float 1.27
                .float -1.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x96
                .short 0
                .short 3
                .short 0
                .float -10.0            # Block #124
                .float 1.27
                .float -1.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xD2
                .short 0
                .short 3
                .short 0
flt_6D278:      .float 0.0              # DATA XREF: ROM:0006BECC↑o
                .float 1.27
                .float -2.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 0x402
                .short 4
                .short 0
                .float 3.0              # Block #126
                .float 0.5
                .float -3.0
                .float 0.0
                .float 0.5
                .float 0.0
                .float 100.0
                .short 0x1E
                .short 0x402
                .short 4
                .short 0
                .float 3.0              # Block #127
                .float 4.27
                .float -3.0
                .float 0.0
                .float 1.0
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x302
                .short 3
                .short 0
                .float 3.5              # Block #128
                .float 7.5
                .float -1.5
                .float 0.0
                .float 0.5
                .float 0.0
                .float 100.0
                .short 0x82
                .short 0x302
                .short 5
                .short 0
                .float 10.0             # Block #129
                .float 1.27
                .float 1.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x96
                .short 0
                .short 3
                .short 0
                .float 10.0             # Block #130
                .float 1.27
                .float 1.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xD2
                .short 0
                .short 3
                .short 0
flt_6D350:      .float 0.0              # DATA XREF: ROM:0006BED8↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #132
                .float 3.5
                .float -3.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 0
                .short 0
                .float 1.0              # Block #133
                .float 2.3
                .float -2.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x2D
                .short 0x400
                .short 3
                .short 0
                .float 1.0              # Block #134
                .float 2.3
                .float -2.8
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x50
                .short 0x400
                .short 3
                .short 0
flt_6D3E0:      .float 0.0              # DATA XREF: ROM:0006BEE8↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #136
                .float 2.0
                .float -3.5
                .float 0.0
                .float 2.3
                .float 0.0
                .float 100.0
                .short 0x14
                .short 0x402
                .short 3
                .short 0
                .float 0.0              # Block #137
                .float 2.0
                .float -3.5
                .float 0.0
                .float 2.3
                .float 0.0
                .float 100.0
                .short 0x15
                .short 0x400
                .short 3
                .short 0
                .float 0.0              # Block #138
                .float 2.0
                .float -3.5
                .float 0.0
                .float 2.3
                .float 0.0
                .float 100.0
                .short 0x1E
                .short 0x402
                .short 3
                .short 0
                .float 2.0              # Block #139
                .float 1.3
                .float -5.5
                .float 0.0
                .float 2.3
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x400
                .short 3
                .short 0
                .float 0.0              # Block #140
                .float 1.5
                .float -6.0
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x6E
                .short 0x300
                .short 3
                .short 0
                .float 0.0              # Block #141
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #142
                .float 2.0
                .float -3.5
                .float 0.0
                .float 2.3
                .float 0.0
                .float 100.0
                .short 0x14
                .short 0x402
                .short 3
                .short 0
                .float 0.0              # Block #143
                .float 2.0
                .float -3.5
                .float 0.0
                .float 2.3
                .float 0.0
                .float 100.0
                .short 0x15
                .short 0x400
                .short 3
                .short 0
                .float 0.0              # Block #144
                .float 2.0
                .float -3.5
                .float 0.0
                .float 2.3
                .float 0.0
                .float 100.0
                .short 0x1E
                .short 0x402
                .short 3
                .short 0
                .float 2.0              # Block #145
                .float 1.3
                .float -5.5
                .float 0.0
                .float 2.3
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x400
                .short 3
                .short 0
                .float 0.0              # Block #146
                .float 1.5
                .float -6.0
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0x6E
                .short 0x300
                .short 3
                .short 0
flt_6D590:      .float 0.0              # DATA XREF: ROM:0006BF68↑o
                .float 1.5
                .float -3.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #148
                .float 1.5
                .float -3.0
                .float 0.0
                .float 0.5
                .float 0.0
                .float 100.0
                .short 0x20
                .short 0x402
                .short 3
                .short 0
                .float 0.5              # Block #149
                .float 3.0999999
                .float -4.5
                .float 0.0
                .float 1.5
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x300
                .short 3
                .short 0
                .float 0.5              # Block #150
                .float 3.0999999
                .float -4.5
                .float 0.0
                .float 1.5
                .float 0.0
                .float 100.0
                .short 0x46
                .short 0x300
                .short 3
                .short 0
flt_6D620:      .float 0.0              # DATA XREF: ROM:0006BF08↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 1.0              # Block #152
                .float 2.5
                .float -4.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 4
                .short 0
                .float 0.0              # Block #153
                .float 3.5
                .float -4.0
                .float 0.0
                .float 2.5
                .float 0.0
                .float 100.0
                .short 0x23
                .short 0x402
                .short 4
                .short 0
                .float 2.9000001        # Block #154
                .float 6.5
                .float -4.5
                .float 0.0
                .float 3.0
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x402
                .short 3
                .short 0
                .float 3.0              # Block #155
                .float 1.0
                .float -6.5
                .float 0.0
                .float 3.0
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x300
                .short 3
                .short 0
                .float 3.0              # Block #156
                .float 1.0
                .float -6.5
                .float 0.0
                .float 3.0
                .float 0.0
                .float 100.0
                .short 0x41
                .short 0x300
                .short 3
                .short 0
flt_6D6F8:      .float 0.0              # DATA XREF: ROM:0006BF0C↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 1.0              # Block #158
                .float 2.5
                .float -4.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 4
                .short 0
                .float 0.0              # Block #159
                .float 3.5
                .float -4.0
                .float 0.0
                .float 2.5
                .float 0.0
                .float 100.0
                .short 0x23
                .short 0x402
                .short 4
                .short 0
                .float -2.9000001       # Block #160
                .float 6.5
                .float -4.5
                .float 0.0
                .float 3.0
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x402
                .short 3
                .short 0
                .float -3.0             # Block #161
                .float 1.0
                .float -6.5
                .float 0.0
                .float 3.0
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x300
                .short 3
                .short 0
                .float -3.0             # Block #162
                .float 1.0
                .float -6.5
                .float 0.0
                .float 3.0
                .float 0.0
                .float 100.0
                .short 0x41
                .short 0x300
                .short 3
                .short 0
flt_6D7D0:      .float 0.0              # DATA XREF: ROM:0006BEF8↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #164
                .float 2.5
                .float -5.0
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 4
                .short 0
                .float 0.0              # Block #165
                .float 2.5
                .float -4.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x17
                .short 0x402
                .short 4
                .short 0
                .float -4.5             # Block #166
                .float 1.0
                .float -6.5
                .float 0.0
                .float 5.0
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x402
                .short 4
                .short 0
                .float -4.5             # Block #167
                .float 3.0
                .float -7.5
                .float 0.0
                .float 1.3
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x300
                .short 3
                .short 0
                .float -4.5             # Block #168
                .float 3.0
                .float -7.5
                .float 0.0
                .float 1.3
                .float 0.0
                .float 100.0
                .short 0x46
                .short 0x300
                .short 3
                .short 0
flt_6D8A8:      .float 0.0              # DATA XREF: ROM:0006BEFC↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #170
                .float 2.5
                .float -5.0
                .float 0.0
                .float 1.8
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 4
                .short 0
                .float 0.0              # Block #171
                .float 2.5
                .float -4.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x17
                .short 0x402
                .short 4
                .short 0
                .float 4.5              # Block #172
                .float 1.0
                .float -6.5
                .float 0.0
                .float 5.0
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x402
                .short 4
                .short 0
                .float 4.5              # Block #173
                .float 3.0
                .float -7.5
                .float 0.0
                .float 1.3
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x300
                .short 3
                .short 0
                .float 4.5              # Block #174
                .float 3.0
                .float -7.5
                .float 0.0
                .float 1.3
                .float 0.0
                .float 100.0
                .short 0x46
                .short 0x300
                .short 3
                .short 0
flt_6D980:      .float 0.0              # DATA XREF: ROM:0006BF18↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #176
                .float 3.5
                .float -3.5
                .float 0.0
                .float 2.0999999
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 3
                .short 0
                .float 7.5              # Block #177
                .float 1.5
                .float 0.0
                .float 0.0
                .float 3.4000001
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x300
                .short 3
                .short 0
                .float 7.5              # Block #178
                .float 1.5
                .float 0.0
                .float 0.0
                .float 3.4000001
                .float 0.0
                .float 100.0
                .short 0x5A
                .short 0x300
                .short 3
                .short 0
flt_6DA10:      .float 0.0              # DATA XREF: ROM:0006BF1C↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #180
                .float 3.5
                .float -3.5
                .float 0.0
                .float 2.0999999
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 3
                .short 0
                .float -7.5             # Block #181
                .float 1.5
                .float 0.0
                .float 0.0
                .float 3.4000001
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x300
                .short 3
                .short 0
                .float -7.5             # Block #182
                .float 1.5
                .float 0.0
                .float 0.0
                .float 3.4000001
                .float 0.0
                .float 100.0
                .short 0x5A
                .short 0x300
                .short 3
                .short 0
flt_6DAA0:      .float 0.0              # DATA XREF: ROM:0006BF28↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #184
                .float 3.5
                .float -4.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 0
                .short 0
                .float 0.0              # Block #185
                .float 2.5
                .float -2.4000001
                .float 0.0
                .float 2.2
                .float 0.0
                .float 100.0
                .short 0x28
                .short 0x300
                .short 3
                .short 0
                .float 0.0              # Block #186
                .float 2.5
                .float -2.4000001
                .float 0.0
                .float 2.2
                .float 0.0
                .float 100.0
                .short 0x50
                .short 0x300
                .short 3
                .short 0
flt_6DB30:      .float 0.0              # DATA XREF: ROM:0006BF38↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #188
                .float 2.27
                .float -6.5
                .float 0.0
                .float 7.0
                .float 0.0
                .float 100.0
                .short 0x3C
                .short 0x302
                .short 3
                .short 0
                .float 0.0              # Block #189
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x8C
                .short 0
                .short 0
                .short 0
flt_6DB9C:      .float 0.0              # DATA XREF: ROM:0006BF48↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #191
                .float 3.5
                .float -3.5
                .float 0.0
                .float 2.0999999
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 3
                .short 0
                .float 7.5              # Block #192
                .float 5.5
                .float 0.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x300
                .short 3
                .short 0
                .float 7.5              # Block #193
                .float 1.5
                .float 0.0
                .float 0.0
                .float 3.4000001
                .float 0.0
                .float 100.0
                .short 0x46
                .short 0x300
                .short 3
                .short 0
flt_6DC2C:      .float 0.0              # DATA XREF: ROM:0006BF4C↑o
                .float 2.27
                .float -6.5
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0
                .short 2
                .short 0
                .short 0
                .float 0.0              # Block #195
                .float 3.5
                .float -3.5
                .float 0.0
                .float 2.0999999
                .float 0.0
                .float 100.0
                .short 0xA
                .short 0x402
                .short 3
                .short 0
                .float -7.5             # Block #196
                .float 5.5
                .float 0.0
                .float 0.0
                .float 1.1
                .float 0.0
                .float 100.0
                .short 0x32
                .short 0x300
                .short 3
                .short 0
                .float -7.5             # Block #197
                .float 1.5
                .float 0.0
                .float 0.0
                .float 3.4000001
                .float 0.0
                .float 100.0
                .short 0x46
                .short 0x300
                .short 3
                .short 0
# =============== S U B R O U T I N E =======================================
cam_mode_to_33:                         # CODE XREF: cam_mode_9+220↑p
                lda     cam_mode33, r15
                stib    r15, 0x40(g13)  # store 0x21 (33) to cam_mode
                ret
# End of function cam_mode_to_33
# =============== S U B R O U T I N E =======================================
sub_6DCCC:                              # CODE XREF: cam_mode_9+2A4↑j
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                ldob    gameprogram, r3 # bit 0 clear = Player 1
                cmpo    0, r3
                be      loc_6DCF8
                mov     g8, r15
                mov     g7, g8
                mov     r15, g7
loc_6DCF8:                              # CODE XREF: sub_6DCCC+1C↑j
                ld      0x1A4(g7), r15
                bbc     5, r15, loc_6DD0C
                ld      0x1F4(g7), r4
                ld      0x1FC(g7), r6
                b       loc_6DD14
# ---------------------------------------------------------------------------
loc_6DD0C:                              # CODE XREF: sub_6DCCC+30↑j
                ld      0x18(g7), r4
                ld      0x20(g7), r6
loc_6DD14:                              # CODE XREF: sub_6DCCC+3C↑j
                bbs     0x12, r15, loc_6DD24
                bbs     0x10, r15, loc_6DD24
                bbs     0xE, r15, loc_6DD24
                bbc     4, r15, loc_6DD2C
loc_6DD24:                              # CODE XREF: sub_6DCCC:loc_6DD14↑j
                ld      0x1F8(g7), r5
                b       loc_6DD3C
# ---------------------------------------------------------------------------
loc_6DD2C:                              # CODE XREF: sub_6DCCC+54↑j
                ld      0x1C(g7), r5
                lda     0x3F800000, r15
                addr    r15, r5, r5
loc_6DD3C:                              # CODE XREF: sub_6DCCC+5C↑j
                ld      0x1A4(g8), r15
                bbc     5, r15, loc_6DD50
                ld      0x1F4(g8), r8
                ld      0x1FC(g8), r10
                b       loc_6DD58
# ---------------------------------------------------------------------------
loc_6DD50:                              # CODE XREF: sub_6DCCC+74↑j
                ld      0x18(g8), r8
                ld      0x20(g8), r10
loc_6DD58:                              # CODE XREF: sub_6DCCC+80↑j
                bbs     0x12, r15, loc_6DD68
                bbs     0x10, r15, loc_6DD68
                bbs     0xE, r15, loc_6DD68
                bbc     4, r15, loc_6DD70
loc_6DD68:                              # CODE XREF: sub_6DCCC:loc_6DD58↑j
                ld      0x1F8(g8), r9
                b       loc_6DD80
# ---------------------------------------------------------------------------
loc_6DD70:                              # CODE XREF: sub_6DCCC+98↑j
                ld      0x1C(g8), r9
                lda     0x3F800000, r15
                addr    r15, r9, r9
loc_6DD80:                              # CODE XREF: sub_6DCCC+A0↑j
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x40000000, r12
                lda     0x40000000, r13
                lda     0xC0400000, r14
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0xBFC00000, r12
                lda     displacement, r13
                lda     displacement, r14
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ldt     0x120(g13), r12
                lda     0x3D4CCCCD, r3
                subr    r12, r8, r8
                mulr    r3, r8, r8
                addr    r12, r8, r8
                subr    r13, r9, r9
                mulr    r3, r9, r9
                addr    r13, r9, r9
                subr    r14, r10, r10
                mulr    r3, r10, r10
                addr    r14, r10, r10
                stt     r8, 0x120(g13)
                ldt     0x18(g13), r12
                lda     0x3D4CCCCD, r3
                subr    r12, r4, r4
                mulr    r3, r4, r4
                addr    r12, r4, r4
                subr    r13, r5, r5
                mulr    r3, r5, r5
                addr    r13, r5, r5
                subr    r14, r6, r6
                mulr    r3, r6, r6
                addr    r14, r6, r6
                stt     r4, 0x18(g13)
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                subr    r5, r9, r3
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                stos    r7, 0x26(g13)
                stos    r3, 0x24(g13)
                ret
# End of function sub_6DCCC
# =============== S U B R O U T I N E =======================================
cam_mode_1:                             # DATA XREF: ROM:0009C798↓o
                mov     0, r15
                stis    r15, 0x394(g13)
                ldob    winner, r14
                cmpobe  1, r14, loc_6DFC8
                ld      fa_rob0, r3
                ld      fa_rob1, r7
                b       loc_6DFD8
# ---------------------------------------------------------------------------
loc_6DFC8:                              # CODE XREF: cam_mode_1+10↑j
                ld      fa_rob1, r3
                ld      fa_rob0, r7
loc_6DFD8:                              # CODE XREF: cam_mode_1+24↑j
                ld      0x1A4(r3), r15
                bbc     5, r15, loc_6DFEC
                ld      0x1F4(r3), r4
                ld      0x1FC(r3), r6
                b       loc_6DFF4
# ---------------------------------------------------------------------------
loc_6DFEC:                              # CODE XREF: cam_mode_1+3C↑j
                ld      0x18(r3), r4
                ld      0x20(r3), r6
loc_6DFF4:                              # CODE XREF: cam_mode_1+48↑j
                bbs     0x10, r15, loc_6E000
                bbs     0xE, r15, loc_6E000
                bbc     4, r15, loc_6E008
loc_6E000:                              # CODE XREF: cam_mode_1:loc_6DFF4↑j
                ld      0x1F8(r3), r5
                b       loc_6E018
# ---------------------------------------------------------------------------
loc_6E008:                              # CODE XREF: cam_mode_1+5C↑j
                ld      0x1C(r3), r5
                lda     0x3F800000, r15
                addr    r15, r5, r5
loc_6E018:                              # CODE XREF: cam_mode_1+64↑j
                ld      0x1A4(r7), r15
                bbc     5, r15, loc_6E02C
                ld      0x1F4(r7), r8
                ld      0x1FC(r7), r10
                b       loc_6E034
# ---------------------------------------------------------------------------
loc_6E02C:                              # CODE XREF: cam_mode_1+7C↑j
                ld      0x18(r7), r8
                ld      0x20(r7), r10
loc_6E034:                              # CODE XREF: cam_mode_1+88↑j
                bbs     0x10, r15, loc_6E040
                bbs     0xE, r15, loc_6E040
                bbc     4, r15, loc_6E048
loc_6E040:                              # CODE XREF: cam_mode_1:loc_6E034↑j
                ld      0x1F8(r7), r9
                b       loc_6E058
# ---------------------------------------------------------------------------
loc_6E048:                              # CODE XREF: cam_mode_1+9C↑j
                ld      0x1C(r7), r9
                lda     0x3F800000, r15
                addr    r15, r9, r9
loc_6E058:                              # CODE XREF: cam_mode_1+A4↑j
                subr    r4, r8, r4
                subr    r6, r10, r6
                notbit  0x1F, r4, r4
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                shlo    0xD, 3, r4
                addo    r3, r4, r3
                stos    r3, 0x26(g13)
                shlo    0xB, 0x1D, r15
                stis    r15, 0x24(g13)
                ldob    0x40(g13), r14
                addi    1, r14, r15
                stob    r15, 0x40(g13)
cam_mode_2:                             # DATA XREF: ROM:0009C79C↓o
                ldob    winner, r14
                cmpobe  1, r14, loc_6E0BC
                ld      fa_rob0, r3
                ld      fa_rob1, r7
                b       loc_6E0CC
# ---------------------------------------------------------------------------
loc_6E0BC:                              # CODE XREF: cam_mode_1+104↑j
                ld      fa_rob1, r3
                ld      fa_rob0, r7
loc_6E0CC:                              # CODE XREF: cam_mode_1+118↑j
                ldob    0x1A18(r7), r4
                cmpobne 3, r4, loc_6E15C
                ldos    0x394(g13), r11
                cmpobne 0, r11, loc_6E32C
                addo    1, r11, r11
                stos    r11, 0x394(g13)
                ldt     0x18(g13), r4
                stt     r4, 0x398(g13)
                ldt     0x1F4(r3), r4
                ldos    0x26(r3), r8
                shlo    0xC, 7, r9
                lda     0x40400000, r10
                addo    r8, r9, r8
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r13
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                mulr    r10, r13, r13
                mulr    r10, r12, r12
                subr    r12, r4, r12
                addr    r13, r6, r13
                mov     r12, r4
                mov     r13, r6
                lda     0x3F000000, r8
                addr    r5, r8, r5
                stt     r4, 0x3A4(g13)
                b       loc_6E32C
# ---------------------------------------------------------------------------
loc_6E15C:                              # CODE XREF: cam_mode_1+134↑j
                ld      0x1A4(r3), r15
                bbc     5, r15, loc_6E170
                ld      0x1F4(r3), r4
                ld      0x1FC(r3), r6
                b       loc_6E178
# ---------------------------------------------------------------------------
loc_6E170:                              # CODE XREF: cam_mode_1+1C0↑j
                ld      0x18(r3), r4
                ld      0x20(r3), r6
loc_6E178:                              # CODE XREF: cam_mode_1+1CC↑j
                bbs     0x10, r15, loc_6E184
                bbs     0xE, r15, loc_6E184
                bbc     4, r15, loc_6E18C
loc_6E184:                              # CODE XREF: cam_mode_1:loc_6E178↑j
                ld      0x1F8(r3), r5
                b       loc_6E19C
# ---------------------------------------------------------------------------
loc_6E18C:                              # CODE XREF: cam_mode_1+1E0↑j
                ld      0x1C(r3), r5
                lda     0x3F800000, r15
                addr    r15, r5, r5
loc_6E19C:                              # CODE XREF: cam_mode_1+1E8↑j
                ld      0x1A4(r7), r15
                bbc     5, r15, loc_6E1B0
                ld      0x1F4(r7), r8
                ld      0x1FC(r7), r10
                b       loc_6E1B8
# ---------------------------------------------------------------------------
loc_6E1B0:                              # CODE XREF: cam_mode_1+200↑j
                ld      0x18(r7), r8
                ld      0x20(r7), r10
loc_6E1B8:                              # CODE XREF: cam_mode_1+20C↑j
                bbs     0x10, r15, loc_6E1C4
                bbs     0xE, r15, loc_6E1C4
                bbc     4, r15, loc_6E1CC
loc_6E1C4:                              # CODE XREF: cam_mode_1:loc_6E1B8↑j
                ld      0x1F8(r7), r9
                b       loc_6E1DC
# ---------------------------------------------------------------------------
loc_6E1CC:                              # CODE XREF: cam_mode_1+220↑j
                ld      0x1C(r7), r9
                lda     0x3F800000, r15
                addr    r15, r9, r9
loc_6E1DC:                              # CODE XREF: cam_mode_1+228↑j
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                lda     0x40400000, r12
                cmpr    r12, r11
                bl      loc_6E218
                mov     r12, r11
loc_6E218:                              # CODE XREF: cam_mode_1+270↑j
                ld      0x30C(g13), r13
                mulr    r13, r11, r11
                ld      0x2E0(g13), r13
                addr    r13, r11, r11
                st      r11, 0x2E8(g13)
                setbit  0x1F, r11, r11
                lda     0x3F000000, r13
                addr    r4, r8, r4
                addr    r5, r9, r5
                addr    r6, r10, r6
                mulr    r4, r13, r4
                mulr    r5, r13, r5
                mulr    r6, r13, r6
                lda     displacement, r8
                ldos    0x24(g13), r9
                ldos    0x26(g13), r12
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x41700000, r3
                clrbit  0x1F, r8, r4
                clrbit  0x1F, r8, r6
                cmpr    r3, r4
                bg      loc_6E300
                chkbit  0x1F, r8
                alterbit 0x1F, r3, r8
loc_6E300:                              # CODE XREF: cam_mode_1+354↑j
                cmpr    r3, r6
                bg      loc_6E310
                chkbit  0x1F, r10
                alterbit 0x1F, r3, r10
loc_6E310:                              # CODE XREF: cam_mode_1+364↑j
                lda     0x40400000, r3
                cmpr    r3, r9
                bl      loc_6E324
                mov     r3, r9
loc_6E324:                              # CODE XREF: cam_mode_1+37C↑j
                stt     r8, 0x18(g13)
                ret
# ---------------------------------------------------------------------------
loc_6E32C:                              # CODE XREF: cam_mode_1+13C↑j
                cmpobl  0x1E, r11, loc_6E378
                cvtir   r11, r11
                ldt     0x398(g13), r4
                ldt     0x3A4(g13), r8
                lda     0x41F00000, r12
                subr    r4, r8, r13
                subr    r5, r9, r14
                subr    r6, r10, r15
                divr    r12, r13, r13
                divr    r12, r14, r14
                divr    r12, r15, r15
                mulr    r11, r13, r13
                mulr    r11, r14, r14
                mulr    r11, r15, r15
                addr    r4, r13, r4
                addr    r5, r14, r5
                addr    r6, r15, r6
                stt     r4, 0x18(g13)
loc_6E378:                              # CODE XREF: cam_mode_1:loc_6E32C↑j
                ld      0x1A4(r3), r15
                bbc     5, r15, loc_6E38C
                ld      0x1F4(r3), r4
                ld      0x1FC(r3), r6
                b       loc_6E394
# ---------------------------------------------------------------------------
loc_6E38C:                              # CODE XREF: cam_mode_1+3DC↑j
                ld      0x18(r3), r4
                ld      0x20(r3), r6
loc_6E394:                              # CODE XREF: cam_mode_1+3E8↑j
                bbs     0x10, r15, loc_6E3A0
                bbs     0xE, r15, loc_6E3A0
                bbc     4, r15, loc_6E3A8
loc_6E3A0:                              # CODE XREF: cam_mode_1:loc_6E394↑j
                ld      0x1F8(r3), r5
                b       loc_6E3B8
# ---------------------------------------------------------------------------
loc_6E3A8:                              # CODE XREF: cam_mode_1+3FC↑j
                ld      0x1C(r3), r5
                lda     0x3F800000, r15
                addr    r15, r5, r5
loc_6E3B8:                              # CODE XREF: cam_mode_1+404↑j
                ld      0x1A4(r7), r15
                bbc     5, r15, loc_6E3CC
                ld      0x1F4(r7), r8
                ld      0x1FC(r7), r10
                b       loc_6E3D4
# ---------------------------------------------------------------------------
loc_6E3CC:                              # CODE XREF: cam_mode_1+41C↑j
                ld      0x18(r7), r8
                ld      0x20(r7), r10
loc_6E3D4:                              # CODE XREF: cam_mode_1+428↑j
                bbs     0x10, r15, loc_6E3E0
                bbs     0xE, r15, loc_6E3E0
                bbc     4, r15, loc_6E3E8
loc_6E3E0:                              # CODE XREF: cam_mode_1:loc_6E3D4↑j
                ld      0x1F8(r7), r9
                b       loc_6E3F8
# ---------------------------------------------------------------------------
loc_6E3E8:                              # CODE XREF: cam_mode_1+43C↑j
                ld      0x1C(r7), r9
                lda     0x3F800000, r15
                addr    r15, r9, r9
loc_6E3F8:                              # CODE XREF: cam_mode_1+444↑j
                addr    r4, r8, r4
                addr    r5, r9, r5
                addr    r6, r10, r6
                lda     0x3F000000, r11
                mulr    r4, r11, r4
                mulr    r5, r11, r5
                mulr    r6, r11, r6
                cmpr    r11, r5
                bl      loc_6E424
                mov     r11, r5
loc_6E424:                              # CODE XREF: cam_mode_1+47C↑j
                ldt     0x18(g13), r8
                subr    r8, r4, r12
                subr    r10, r6, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r9, r5, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                ret
# End of function cam_mode_1
# =============== S U B R O U T I N E =======================================
cam_mode_3:                             # DATA XREF: ROM:0009C7A0↓o
                ldob    winner, r14
                cmpobe  1, r14, loc_6E4AC
                ld      fa_rob0, r7
                ld      fa_rob1, r3
                b       loc_6E4BC
# ---------------------------------------------------------------------------
loc_6E4AC:                              # CODE XREF: cam_mode_3+8↑j
                ld      fa_rob1, r7
                ld      fa_rob0, r3
loc_6E4BC:                              # CODE XREF: cam_mode_3+1C↑j
                ld      0x0(r7), r15
                bbc     0x11, r15, loc_6E9A8
                ldt     0x1F4(r7), r8
                ldt     0x1F4(r3), r4
                subr    r8, r4, r4
                subr    r10, r6, r6
                notbit  0x1F, r4, r4
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                mov     0, r15
                stis    r15, 0x394(g13)
                lda     0x574B20, r3
                lda     0x3B4(g13), r11
                st      r3, 4(r11)
                ldt     0x18(r7), r4
                ldos    0x26(r7), r8
                shlo    0xD, 1, r9
                ld      0x0(r7), r15
                bbs     6, r15, loc_6E524
                addo    r8, r9, r8
                b       loc_6E528
# ---------------------------------------------------------------------------
loc_6E524:                              # CODE XREF: cam_mode_3+8C↑j
                subo    r9, r8, r8
loc_6E528:                              # CODE XREF: cam_mode_3+94↑j
                subo    r8, r10, r9
                bbs     0xF, r9, loc_6E544
                shlo    0xC, 1, r5
                cmpobl  r5, r9, loc_6E568
                shlo    0xD, 1, r5
                addo    r5, r10, r8
                b       loc_6E568
# ---------------------------------------------------------------------------
loc_6E544:                              # CODE XREF: cam_mode_3+A0↑j
                lda     loc_FFF8+7, r5
                and     r5, r9, r9
                addo    1, r5, r5
                subo    r9, r5, r9
                shlo    0xC, 1, r5
                cmpobl  r5, r9, loc_6E568
                shlo    0xD, 1, r5
                subo    r5, r10, r8
loc_6E568:                              # CODE XREF: cam_mode_3+A8↑j
                stos    r8, 0x396(g13)
                lda     0x41F00000, r9
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r13
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                mulr    r9, r13, r13
                mulr    r9, r12, r12
                subr    r12, r4, r12
                addr    r13, r6, r13
                mov     r12, r4
                mov     r13, r6
                lda     0x41200000, r5
                stt     r4, 0x0(r3)
                mov     0, r15
                stis    r15, 0xC(r3)
                mov     2, r15
                stis    r15, 0xE(r3)
                addo    0x10, r3, r3
                ldt     0x1F4(r7), r4
                ldob    0x1B1(r7), r14
                cmpobe  2, r14, loc_6E5EC
                lda     0x3FE66666, r5
                b       loc_6E5F4
# ---------------------------------------------------------------------------
loc_6E5EC:                              # CODE XREF: cam_mode_3+150↑j
                lda     0x3E4CCCCD, r5
loc_6E5F4:                              # CODE XREF: cam_mode_3+15C↑j
                stt     r4, 0x398(g13)
                ldob    0x1B1(r7), r14
                cmpobe  0xA, r14, loc_6E60C
                lda     0x40400000, r9
                b       loc_6E614
# ---------------------------------------------------------------------------
loc_6E60C:                              # CODE XREF: cam_mode_3+170↑j
                lda     0x40C00000, r9
loc_6E614:                              # CODE XREF: cam_mode_3+17C↑j
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r13
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                mulr    r9, r13, r13
                mulr    r9, r12, r12
                subr    r12, r4, r12
                addr    r13, r6, r13
                mov     r12, r4
                mov     r13, r6
                stt     r4, 0x0(r3)
                shlo    6, 1, r15
                stis    r15, 0xC(r3)
                mov     0, r15
                stis    r15, 0xE(r3)
                ldt     0x20C(r7), r4
                lda     0x3E99999A, r7
                addr    r5, r7, r5
                stt     r4, 0x44(r11)
                lda     prcb, r15
                stib    r15, 0x40(g13)
                addo    4, sp, sp
                st      g13, -4(sp)
                lda     0x3B4(g13), g13
                call    sub_69EC0
                ld      -4(sp), g13
                subo    4, sp, sp
                ldt     0x5C(r11), r4
                ldt     0x44(r11), r8
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                stt     r4, 0x18(g13)
                ret
# ---------------------------------------------------------------------------
cam_mode_4:                             # DATA XREF: ROM:0009C7A4↓o
                ldob    winner, r14
                cmpobe  1, r14, loc_6E730
                ld      fa_rob0, r7
                b       loc_6E738
# ---------------------------------------------------------------------------
loc_6E730:                              # CODE XREF: cam_mode_3+294↑j
                ld      fa_rob1, r7
loc_6E738:                              # CODE XREF: cam_mode_3+2A0↑j
                lda     0x3B4(g13), r11
                ldos    0x394(g13), r3
                addo    1, r3, r3
                stos    r3, 0x394(g13)
                shlo    6, 1, r13
                cmpobg  r13, r3, loc_6E888
                ldob    0x1B1(r7), r14
                cmpobe  3, r14, loc_6E768
                ldob    0x1B1(r7), r14
                cmpobe  1, r14, loc_6E768
                ldt     0x398(g13), r4
                b       loc_6E76C
# ---------------------------------------------------------------------------
loc_6E768:                              # CODE XREF: cam_mode_3+2C8↑j
                ldt     0x1F4(r7), r4
loc_6E76C:                              # CODE XREF: cam_mode_3+2D8↑j
                ldob    0x1B1(r7), r14
                cmpobe  2, r14, loc_6E780
                lda     0x3FE66666, r5
                b       loc_6E788
# ---------------------------------------------------------------------------
loc_6E780:                              # CODE XREF: cam_mode_3+2E4↑j
                lda     0x3E4CCCCD, r5
loc_6E788:                              # CODE XREF: cam_mode_3+2F0↑j
                ldos    0x396(g13), r8
                mov     8, r9
                ld      0x0(r7), r15
                bbs     6, r15, loc_6E7A0
                addo    r8, r9, r8
                b       loc_6E7A4
# ---------------------------------------------------------------------------
loc_6E7A0:                              # CODE XREF: cam_mode_3+308↑j
                subo    r9, r8, r8
loc_6E7A4:                              # CODE XREF: cam_mode_3+310↑j
                stos    r8, 0x396(g13)
                ldob    0x1B1(r7), r14
                cmpobe  0xA, r14, loc_6E7BC
                lda     0x40400000, r9
                b       loc_6E7C4
# ---------------------------------------------------------------------------
loc_6E7BC:                              # CODE XREF: cam_mode_3+320↑j
                lda     0x40C00000, r9
loc_6E7C4:                              # CODE XREF: cam_mode_3+32C↑j
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r13
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                mulr    r9, r13, r13
                mulr    r9, r12, r12
                subr    r12, r4, r12
                addr    r13, r6, r13
                mov     r12, r4
                mov     r13, r6
                ldob    0x1B1(r7), r14
                cmpobe  3, r14, loc_6E81C
                ldob    0x1B1(r7), r14
                cmpobe  1, r14, loc_6E81C
                ldt     0x44(r11), r8
                b       loc_6E820
# ---------------------------------------------------------------------------
loc_6E81C:                              # CODE XREF: cam_mode_3+37C↑j
                ldt     0x1F4(r7), r8
loc_6E820:                              # CODE XREF: cam_mode_3+38C↑j
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                stt     r4, 0x18(g13)
                ret
# ---------------------------------------------------------------------------
loc_6E888:                              # CODE XREF: cam_mode_3+2C0↑j
                addo    4, sp, sp
                st      g13, -4(sp)
                lda     0x3B4(g13), g13
                call    sub_69F60
                ld      -4(sp), g13
                subo    4, sp, sp
                ldt     0x5C(r11), r4
                ldob    0x1B1(r7), r14
                cmpobe  3, r14, loc_6E928
                ldob    0x1B1(r7), r14
                cmpobe  1, r14, loc_6E928
                ldt     0x44(r11), r8
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                stt     r4, 0x18(g13)
                b       loc_6E9A8
# ---------------------------------------------------------------------------
loc_6E928:                              # CODE XREF: cam_mode_3+424↑j
                ldt     0x1F4(r7), r8
                ldt     0x398(g13), r12
                subr    r12, r8, r8
                subr    r14, r10, r10
                addr    r4, r8, r4
                addr    r6, r10, r6
                ldt     0x1F4(r7), r8
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                stt     r4, 0x18(g13)
loc_6E9A8:                              # CODE XREF: cam_mode_3+34↑j
                ret
# End of function cam_mode_3
# =============== S U B R O U T I N E =======================================
sub_6E9AC:                              # DATA XREF: ROM:0009C804↓o
                mov     0, r15
                stis    r15, 0x394(g13)
                lda     0x574B20, r3
                lda     0x3B4(g13), r11
                st      r3, 4(r11)
                ldt     0x18(g13), r4
                stt     r4, 0x0(r3)
                mov     0, r15
                stis    r15, 0xC(r3)
                mov     2, r15
                stis    r15, 0xE(r3)
                addo    0x10, r3, r3
                ldob    winner, r14
                cmpobe  1, r14, loc_6E9F8
                ld      fa_rob0, r7
                b       loc_6EA00
# ---------------------------------------------------------------------------
loc_6E9F8:                              # CODE XREF: sub_6E9AC+3C↑j
                ld      fa_rob1, r7
loc_6EA00:                              # CODE XREF: sub_6E9AC+48↑j
                ldt     0x1F4(r7), r4
                ldos    0x26(r7), r8
                shlo    0xC, 3, r9
                ld      0x0(r7), r15
                bbs     6, r15, loc_6EA1C
                addo    r8, r9, r8
                b       loc_6EA20
# ---------------------------------------------------------------------------
loc_6EA1C:                              # CODE XREF: sub_6E9AC+64↑j
                subo    r9, r8, r8
loc_6EA20:                              # CODE XREF: sub_6E9AC+6C↑j
                lda     0x40600000, r9
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r13
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                mulr    r9, r13, r13
                mulr    r9, r12, r12
                subr    r12, r4, r12
                addr    r13, r6, r13
                mov     r12, r4
                mov     r13, r6
                lda     0x40800000, r5
                stt     r4, 0x0(r3)
                shlo    5, 3, r15
                stis    r15, 0xC(r3)
                mov     2, r15
                stis    r15, 0xE(r3)
                addo    0x10, r3, r3
                ldt     0x1F4(r7), r4
                lda     0x40200000, r9
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r13
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                mulr    r9, r13, r13
                mulr    r9, r12, r12
                subr    r12, r4, r12
                addr    r13, r6, r13
                mov     r12, r4
                mov     r13, r6
                lda     0x40000000, r5
                stt     r4, 0x0(r3)
                shlo    8, 1, r15
                stis    r15, 0xC(r3)
                mov     0, r15
                stis    r15, 0xE(r3)
                lda     check_word4+1, r15
                stib    r15, 0x40(g13)
                addo    4, sp, sp
                st      g13, -4(sp)
                lda     0x3B4(g13), g13
                call    sub_69EC0
                ld      -4(sp), g13
                subo    4, sp, sp
                ldt     0x5C(r11), r4
                ldt     0x120(g13), r8
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                stt     r4, 0x18(g13)
                ret
# End of function sub_6E9AC
# =============== S U B R O U T I N E =======================================
sub_6EB8C:                              # DATA XREF: ROM:0009C808↓o
                ldob    winner, r14
                cmpobe  1, r14, loc_6EBA4
                ld      fa_rob0, r7
                b       loc_6EBAC
# ---------------------------------------------------------------------------
loc_6EBA4:                              # CODE XREF: sub_6EB8C+8↑j
                ld      fa_rob1, r7
loc_6EBAC:                              # CODE XREF: sub_6EB8C+14↑j
                ldt     0x20C(r7), r4
                lda     0x3B4(g13), r11
                stt     r4, 0x44(r11)
                ldos    0x394(g13), r3
                addo    1, r3, r3
                stos    r3, 0x394(g13)
                shlo    8, 1, r13
                cmpobg  r13, r3, loc_6ECD4
                ldos    0x26(r7), r8
                shlo    0xC, 3, r9
                ld      0x0(r7), r15
                bbs     6, r15, loc_6EBEC
                addo    r8, r9, r7
                lda     0xBBE56042, r8
                b       loc_6EBF8
# ---------------------------------------------------------------------------
loc_6EBEC:                              # CODE XREF: sub_6EB8C+4C↑j
                subo    r9, r8, r7
                lda     0x3BE56042, r8
loc_6EBF8:                              # CODE XREF: sub_6EB8C+5C↑j
                lda     0x3B03126F, r9
                xor     r10, r10, r10
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ldt     0x18(g13), r12
                addr    r8, r12, r8
                addr    r9, r13, r9
                addr    r10, r14, r10
                stt     r8, 0x18(g13)
                subr    r8, r4, r12
                subr    r10, r6, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r9, r5, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                ret
# ---------------------------------------------------------------------------
loc_6ECD4:                              # CODE XREF: sub_6EB8C+3C↑j
                addo    4, sp, sp
                st      g13, -4(sp)
                lda     0x3B4(g13), g13
                call    sub_69F60
                ld      -4(sp), g13
                subo    4, sp, sp
                ldt     0x44(r11), r8
                shlo    6, 1, r13
                cmpobl  r13, r3, loc_6ED4C
                ldt     0x120(g13), r4
                cvtir   r3, r3
                lda     0x42800000, r12
                subr    r4, r8, r13
                subr    r5, r9, r14
                subr    r6, r10, r15
                divr    r12, r13, r13
                divr    r12, r14, r14
                divr    r12, r15, r15
                mulr    r3, r13, r13
                mulr    r3, r14, r14
                mulr    r3, r15, r15
                addr    r4, r13, r4
                addr    r5, r14, r5
                addr    r6, r15, r6
                mov     r4, r8
                mov     r5, r9
                mov     r6, r10
loc_6ED4C:                              # CODE XREF: sub_6EB8C+170↑j
                ldt     0x5C(r11), r4
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                stt     r4, 0x18(g13)
                ret
# End of function sub_6EB8C
# =============== S U B R O U T I N E =======================================
cam_mode_5:                             # DATA XREF: ROM:0009C7A8↓o
                mov     0, r15
                stis    r15, 0x304(g13)
                mov     1, r15
                stis    r15, 0x42(g13)
                ld      fa_camera, g6
                ldob    0x40(g6), r14
                addi    1, r14, r15
                stob    r15, 0x40(g6)
                ldob    look_char, r3
                ldob    winner, r4
                cmpobe  r3, r4, loc_6EE1C
                ld      fa_rob0, g7
                shlo    0xA, 0xD, r15
                mulo    r3, r15, r15
                addo    r15, g7, g7
                ldos    0x1AC(g7), r3
                cmpobe  0, r3, loc_6EE68
                ld      0x1A4(g7), r15
                bbc     0x10, r15, loc_6EE1C
                ld      0x1A4(g7), r15
                bbc     0xF, r15, loc_6EE68
loc_6EE1C:                              # CODE XREF: cam_mode_5+34↑j
                ld      0x20C(g7), r8
                ld      0x214(g7), r9
                ld      0x210(g7), r10
                st      r9, 0x124(g13)
                ldos    0x26(g7), r7
                shlo    0xD, 3, r13
                addi    r13, r7, r7
                addo    r11, r7, r7
                stos    r7, 0x26(g6)
                ldos    0x14C(g7), r3
                subi    r3, 0, r3
                lda     0xFFFF, r13
                and     r13, r3, r3
                stos    r3, 0x24(g6)
                lda     0x40800000, g3
                st      g3, 0x2E8(g6)
                b       loc_6EE6C
# ---------------------------------------------------------------------------
loc_6EE68:                              # CODE XREF: cam_mode_5+50↑j
                b       cam_mode_7
# ---------------------------------------------------------------------------
loc_6EE6C:                              # CODE XREF: cam_mode_5+AC↑j
                ret
# ---------------------------------------------------------------------------
cam_mode_6:                             # DATA XREF: ROM:0009C7AC↓o
                ldob    look_char, r3
                ld      fa_rob0, g7
                shlo    0xA, 0xD, r15
                mulo    r3, r15, r15
                addo    r15, g7, g7
                ld      0x1A4(g7), r15
                bbc     0x10, r15, loc_6EE9C
                ld      0x1A4(g7), r15
                bbc     0xF, r15, cam_mode_8
loc_6EE9C:                              # CODE XREF: cam_mode_5+D8↑j
                ld      0x20C(g7), r8
                ld      0x214(g7), r9
                ldos    0x304(g13), r11
                ldos    0x24(g13), r3
                shro    8, r11, r11
                addo    r11, r3, r3
                addo    0x1F, 1, r13
                ldos    0x304(g13), r14
                addi    r13, r14, r15
                stos    r15, 0x304(g13)
                ld      0x2E8(g13), r5
                lda     0x40333333, r6
                lda     0x3C23D70A, r13
                subr    r13, r5, r5
                cmpr    r5, r6
                bg      loc_6EEE8
                mov     r6, r5
loc_6EEE8:                              # CODE XREF: cam_mode_5+128↑j
                ldos    0x26(g13), r7
                ld      0x70C(g7), r15
                bbc     7, r15, loc_6EF5C
                ld      0x0(g7), r15
                bbc     0, r15, loc_6EF5C
                ld      0x210(g7), r10
                ldos    0x26(g7), r6
                shlo    0xC, 0xB, r13
                addi    r13, r6, r6
                subi    r7, r6, r6
                lda     0xFFFF, r4
                and     r4, r6, r6
                shri    4, r6, r6
                addi    r6, r7, r7
                stos    r7, 0x26(g13)
                lda     0x4099999A, r6
                subr    r6, r5, r4
                lda     0x3D4CCCCD, r13
                mulr    r13, r4, r4
                lda     0x3F4CCCCD, r6
                cmpr    r4, r6
                ble     loc_6EF54
                mov     r6, r4
loc_6EF54:                              # CODE XREF: cam_mode_5+194↑j
                subr    r4, r5, r5
                b       loc_6EF64
# ---------------------------------------------------------------------------
loc_6EF5C:                              # CODE XREF: cam_mode_5+138↑j
                lda     0x3F800000, r10
loc_6EF64:                              # CODE XREF: cam_mode_5+1A0↑j
                st      r5, 0x2E8(g13)
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     displacement, r3
                notbit  0x1F, r5, r5
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     g0, 0x18(g13)
                ret
# ---------------------------------------------------------------------------
cam_mode_7:                             # CODE XREF: cam_mode_5:loc_6EE68↑j
                ldob    0x40(r3), r14
# End of function cam_mode_5
# =============== S U B R O U T I N E =======================================
sub_6F000:                              # DATA XREF: MAIN_DATA:030C0148↓o
                addi    1, r14, r15
                stob    r15, 0x40(r3)
cam_mode_8:                             # CODE XREF: cam_mode_5+E0↑j
                ret
# End of function sub_6F000
# ---------------------------------------------------------------------------
                ldob    look_char, r3
                ld      fa_rob0, r8
                shlo    0xA, 0xD, r15
                mulo    r3, r15, r15
                addo    r15, r8, r8
                ldos    0x26(r8), r7
                shlo    0xC, 5, r13
                addi    r13, r7, r7
                shlo    0xC, 1, r9
                ldt     0x18(r8), r4
                lda     0x40A00000, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                lda     displacement, r3
                notbit  0x1F, r11, r11
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x18(g13)
                stos    r9, 0x24(g13)
                stos    r7, 0x26(g13)
                ret
# ---------------------------------------------------------------------------
loc_6F0E0:                              # DATA XREF: ROM:0009C7FC↓o
                mov     0, r15
                stis    r15, 0x394(g13)
                lda     loc_FF60, r15
                stis    r15, 0x396(g13)
                mov     0, r15
                stis    r15, 0x3A4(g13)
                ldob    0x40(g13), r14
                addi    1, r14, r15
                stob    r15, 0x40(g13)
                ldob    winner, r14
                cmpobe  1, r14, loc_6F128
                ld      fa_rob0, r3
                ld      fa_rob1, r7
                b       loc_6F138
# ---------------------------------------------------------------------------
loc_6F128:                              # CODE XREF: ROM:0006F110↑j
                ld      fa_rob1, r3
                ld      fa_rob0, r7
loc_6F138:                              # CODE XREF: ROM:0006F124↑j
                ldt     0x1F4(r3), r4
                ldob    0x7D2(r3), r14
                bbs     4, r14, loc_6F1AC
                ldt     0x1F4(r7), r8
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                lda     0x3F000000, r12
                addr    r4, r8, r4
                addr    r5, r9, r5
                addr    r6, r10, r6
                mulr    r4, r12, r4
                mulr    r5, r12, r5
                mulr    r6, r12, r6
                mulr    r11, r12, r11
                stt     r4, 0x398(g13)
                lda     0x40400000, r12
                addr    r11, r12, r11
                st      r11, 0x3B0(g13)
                b       loc_6F1BC
# ---------------------------------------------------------------------------
loc_6F1AC:                              # CODE XREF: ROM:0006F140↑j
                stt     r4, 0x398(g13)
                lda     0x40A00000, r15
                st      r15, 0x3B0(g13)
loc_6F1BC:                              # CODE XREF: ROM:0006F1A8↑j
                ldob    mode, r3
                lda     mode11, r4
                cmpobne r3, r4, loc_6F1E0
                ldos    0x396(g13), r3
                cmpobe  0, r3, loc_6F1E0
                addo    1, r3, r3
                stos    r3, 0x396(g13)
loc_6F1E0:                              # CODE XREF: ROM:0006F1CC↑j
                ldos    0x394(g13), r3
                addo    1, r3, r3
                stos    r3, 0x394(g13)
                ldt     0x398(g13), r4
                lda     0x40400000, r5
                ldos    0x396(g13), r7
                ldos    0x3A4(g13), r3
                addo    r3, r7, r7
                stos    r7, 0x3A4(g13)
                ld      0x3B0(g13), r8
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                ld      (g11)[g12*1], r13
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                mulr    r8, r13, r13
                mulr    r8, r12, r12
                subr    r12, r4, r12
                addr    r13, r6, r13
                mov     r12, r4
                mov     r13, r6
                stt     r4, 0x18(g13)
                ldt     0x398(g13), r8
                lda     0x3F800000, r9
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                ret
# ---------------------------------------------------------------------------
cam_mode_13:                            # DATA XREF: ROM:0009C7C8↓o
                ld      stage_x, r4
                lda     0x3E4CCCCD, r13
                addr    r13, r4, r4
                mov     r4, r6
                lda     0x40600000, r5
                stt     r4, 0x18(g13)
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                ld      0x1A4(g7), r15
                bbc     5, r15, loc_6F308
                ld      0x1F4(g7), r8
                ld      0x1FC(g7), r9
                b       loc_6F310
# ---------------------------------------------------------------------------
loc_6F308:                              # CODE XREF: ROM:0006F2F8↑j
                ld      0x18(g7), r8
                ld      0x20(g7), r9
loc_6F310:                              # CODE XREF: ROM:0006F304↑j
                bbs     0x10, r15, loc_6F31C
                bbs     0xE, r15, loc_6F31C
                bbc     4, r15, loc_6F324
loc_6F31C:                              # CODE XREF: ROM:loc_6F310↑j
                ld      0x1F8(g7), r3
                b       loc_6F334
# ---------------------------------------------------------------------------
loc_6F324:                              # CODE XREF: ROM:0006F318↑j
                ld      0x1C(g7), r3
                lda     0x3F800000, r15
                addr    r15, r3, r3
loc_6F334:                              # CODE XREF: ROM:0006F320↑j
                ld      0x1A4(g8), r15
                bbc     5, r15, loc_6F348
                ld      0x1F4(g8), r10
                ld      0x1FC(g8), r11
                b       loc_6F350
# ---------------------------------------------------------------------------
loc_6F348:                              # CODE XREF: ROM:0006F338↑j
                ld      0x18(g8), r10
                ld      0x20(g8), r11
loc_6F350:                              # CODE XREF: ROM:0006F344↑j
                bbs     0x10, r15, loc_6F35C
                bbs     0xE, r15, loc_6F35C
                bbc     4, r15, loc_6F364
loc_6F35C:                              # CODE XREF: ROM:loc_6F350↑j
                ld      0x1F8(g8), r4
                b       loc_6F374
# ---------------------------------------------------------------------------
loc_6F364:                              # CODE XREF: ROM:0006F358↑j
                ld      0x1C(g8), r4
                lda     0x3F800000, r15
                addr    r15, r4, r4
loc_6F374:                              # CODE XREF: ROM:0006F360↑j
                addr    r8, r10, g4
                addr    r9, r11, g6
                lda     0x3F000000, r3
                mulr    g4, r3, g4
                mulr    g6, r3, g6
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                lda     0x3DCCCCCD, r13
                mulr    r13, r3, r3
                addr    r3, g5, g5
                stt     g4, 0x120(g13)
                ldob    0x40(g13), r14
                addi    1, r14, r15
                stob    r15, 0x40(g13)
                ret
# ---------------------------------------------------------------------------
cam_mode_14:                            # DATA XREF: ROM:0009C7CC↓o
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                ld      0x1A4(g7), r15
                bbc     5, r15, loc_6F3F4
                ld      0x1F4(g7), r8
                ld      0x1FC(g7), r9
                b       loc_6F3FC
# ---------------------------------------------------------------------------
loc_6F3F4:                              # CODE XREF: ROM:0006F3E4↑j
                ld      0x18(g7), r8
                ld      0x20(g7), r9
loc_6F3FC:                              # CODE XREF: ROM:0006F3F0↑j
                bbs     0x10, r15, loc_6F408
                bbs     0xE, r15, loc_6F408
                bbc     4, r15, loc_6F410
loc_6F408:                              # CODE XREF: ROM:loc_6F3FC↑j
                ld      0x1F8(g7), r3
                b       loc_6F420
# ---------------------------------------------------------------------------
loc_6F410:                              # CODE XREF: ROM:0006F404↑j
                ld      0x1C(g7), r3
                lda     0x3F800000, r15
                addr    r15, r3, r3
loc_6F420:                              # CODE XREF: ROM:0006F40C↑j
                ld      0x1A4(g8), r15
                bbc     5, r15, loc_6F434
                ld      0x1F4(g8), r10
                ld      0x1FC(g8), r11
                b       loc_6F43C
# ---------------------------------------------------------------------------
loc_6F434:                              # CODE XREF: ROM:0006F424↑j
                ld      0x18(g8), r10
                ld      0x20(g8), r11
loc_6F43C:                              # CODE XREF: ROM:0006F430↑j
                bbs     0x10, r15, loc_6F448
                bbs     0xE, r15, loc_6F448
                bbc     4, r15, loc_6F450
loc_6F448:                              # CODE XREF: ROM:loc_6F43C↑j
                ld      0x1F8(g8), r4
                b       loc_6F460
# ---------------------------------------------------------------------------
loc_6F450:                              # CODE XREF: ROM:0006F444↑j
                ld      0x1C(g8), r4
                lda     0x3F800000, r15
                addr    r15, r4, r4
loc_6F460:                              # CODE XREF: ROM:0006F44C↑j
                addr    r8, r10, g4
                addr    r9, r11, g6
                lda     0x3F000000, r3
                mulr    g4, r3, g4
                mulr    g6, r3, g6
                ldt     0x18(g13), r4
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                lda     0x3DCCCCCD, r13
                mulr    r13, r3, r3
                addr    r3, g5, g5
                ldt     0x120(g13), r8
                lda     0x3D4CCCCD, r3
                subr    r8, g4, g4
                mulr    r3, g4, g4
                addr    r8, g4, g4
                subr    r9, g5, g5
                mulr    r3, g5, g5
                addr    r9, g5, g5
                subr    r10, g6, g6
                mulr    r3, g6, g6
                addr    r10, g6, g6
                stt     g4, 0x120(g13)
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                stos    r3, 0x26(g13)
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                subr    r5, g5, r3
                divr    r10, r3, r3
                lda     0x13002626, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ldis    (g11)[g12*1], r3
                stos    r3, 0x24(g13)
                ret
# ---------------------------------------------------------------------------
loc_6F550:                              # DATA XREF: ROM:0009C7D0↓o
                ldob    winner, r14
                cmpobe  1, r14, loc_6F570
                ld      fa_rob0, r3
                ld      fa_rob1, r7
                b       loc_6F580
# ---------------------------------------------------------------------------
loc_6F570:                              # CODE XREF: ROM:0006F558↑j
                ld      fa_rob1, r3
                ld      fa_rob0, r7
loc_6F580:                              # CODE XREF: ROM:0006F56C↑j
                ldt     0x1F4(r3), r4
                ldt     0x1F4(r7), r8
                stt     r4, 0x3A4(g13)
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                ld      0x3B0(g13), r12
                cmpr    r11, r12
                bl      loc_6F610
                st      r11, 0x3B0(g13)
                subr    r4, r8, r4
                subr    r5, r9, r5
                subr    r6, r10, r6
                lda     0x40000000, r12
                divr    r11, r12, r11
                mulr    r4, r11, r4
                mulr    r5, r11, r5
                mulr    r6, r11, r6
                addr    r4, r8, r4
                addr    r5, r9, r5
                addr    r6, r10, r6
                lda     0x3F000000, r11
                subr    r11, r5, r11
                bbc     0x1F, r11, loc_6F60C
                lda     0x3F000000, r5
loc_6F60C:                              # CODE XREF: ROM:0006F600↑j
                stt     r4, 0x398(g13)
loc_6F610:                              # CODE XREF: ROM:0006F5BC↑j
                ldt     0x1F4(r3), r4
                ldt     0x1F4(r7), r8
                subr    r8, r4, r11
                subr    r10, r6, r12
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r13
                lda     0x40400000, r14
                divr    r13, r14, r13
                mulr    r13, r11, r11
                mulr    r13, r12, r12
                addr    r4, r11, r4
                addr    r6, r12, r6
                lda     0x40800000, r5
                stt     r4, 0x18(g13)
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                ldos    0x24(g13), r3
                shlo    0xC, 3, r4
                cmpobge r4, r3, loc_6F6E0
                ld      0x0(g13), r15
                setbit  0x1B, r15, r15
                st      r15, 0x0(g13)
loc_6F6E0:                              # CODE XREF: ROM:0006F6D0↑j
                ret
# ---------------------------------------------------------------------------
loc_6F6E4:                              # DATA XREF: ROM:0009C7D4↓o
                ld      0x0(g13), r15
                clrbit  0x1B, r15, r15
                st      r15, 0x0(g13)
                ldt     0x398(g13), r4
                stt     r4, 0x18(g13)
                ldob    winner, r14
                cmpobe  1, r14, loc_6F714
                ld      0x0(g13), r15
                setbit  0x1C, r15, r15
                st      r15, 0x0(g13)
                b       loc_6F720
# ---------------------------------------------------------------------------
loc_6F714:                              # CODE XREF: ROM:0006F700↑j
                ld      0x0(g13), r15
                setbit  0x1D, r15, r15
                st      r15, 0x0(g13)
loc_6F720:                              # CODE XREF: ROM:0006F710↑j
                ldt     0x18(g13), r4
                ldt     0x3A4(g13), r8
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                ldob    0x7D2(r3), r14
                bbc     3, r14, loc_6F7A0
                ldos    0x24(g13), r4
                shlo    0xC, 1, r5
                subo    r5, r4, r4
                stos    r4, 0x24(g13)
loc_6F7A0:                              # CODE XREF: ROM:0006F78C↑j
                lda     check_word1+1, r15
                stib    r15, 0x40(g13)
loc_6F7AC:                              # DATA XREF: ROM:0009C7D8↓o
                ret
# ---------------------------------------------------------------------------
loc_6F7B0:                              # DATA XREF: ROM:0009C7DC↓o
                ld      stage_x, r4
                mov     r4, r6
                lda     0x40466666, r5
                stt     r4, 0x2F4(g13)
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                ld      0x1A4(g7), r15
                bbc     5, r15, loc_6F7EC
                ld      0x1F4(g7), r8
                ld      0x1FC(g7), r9
                b       loc_6F7F4
# ---------------------------------------------------------------------------
loc_6F7EC:                              # CODE XREF: ROM:0006F7DC↑j
                ld      0x18(g7), r8
                ld      0x20(g7), r9
loc_6F7F4:                              # CODE XREF: ROM:0006F7E8↑j
                bbs     0x10, r15, loc_6F800
                bbs     0xE, r15, loc_6F800
                bbc     4, r15, loc_6F808
loc_6F800:                              # CODE XREF: ROM:loc_6F7F4↑j
                ld      0x1F8(g7), r3
                b       loc_6F818
# ---------------------------------------------------------------------------
loc_6F808:                              # CODE XREF: ROM:0006F7FC↑j
                ld      0x1C(g7), r3
                lda     0x3F800000, r15
                addr    r15, r3, r3
loc_6F818:                              # CODE XREF: ROM:0006F804↑j
                ld      0x1A4(g8), r15
                bbc     5, r15, loc_6F82C
                ld      0x1F4(g8), r10
                ld      0x1FC(g8), r11
                b       loc_6F834
# ---------------------------------------------------------------------------
loc_6F82C:                              # CODE XREF: ROM:0006F81C↑j
                ld      0x18(g8), r10
                ld      0x20(g8), r11
loc_6F834:                              # CODE XREF: ROM:0006F828↑j
                bbs     0x10, r15, loc_6F840
                bbs     0xE, r15, loc_6F840
                bbc     4, r15, loc_6F848
loc_6F840:                              # CODE XREF: ROM:loc_6F834↑j
                ld      0x1F8(g8), r4
                b       loc_6F858
# ---------------------------------------------------------------------------
loc_6F848:                              # CODE XREF: ROM:0006F83C↑j
                ld      0x1C(g8), r4
                lda     0x3F800000, r15
                addr    r15, r4, r4
loc_6F858:                              # CODE XREF: ROM:0006F844↑j
                addr    r8, r10, g4
                addr    r3, r4, g5
                addr    r9, r11, g6
                lda     0x3F000000, r3
                mulr    g4, r3, g4
                mulr    g5, r3, g5
                mulr    g6, r3, g6
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                lda     0x3DCCCCCD, r13
                mulr    r13, r3, r3
                addr    r3, g5, g5
                stt     g4, 0x120(g13)
                mov     2, r15
                stis    r15, 0x306(g13)
                ldob    0x40(g13), r14
                addi    1, r14, r15
                stob    r15, 0x40(g13)
                ret
# ---------------------------------------------------------------------------
loc_6F8C4:                              # DATA XREF: ROM:0009C7E0↓o
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                ld      0x1A4(g7), r15
                bbc     5, r15, loc_6F8E8
                ld      0x1F4(g7), r8
                ld      0x1FC(g7), r9
                b       loc_6F8F0
# ---------------------------------------------------------------------------
loc_6F8E8:                              # CODE XREF: ROM:0006F8D8↑j
                ld      0x18(g7), r8
                ld      0x20(g7), r9
loc_6F8F0:                              # CODE XREF: ROM:0006F8E4↑j
                bbs     0x10, r15, loc_6F8FC
                bbs     0xE, r15, loc_6F8FC
                bbc     4, r15, loc_6F904
loc_6F8FC:                              # CODE XREF: ROM:loc_6F8F0↑j
                ld      0x1F8(g7), r3
                b       loc_6F914
# ---------------------------------------------------------------------------
loc_6F904:                              # CODE XREF: ROM:0006F8F8↑j
                ld      0x1C(g7), r3
                lda     0x3F800000, r15
                addr    r15, r3, r3
loc_6F914:                              # CODE XREF: ROM:0006F900↑j
                ld      0x1A4(g8), r15
                bbc     5, r15, loc_6F928
                ld      0x1F4(g8), r10
                ld      0x1FC(g8), r11
                b       loc_6F930
# ---------------------------------------------------------------------------
loc_6F928:                              # CODE XREF: ROM:0006F918↑j
                ld      0x18(g8), r10
                ld      0x20(g8), r11
loc_6F930:                              # CODE XREF: ROM:0006F924↑j
                bbs     0x10, r15, loc_6F93C
                bbs     0xE, r15, loc_6F93C
                bbc     4, r15, loc_6F944
loc_6F93C:                              # CODE XREF: ROM:loc_6F930↑j
                ld      0x1F8(g8), r4
                b       loc_6F954
# ---------------------------------------------------------------------------
loc_6F944:                              # CODE XREF: ROM:0006F938↑j
                ld      0x1C(g8), r4
                lda     0x3F800000, r15
                addr    r15, r4, r4
loc_6F954:                              # CODE XREF: ROM:0006F940↑j
                addr    r8, r10, g4
                addr    r3, r4, g5
                addr    r9, r11, g6
                lda     0x3F000000, r3
                mulr    g4, r3, g4
                mulr    g5, r3, g5
                mulr    g6, r3, g6
                ldt     0x2F4(g13), r4
                ld      stage_x, r10
                lda     displacement, r14
                subr    r10, r14, r11
                ldos    0x306(g13), r3
                cmpobe  1, r3, loc_6F9BC
                cmpobe  2, r3, loc_6F9DC
                cmpobe  3, r3, loc_6F9FC
                lda     0x3D4CCCCD, r13
                addr    r13, r4, r4
                cmpr    r4, r10
                bl      loc_6FA1C
                mov     1, r15
                stis    r15, 0x306(g13)
                b       loc_6FA1C
# ---------------------------------------------------------------------------
loc_6F9BC:                              # CODE XREF: ROM:0006F990↑j
                lda     0x3D4CCCCD, r13
                addr    r13, r6, r6
                cmpr    r6, r10
                bl      loc_6FA1C
                mov     2, r15
                stis    r15, 0x306(g13)
                b       loc_6FA1C
# ---------------------------------------------------------------------------
loc_6F9DC:                              # CODE XREF: ROM:0006F994↑j
                lda     0x3D4CCCCD, r13
                subr    r13, r4, r4
                cmpr    r4, r11
                bg      loc_6FA1C
                mov     3, r15
                stis    r15, 0x306(g13)
                b       loc_6FA1C
# ---------------------------------------------------------------------------
loc_6F9FC:                              # CODE XREF: ROM:0006F998↑j
                lda     0x3D4CCCCD, r13
                subr    r13, r6, r6
                cmpr    r6, r11
                bg      loc_6FA1C
                mov     0, r15
                stis    r15, 0x306(g13)
                b       loc_6FA1C
# ---------------------------------------------------------------------------
loc_6FA1C:                              # CODE XREF: ROM:0006F9AC↑j
                stt     r4, 0x2F4(g13)
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                lda     0x3DCCCCCD, r13
                mulr    r13, r3, r3
                ldt     0x120(g13), r8
                lda     0x3D4CCCCD, r3
                subr    r8, g4, g4
                mulr    r3, g4, g4
                addr    r8, g4, g4
                subr    r9, g5, g5
                mulr    r3, g5, g5
                addr    r9, g5, g5
                subr    r10, g6, g6
                mulr    r3, g6, g6
                addr    r10, g6, g6
                stt     g4, 0x120(g13)
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                stos    r11, 0x26(g13)
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                subr    r5, g5, r3
                divr    r10, r3, r3
                lda     0x13002626, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ldis    (g11)[g12*1], r3
                stos    r3, 0x24(g13)
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     displacement, r4
                lda     0x3FC00000, r13
                addr    r13, r10, r10
                notbit  0x1F, r10, r3
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x18(g13)
                ret
# ---------------------------------------------------------------------------
loc_6FB8C:                              # DATA XREF: ROM:0009C7E4↓o
                ret                     # return
# ---------------------------------------------------------------------------
loc_6FB90:                              # DATA XREF: ROM:0009C7E8↓o
                ret                     # return
# ---------------------------------------------------------------------------
loc_6FB94:                              # DATA XREF: ROM:0009C7EC↓o
                ld      fa_rob0, r3
                ld      0x0(r3), r15
                bbs     5, r15, loc_6FBB0
                ld      fa_rob1, r7
                b       loc_6FBC0
# ---------------------------------------------------------------------------
loc_6FBB0:                              # CODE XREF: ROM:0006FBA0↑j
                ld      fa_rob1, r3
                ld      fa_rob0, r7
loc_6FBC0:                              # CODE XREF: ROM:0006FBAC↑j
                ldob    0x7D2(r3), r14
                bbs     1, r14, loc_6FC64
                ldt     0x1F4(r3), r4
                ldt     0x1F4(r7), r8
                subr    r4, r8, r4
                subr    r6, r10, r5
                ldos    0x26(g13), r6
                stos    r6, 0x394(g13)
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                notbit  0x1F, r6, r6
                mulr    r4, r7, r8
                mulr    r5, r6, r9
                subr    r9, r8, r8
                bbs     0x1F, r8, loc_6FC2C
                lda     0xFFFFFD76, r15
                stis    r15, 0x396(g13)
                b       loc_6FC34
# ---------------------------------------------------------------------------
loc_6FC2C:                              # CODE XREF: ROM:0006FC18↑j
                lda     0x28A, r15
                stis    r15, 0x396(g13)
loc_6FC34:                              # CODE XREF: ROM:0006FC28↑j
                ldt     0x120(g13), r4
                stt     r4, 0x398(g13)
                ldt     0x18(g13), r8
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                st      r11, 0x3B0(g13)
loc_6FC64:                              # CODE XREF: ROM:0006FBC4↑j
                ldob    0x40(g13), r14
                addi    1, r14, r15
                stob    r15, 0x40(g13)
loc_6FC70:                              # DATA XREF: ROM:0009C7F0↓o
                ld      fa_rob0, r3
                ld      0x0(r3), r15
                bbs     5, r15, loc_6FC8C
                ld      fa_rob1, r7
                b       loc_6FC9C
# ---------------------------------------------------------------------------
loc_6FC8C:                              # CODE XREF: ROM:0006FC7C↑j
                ld      fa_rob1, r3
                ld      fa_rob0, r7
loc_6FC9C:                              # CODE XREF: ROM:0006FC88↑j
                ldob    0x1A18(r7), r14
                cmpobne 3, r14, loc_6FCB4
                ldob    0x7D2(r3), r14
                setbit  4, r14, r15
                stob    r15, 0x7D2(r3)
loc_6FCB4:                              # CODE XREF: ROM:0006FCA4↑j
                ldob    0x7D2(r3), r14
                bbs     1, r14, loc_6FDDC
                ld      CTRL_TIMER, r3
                lda     0x5F, r4
                cmpobg  r4, r3, loc_6FD30
                ldos    0x394(g13), r7
                ldos    0x396(g13), r8
                addo    r7, r8, r7
                stos    r7, 0x394(g13)
                shlo    0xF, 1, r8
                addo    r7, r8, r7
                ld      0x3B0(g13), r8
                ldt     0x398(g13), r4
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                ld      (g11)[g12*1], r13
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                mulr    r8, r13, r13
                mulr    r8, r12, r12
                subr    r12, r4, r12
                addr    r13, r6, r13
                mov     r12, r4
                mov     r13, r6
                stt     r4, 0x18(g13)
loc_6FD30:                              # CODE XREF: ROM:0006FCC8↑j
                ld      fa_rob0, r7
                ld      fa_rob1, r11
                ldt     0x1F4(r7), r8
                ldt     0x1F4(r11), r12
                addr    r8, r12, r8
                addr    r9, r13, r9
                addr    r10, r14, r10
                lda     0x3F000000, r7
                mulr    r8, r7, r8
                mulr    r9, r7, r9
                mulr    r10, r7, r10
                cmpr    r7, r9
                bl      loc_6FD74
                mov     r7, r9
loc_6FD74:                              # CODE XREF: ROM:0006FD6C↑j
                ldt     0x18(g13), r4
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                b       loc_6FFF0
# ---------------------------------------------------------------------------
loc_6FDDC:                              # CODE XREF: ROM:0006FCB8↑j
                ld      0x1A4(r3), r15
                bbc     5, r15, loc_6FDF0
                ld      0x1F4(r3), r4
                ld      0x1FC(r3), r6
                b       loc_6FDF8
# ---------------------------------------------------------------------------
loc_6FDF0:                              # CODE XREF: ROM:0006FDE0↑j
                ld      0x18(r3), r4
                ld      0x20(r3), r6
loc_6FDF8:                              # CODE XREF: ROM:0006FDEC↑j
                bbs     0x10, r15, loc_6FE04
                bbs     0xE, r15, loc_6FE04
                bbc     4, r15, loc_6FE0C
loc_6FE04:                              # CODE XREF: ROM:loc_6FDF8↑j
                ld      0x1F8(r3), r5
                b       loc_6FE1C
# ---------------------------------------------------------------------------
loc_6FE0C:                              # CODE XREF: ROM:0006FE00↑j
                ld      0x1C(r3), r5
                lda     0x3F800000, r15
                addr    r15, r5, r5
loc_6FE1C:                              # CODE XREF: ROM:0006FE08↑j
                ld      0x1A4(r7), r15
                bbc     5, r15, loc_6FE30
                ld      0x1F4(r7), r8
                ld      0x1FC(r7), r10
                b       loc_6FE38
# ---------------------------------------------------------------------------
loc_6FE30:                              # CODE XREF: ROM:0006FE20↑j
                ld      0x18(r7), r8
                ld      0x20(r7), r10
loc_6FE38:                              # CODE XREF: ROM:0006FE2C↑j
                bbs     0x10, r15, loc_6FE44
                bbs     0xE, r15, loc_6FE44
                bbc     4, r15, loc_6FE4C
loc_6FE44:                              # CODE XREF: ROM:loc_6FE38↑j
                ld      0x1F8(r7), r9
                b       loc_6FE5C
# ---------------------------------------------------------------------------
loc_6FE4C:                              # CODE XREF: ROM:0006FE40↑j
                ld      0x1C(r7), r9
                lda     0x3F800000, r15
                addr    r15, r9, r9
loc_6FE5C:                              # CODE XREF: ROM:0006FE48↑j
                chkbit  0x1F, r9
                bno     loc_6FE68
                xor     r9, r9, r9
loc_6FE68:                              # CODE XREF: ROM:0006FE60↑j
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                lda     0x40400000, r12
                cmpr    r12, r11
                bl      loc_6FEA4
                mov     r12, r11
loc_6FEA4:                              # CODE XREF: ROM:0006FE9C↑j
                ld      0x30C(g13), r13
                mulr    r13, r11, r11
                ld      0x2E0(g13), r13
                addr    r13, r11, r11
                st      r11, 0x2E8(g13)
                setbit  0x1F, r11, r11
                subr    r4, r8, r12
                subr    r5, r9, r13
                subr    r6, r10, r14
                lda     0x3F4CCCCD, r15
                mulr    r12, r15, r12
                mulr    r13, r15, r13
                mulr    r14, r15, r14
                addr    r4, r12, r12
                addr    r5, r13, r13
                addr    r6, r14, r14
                lda     0x3F000000, r9
                addr    r4, r8, r4
                addr    r6, r10, r6
                mulr    r4, r9, r4
                mulr    r6, r9, r6
                ld      0x1C(g13), r5
                lda     displacement, r8
                ldos    0x26(g13), r9
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x18(g13)
                mov     r12, r8
                mov     r13, r9
                mov     r14, r10
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
loc_6FFF0:                              # CODE XREF: ROM:0006FDD8↑j
                ret
# ---------------------------------------------------------------------------
                ld      fa_rob0, r3
loc_6FFFC:                              # DATA XREF: MAIN_DATA:02447488↓o
                ld      fa_rob1, r7
loc_70004:                              # DATA XREF: RAM2BASE:002CD2C4↓o
                ldt     0x1F4(r3), r4
loc_70008:                              # DATA XREF: RAM2BASE:002CD15C↓o
                ldt     0x1F4(r7), r8
                subr    r4, r8, r4
                subr    r6, r10, r5
                ldos    0x26(g13), r6
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                notbit  0x1F, r6, r6
                mulr    r4, r7, r8
                mulr    r5, r6, r9
                subr    r9, r8, r8
                bbs     0x1F, r8, loc_70090
                ldob    winner, r14
                cmpobe  1, r14, loc_70078
                ld      fa_rob0, r3
                ld      0x0(r3), r15
                setbit  6, r15, r15
                st      r15, 0x0(r3)
                b       loc_700C8
# ---------------------------------------------------------------------------
loc_70078:                              # CODE XREF: ROM:0007005C↑j
                ld      fa_rob1, r3
                ld      0x0(r3), r15
                clrbit  6, r15, r15
                st      r15, 0x0(r3)
                b       loc_700C8
# ---------------------------------------------------------------------------
loc_70090:                              # CODE XREF: ROM:00070050↑j
                ldob    winner, r14
                cmpobe  1, r14, loc_700B4
                ld      fa_rob0, r3
                ld      0x0(r3), r15
                clrbit  6, r15, r15
                st      r15, 0x0(r3)
                b       loc_700C8
# ---------------------------------------------------------------------------
loc_700B4:                              # CODE XREF: ROM:00070098↑j
                ld      fa_rob1, r3
                ld      0x0(r3), r15
                setbit  6, r15, r15
                st      r15, 0x0(r3)
loc_700C8:                              # CODE XREF: ROM:00070074↑j
                ret
# =============== S U B R O U T I N E =======================================
sub_700CC:                              # DATA XREF: ROM:0009C80C↓o
                lda     0x3B4(g13), r3
                ld      mod_fa_burni, r7 # Cloning cutscene
                lda     0xF4(r7), r7
                lda     dword_7041C, r15
                st      r15, 4(r3)
                lda     dword_7043C, r15
                st      r15, 4(r7)
                addo    4, sp, sp
                st      g13, -4(sp)
                mov     r3, g13
                call    sub_69EC0
                mov     r7, g13
                call    sub_69EC0
                ld      -4(sp), g13
                subo    4, sp, sp
                ldob    0x40(g13), r14
                addi    1, r14, r15
                stob    r15, 0x40(g13)
                b       loc_702C4
# ---------------------------------------------------------------------------
loc_7012C:                              # DATA XREF: ROM:0009C810↓o
                lda     0x3B4(g13), r3
                ld      mod_fa_burni, r7 # Cloning cutscene
                lda     0xF4(r7), r7
                addo    4, sp, sp
                st      g13, -4(sp)
                mov     r3, g13
                call    sub_69F60
                mov     r7, g13
                call    sub_69F60
                ld      -4(sp), g13
                subo    4, sp, sp
                ld      mod_fa_burni, r11 # Cloning cutscene
                ldos    0x18C(r11), r4
                shlo    4, 5, r13
                cmpobg  r13, r4, loc_702C4
                shlo    4, 9, r13
                cmpobl  r13, r4, loc_702C4
                shlo    6, 5, r13
                cmpobe  r13, r4, loc_7040C
                lda     0xC04CCCCD, r4
                lda     0x40B00000, r5
                lda     displacement, r6
                ldt     0x44(r11), r8
                lda     0x40000000, r12
                addr    r9, r12, r9
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x2000404, r15
                st      r15, (g11)[g12*1]
                lda     0x15C(r11), r15
                ld      0x0(r15), r14
                st      r14, (g11)[g12*1]
                ld      4(r15), r14
                st      r14, (g11)[g12*1]
                ld      8(r15), r14
                st      r14, (g11)[g12*1]
                ld      0xC(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x10(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x14(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x18(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x1C(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x20(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x24(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x28(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x2C(r15), r14
                st      r14, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                stt     r4, 0x18(g13)
                ret
# ---------------------------------------------------------------------------
loc_702C4:                              # CODE XREF: sub_700CC+5C↑j
                ldt     0x5C(r3), r4
                ldt     0x5C(r7), r8
                ld      mod_fa_burni, r11 # Cloning cutscene
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x2000404, r15
                st      r15, (g11)[g12*1]
                lda     0x15C(r11), r15
                ld      0x0(r15), r14
                st      r14, (g11)[g12*1]
                ld      4(r15), r14
                st      r14, (g11)[g12*1]
                ld      8(r15), r14
                st      r14, (g11)[g12*1]
                ld      0xC(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x10(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x14(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x18(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x1C(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x20(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x24(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x28(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x2C(r15), r14
                st      r14, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                subr    r4, r8, r12
                subr    r6, r10, r13
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g13)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g13)
                stt     r4, 0x18(g13)
                ret
# ---------------------------------------------------------------------------
loc_7040C:                              # CODE XREF: sub_700CC+B8↑j
                lda     displacement, r15
                stib    r15, 0x40(g13)
                ret
# End of function sub_700CC
# ---------------------------------------------------------------------------
dword_7041C:    .long 0x41000000        # DATA XREF: sub_700CC+10↑o
                .long 0x40A00000
                .long          0
                .long    0x20000
                .long          0
                .long 0x4053D70A
                .long 0xC09B3333
                .long      0x120
dword_7043C:    .long          0        # DATA XREF: sub_700CC+1C↑o
                .long 0x406CCCCD
                .long          0
                .long    0x20000
                .long          0
                .long 0x406CCCCD
                .long          0
                .long    0x20100
                .long          0
                .long 0x406CCCCD
                .long          0
                .long    0x20101
                .long          0
                .long 0x40066666
                .long          0
                .long      0x13F
# =============== S U B R O U T I N E =======================================
# Cloning cutscene
fa_burni:                               # DATA XREF: BUNRI_INT+318↑o
                mov     0, r15
                stis    r15, 0x18C(g13)
                lda     0x8C(g13), r3
                lda     dword_706CC, r15
                st      r15, 4(r3)
                addo    4, sp, sp
                st      g13, -4(sp)
                lda     0x8C(g13), g13
                call    sub_69EC0
                ld      -4(sp), g13
                subo    4, sp, sp
                xor     r3, r3, r3
                ld      0x5004C0, r15
                bbs     1, r15, loc_704CC
                shlo    0xD, 3, r4
                b       loc_704D0
# ---------------------------------------------------------------------------
loc_704CC:                              # CODE XREF: fa_burni+44↑j
                shlo    0xD, 7, r4
loc_704D0:                              # CODE XREF: fa_burni+4C↑j
                shlo    0xC, 0xF, r5
                stos    r5, 0x50(g13)
                stos    r4, 0x52(g13)
                stos    r4, 0x54(g13)
                stos    r3, 0x56(g13)
                lda     displacement, r4
                lda     0x40066666, r5
                lda     displacement, r6
                stt     r4, 0x58(g13)
                lda     0xB20, r15
                stis    r15, 0x18E(g13)
                lda     0x319, r15
                stis    r15, 0x190(g13)
                lda     sub_70580, r15
                st      r15, 0x40(g13)
                lda     sub_70A34, r15
                st      r15, 0x74(g13)
                lda     sub_70C84, r15
                st      r15, 0x70(g13)
                lda     loc_70540, r15
                st      r15, 0xC(g13)
loc_70540:                              # DATA XREF: fa_burni+B8↑o
                ldos    0x18C(g13), r3
                addo    1, r3, r3
                stos    r3, 0x18C(g13)
                lda     0x1AC, r13
                cmpobge r13, r3, loc_70564
                ld      0x0(g13), r15
                clrbit  0x1F, r15, r15
                st      r15, 0x0(g13)
                ret
# ---------------------------------------------------------------------------
loc_70564:                              # CODE XREF: fa_burni+D4↑j
                ld      0x40(g13), r4
                callx   (r4)
                ld      0x74(g13), r4
                callx   (r4)
                ld      0x70(g13), r4
                callx   (r4)
                ret
# End of function fa_burni
# =============== S U B R O U T I N E =======================================
sub_70580:                              # DATA XREF: fa_burni+94↑o
                ldos    0x18C(g13), r14
                cmpobne 0x10, r14, loc_70598
                lda     0xAE113B, g0    # sd_ufo_6b
                call    check_same_sound
                call    sound_request_u
loc_70598:                              # CODE XREF: sub_70580+4↑j
                addo    4, sp, sp
                st      g13, -4(sp)
                lda     0x8C(g13), g13
                call    sub_69F60
                ld      -4(sp), g13
                subo    4, sp, sp
                lda     0x8C(g13), r3
                ldt     0x5C(r3), r4
                ld      mod_fa_burni, r11 # Cloning cutscene
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x2000404, r15
                st      r15, (g11)[g12*1]
                lda     0x15C(r11), r15
                ld      0x0(r15), r14
                st      r14, (g11)[g12*1]
                ld      4(r15), r14
                st      r14, (g11)[g12*1]
                ld      8(r15), r14
                st      r14, (g11)[g12*1]
                ld      0xC(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x10(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x14(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x18(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x1C(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x20(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x24(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x28(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x2C(r15), r14
                st      r14, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x44(g13)
                ld      0x3C(r3), r4
                addo    4, sp, sp
                st      g0, -4(sp)
                lda     0x461C4000, r5
                mulr    r4, r5, r4
                cvtri   r4, r4
                stos    r4, 0x56(g13)
                bal     sub_70F1C
                ldos    0x18C(g13), r3
                shlo    5, 3, r13
                cmpobge r13, r3, loc_706C8
                lda     sub_7073C, r15
                st      r15, 0x40(g13)
                lda     0xAE1358, g0    # sd_laugh0b
                call    check_same_sound
                call    sound_request_u
loc_706C8:                              # CODE XREF: sub_70580+128↑j
                ret
# End of function sub_70580
# ---------------------------------------------------------------------------
dword_706CC:    .long 0xC1F00000        # DATA XREF: fa_burni+C↑o
                .long 0x41200000
                .long 0x40A00000
                .long 0x20000
                .long 0xC1A00000
                .long 0x41000000
                .long 0xC0800000
                .long 0x20018
                .long 0xC1200000
                .long 0x41100000
                .long 0x40400000
                .long 0x20030
                .long 0xC0A00000
                .long 0x40E00000
                .long 0xC0000000
                .long 0x2003C
                .long 0xC0A00000
                .long 0x40A00000
                .long 0
                .long 0x20048
                .long 0xC0A00000
                .long 0x40A00000
                .long 0
                .long 0x20054
                .long 0xC0A00000
                .long 0x40A00000
                .long 0
                .long 0x60
# =============== S U B R O U T I N E =======================================
sub_7073C:                              # DATA XREF: sub_70580+12C↑o
                ldos    0x18C(g13), r3
                shlo    5, 7, r13
                cmpobge r13, r3, loc_70840
                lda     0x8C(g13), r3
                lda     dword_709D4, r15
                st      r15, 4(r3)
                addo    4, sp, sp
                st      g13, -4(sp)
                lda     0x8C(g13), g13
                call    sub_69EC0
                ld      -4(sp), g13
                subo    4, sp, sp
                ldt     0x5C(r3), r4
                ld      mod_fa_burni, r11 # Cloning cutscene
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x2000404, r15
                st      r15, (g11)[g12*1]
                lda     0x15C(r11), r15
                ld      0x0(r15), r14
                st      r14, (g11)[g12*1]
                ld      4(r15), r14
                st      r14, (g11)[g12*1]
                ld      8(r15), r14
                st      r14, (g11)[g12*1]
                ld      0xC(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x10(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x14(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x18(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x1C(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x20(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x24(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x28(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x2C(r15), r14
                st      r14, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x44(g13)
                lda     sub_708A0, r15
                st      r15, 0x40(g13)
loc_70840:                              # CODE XREF: sub_7073C+8↑j
                lda     0x319, r15
                stis    r15, 0x190(g13)
                shlo    4, 9, r13
                cmpobl  r13, r3, loc_70898
                lda     0xD14, r15
                stis    r15, 0x190(g13)
                shlo    5, 3, r4
                shlo    0xD, 1, r5
                lda     0x3F800000, r6
                lda     0x40466666, r7
                subo    r4, r3, r3
                mulo    r3, r5, r3
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                mulr    r4, r6, r6
                subr    r6, r7, r7
                st      r7, 0x5C(g13)
loc_70898:                              # CODE XREF: sub_7073C+110↑j
                bal     sub_70F1C
                ret
# End of function sub_7073C
# =============== S U B R O U T I N E =======================================
sub_708A0:                              # DATA XREF: sub_7073C+F8↑o
                addo    4, sp, sp
                st      g13, -4(sp)
                lda     0x8C(g13), g13
                call    sub_69F60
                ld      -4(sp), g13
                subo    4, sp, sp
                lda     0x8C(g13), r3
                ld      0x14(r3), r4
                ld      0x3C(r3), r6
                notbit  0x1F, r4, r4
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                ldos    0x54(g13), r8
                addo    r7, r8, r7
                stos    r7, 0x52(g13)
                ldt     0x5C(r3), r4
                ld      mod_fa_burni, r11 # Cloning cutscene
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x2000404, r15
                st      r15, (g11)[g12*1]
                lda     0x15C(r11), r15
                ld      0x0(r15), r14
                st      r14, (g11)[g12*1]
                ld      4(r15), r14
                st      r14, (g11)[g12*1]
                ld      8(r15), r14
                st      r14, (g11)[g12*1]
                ld      0xC(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x10(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x14(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x18(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x1C(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x20(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x24(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x28(r15), r14
                st      r14, (g11)[g12*1]
                ld      0x2C(r15), r14
                st      r14, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x44(g13)
                bal     sub_70F1C
                ldos    0x18C(g13), r3
                shlo    5, 0xB, r13
                cmpobne r13, r3, loc_709D0
                lda     0xAE113C, g0
                call    check_same_sound
                call    sound_request_u
loc_709D0:                              # CODE XREF: sub_708A0+11C↑j
                ret
# End of function sub_708A0
# ---------------------------------------------------------------------------
dword_709D4:    .long 0xC0A00000        # DATA XREF: sub_7073C+10↑o
                .long 0x40A00000
                .long 0
                .long 0x20000, 0xC0000000, 0x40800000, 0x40400000, 0x20018
                .long 0x3F800000, 0x40400000, 0
                .long 0x20030, 0xBF800000, 0x40A00000, 0xC0A00000, 0x20048
                .long 0
                .long 0x41000000, 0x41A00000, 0x20090, 0x43C80000, 0x43FA0000
                .long 0x447A0000, 0x100
# =============== S U B R O U T I N E =======================================
sub_70A34:                              # DATA XREF: fa_burni+A0↑o
                ldos    0x18C(g13), r3
                shlo    7, 1, r13
                cmpobge r13, r3, loc_70B1C
                ldt     0x64(g13), r4
                xor     r8, r8, r8
                lda     0x3F000000, r9
                xor     r10, r10, r10
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r4, r8, r4
                subr    r5, r9, r5
                subr    r6, r10, r6
                stt     r4, 0x80(g13)
                notbit  0x1F, r4, r4
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                stos    r3, 0x7A(g13)
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                stos    r4, 0x78(g13)
                mov     0, r15
                stis    r15, 0x7C(g13)
                mov     0, r15
                stis    r15, 0x7E(g13)
                lda     0xB21, r15
                stis    r15, 0x18E(g13)
                lda     0xAE1326, g0    # sd_beam_6c
                call    check_same_sound
                call    sound_request_u
                lda     sub_70B20, r15
                st      r15, 0x74(g13)
loc_70B1C:                              # CODE XREF: sub_70A34+8↑j
                ret
# End of function sub_70A34
# =============== S U B R O U T I N E =======================================
sub_70B20:                              # DATA XREF: sub_70A34+DC↑o
                ldos    0x7C(g13), r3
                ldos    CTRL_TIMER, r4
                divo    0xA, r4, r5
                mulo    0xA, r5, r5
                subo    r5, r4, r4
                subo    r4, 0xA, r4
                lda     0x3C23D70A, r5
                cvtir   r4, r4
                mulr    r4, r5, r7
                lda     0x3DCCCCCD, r5
                cvtir   r3, r6
                mulr    r5, r6, r5
                addr    r7, r5, r7
loc_70B60:                              # CODE XREF: sub_70B20+100↓j
                ldt     0x80(g13), r4
                mulr    r4, r7, r4
                mulr    r5, r7, r5
                mulr    r6, r7, r6
                ldt     0x64(g13), r8
                addr    r4, r8, r4
                addr    r5, r9, r5
                addr    r6, r10, r6
                ldos    0x78(g13), r8
                ldos    0x7A(g13), r9
                lda     0x40400000, r10
                mulr    r10, r7, r10
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                mov     0, g1
                lda     2852, g0        # UFO Eggman beam rings
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ldos    0x7E(g13), r11
                cmpobe  r3, r11, loc_70C24
                addo    1, r3, r3
                lda     0x3DCCCCCD, r12
                addr    r7, r12, r7
                b       loc_70B60
# ---------------------------------------------------------------------------
loc_70C24:                              # CODE XREF: sub_70B20+EC↑j
                ldos    0x7E(g13), r3
                addo    1, r3, r3
                cmpobne 0xA, r3, loc_70C34
                mov     9, r3
loc_70C34:                              # CODE XREF: sub_70B20+10C↑j
                stos    r3, 0x7E(g13)
                ldos    0x18C(g13), r3
                lda     0xD7, r13
                cmpobge r13, r3, loc_70C7C
                ldos    0x7C(g13), r4
                addo    1, r4, r4
                stos    r4, 0x7C(g13)
                shlo    5, 7, r13
                cmpobge r13, r3, loc_70C7C
                lda     sub_70C80, r15
                st      r15, 0x74(g13)
                lda     0xA00001, g0
                call    check_same_sound
                call    sound_request_u
                lda     0xB20, r15
                stis    r15, 0x18E(g13)
loc_70C7C:                              # CODE XREF: sub_70B20+120↑j
                ret
# End of function sub_70B20
# =============== S U B R O U T I N E =======================================
sub_70C80:                              # DATA XREF: sub_70B20+138↑o
                ret
# End of function sub_70C80
# =============== S U B R O U T I N E =======================================
sub_70C84:                              # DATA XREF: fa_burni+AC↑o
                ldos    0x18C(g13), r3
                shlo    7, 1, r13
                cmpobne r13, r3, loc_70CD4
                ld      fa_rob0, r3
                ld      fa_rob1, r4
                lda     0x1DF, r15
                st      r15, 0x198(r3)
                lda     0x1DF, r15
                st      r15, 0x198(r4)
                ld      0x0(r3), r15
                clrbit  0x13, r15, r15
                st      r15, 0x0(r3)
                ld      0x0(r4), r15
                clrbit  0x13, r15, r15
                st      r15, 0x0(r4)
                lda     sub_70E08, r15
                st      r15, 0x70(g13)
loc_70CD4:                              # CODE XREF: sub_70C84+8↑j
                ld      fa_camera, r7
                ldt     0x44(g13), r4
                stt     r4, 0x41C(r7)
                addo    0x1F, 1, r13
                cmpobge r13, r3, loc_70E04
                shlo    5, 3, r13
                cmpoble r13, r3, loc_70E04
                ld      fa_rob0, r3
                ldt     0x20C(r3), r4
                xor     r5, r5, r5
                lda     0x40000000, r7
                shlo    0xD, 1, r8
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501864, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_70DA4
                st      r13, 0x0(r15)
                b       loc_70DB0
# ---------------------------------------------------------------------------
loc_70DA4:                              # CODE XREF: sub_70C84+114↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_70DB0:                              # CODE XREF: sub_70C84+11C↑j
                mov     0, g1
                lda     816, g0         # Shock lines over head when seeing a clone
                call    set_obj
                lda     0x501864, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_70E04:                              # CODE XREF: sub_70C84+64↑j
                ret
# End of function sub_70C84
# =============== S U B R O U T I N E =======================================
sub_70E08:                              # DATA XREF: sub_70C84+44↑o
                ldos    0x18C(g13), r3
                lda     0xE6, r13
                cmpobe  r13, r3, loc_70E20
                shlo    8, 1, r13
                cmpobe  r13, r3, loc_70E74
                b       loc_70E30
# ---------------------------------------------------------------------------
loc_70E20:                              # CODE XREF: sub_70E08+8↑j
                lda     0xAE1145, g0    # sd_gum_2
                call    check_same_sound
                call    sound_request_u
loc_70E30:                              # CODE XREF: sub_70E08+14↑j
                ld      fa_camera, r4
                bbs     0, r3, loc_70E58
                ld      0x0(r4), r15
                setbit  1, r15, r15
                st      r15, 0x0(r4)
                ld      0x0(r4), r15
                clrbit  2, r15, r15
                st      r15, 0x0(r4)
                b       loc_70E70
# ---------------------------------------------------------------------------
loc_70E58:                              # CODE XREF: sub_70E08+30↑j
                ld      0x0(r4), r15
                setbit  2, r15, r15
                st      r15, 0x0(r4)
                ld      0x0(r4), r15
                clrbit  1, r15, r15
                st      r15, 0x0(r4)
loc_70E70:                              # CODE XREF: sub_70E08+4C↑j
                ret
# ---------------------------------------------------------------------------
loc_70E74:                              # CODE XREF: sub_70E08+10↑j
                ld      fa_camera, r4
                ld      0x0(r4), r15
                setbit  1, r15, r15
                st      r15, 0x0(r4)
                ld      0x0(r4), r15
                setbit  2, r15, r15
                st      r15, 0x0(r4)
                lda     sub_70EA4, r15
                st      r15, 0x70(g13)
                ret
# End of function sub_70E08
# =============== S U B R O U T I N E =======================================
sub_70EA4:                              # DATA XREF: sub_70E08+8C↑o
                ldos    0x18C(g13), r3
                lda     0x1AC, r13
                cmpobne r13, r3, loc_70F18
                ld      fa_rob1, r3
                lda     0x3FB47AE1, r4
                xor     r5, r5, r5
                mov     r4, r6
                stt     r4, 0x18(r3)
                ld      0x1A0(r3), r4
                ldos    displacement(r4), g0
                ld      fa_rob1, g7
                call    set_motion
                ld      fa_rob0, r3
                lda     0xBFB47AE1, r4
                xor     r5, r5, r5
                mov     r4, r6
                stt     r4, 0x18(r3)
                ld      0x1A0(r3), r4
                ldos    displacement(r4), g0
                ld      fa_rob0, g7
                call    set_motion
loc_70F18:                              # CODE XREF: sub_70EA4+8↑j
                ret
# End of function sub_70EA4
# =============== S U B R O U T I N E =======================================
sub_70F1C:                              # CODE XREF: sub_70580+11C↑p
                ldos    0x52(g13), r4
                ldos    0x50(g13), r5
                ldos    0x56(g13), r6
                ldt     0x44(g13), r8
                shlo    0xE, 1, r7
                ldos    0x18E(g13), r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                subi    r7, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                subi    r5, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                subi    r6, 0, r15
                st      r15, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501864, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_70FFC
                st      r13, 0x0(r15)
                b       loc_71008
# ---------------------------------------------------------------------------
loc_70FFC:                              # CODE XREF: sub_70F1C+D4↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_71008:                              # CODE XREF: sub_70F1C+DC↑j
                mov     0, g1
                lda     2847, g0        # UFO Eggman Body
                call    set_obj
                mov     0, g1
                lda     3354, g0        # UFO Eggman Dome
                call    set_obj
                mov     0, g1
                lda     (r11), g0
                call    set_obj
                lda     0x501864, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1800303, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                subi    r7, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                subi    r5, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                subi    r6, 0, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r8
                lda     0xBF7EB852, r9
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r8, 0x64(g13)
                ldos    0x52(g13), r4
                ldos    0x50(g13), r5
                ldos    0x56(g13), r6
                lda     displacement, r8
                lda     0x3FB5C28F, r9
                lda     displacement, r10
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ldt     0x44(g13), r4
                addr    r4, r8, r4
                addr    r5, r9, r5
                addr    r6, r10, r6
                ldt     0x58(g13), r8
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                subr    r4, r8, r8
                subr    r5, r9, r9
                subr    r6, r10, r10
                lda     0x13802727, r15
loc_71210:                              # DATA XREF: MAIN_DATA:0247D434↓o
                st      r15, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                notbit  0x1F, r9, r9
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                shlo    0xE, 1, r9
                ldos    0x190(g13), r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                subi    r9, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501864, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_712F4
                st      r13, 0x0(r15)
                b       loc_71300
# ---------------------------------------------------------------------------
loc_712F4:                              # CODE XREF: sub_70F1C+3CC↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_71300:                              # CODE XREF: sub_70F1C+3D4↑j
                mov     0, g1
loc_71304:                              # DATA XREF: MAIN_DATA:0298CF11↓o
                lda     (r11), g0
                call    set_obj
                lda     0x501864, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                bx      (g14)
# End of function sub_70F1C
# =============== S U B R O U T I N E =======================================
sub_71358:                              # DATA XREF: ROM:0009C81C↓o
                lda     0x3F000000, r15
                st      r15, 0x30C(g13)
                ld      frame_counter, r3
                and     7, r3, r3
                ldos    word_718F4[r3*4], r4
                ldos    word_718F6[r3*4], r5
                stos    r4, 0x302(g13)
                stos    r5, 0xF8(g13)
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                ld      0x1A4(g7), r15
                bbc     5, r15, loc_713AC
                ld      0x1F4(g7), r8
                ld      0x1FC(g7), r9
                b       loc_713B4
# ---------------------------------------------------------------------------
loc_713AC:                              # CODE XREF: sub_71358+44↑j
                ld      0x18(g7), r8
                ld      0x20(g7), r9
loc_713B4:                              # CODE XREF: sub_71358+50↑j
                bbs     0x10, r15, loc_713C0
                bbs     0xE, r15, loc_713C0
                bbc     4, r15, loc_713C8
loc_713C0:                              # CODE XREF: sub_71358:loc_713B4↑j
                ld      0x1F8(g7), g3
                b       loc_713D8
# ---------------------------------------------------------------------------
loc_713C8:                              # CODE XREF: sub_71358+64↑j
                ld      0x1C(g7), g3
                lda     0x3F800000, r15
                addr    r15, g3, g3
loc_713D8:                              # CODE XREF: sub_71358+6C↑j
                ld      0x1A4(g8), r15
                bbc     5, r15, loc_713EC
                ld      0x1F4(g8), r10
                ld      0x1FC(g8), r11
                b       loc_713F4
# ---------------------------------------------------------------------------
loc_713EC:                              # CODE XREF: sub_71358+84↑j
                ld      0x18(g8), r10
                ld      0x20(g8), r11
loc_713F4:                              # CODE XREF: sub_71358+90↑j
                bbs     0x10, r15, loc_71400
                bbs     0xE, r15, loc_71400
                bbc     4, r15, loc_71408
loc_71400:                              # CODE XREF: sub_71358:loc_713F4↑j
                ld      0x1F8(g8), r4
                b       loc_71418
# ---------------------------------------------------------------------------
loc_71408:                              # CODE XREF: sub_71358+A4↑j
                ld      0x1C(g8), r4
                lda     0x3F800000, r15
                addr    r15, r4, r4
loc_71418:                              # CODE XREF: sub_71358+AC↑j
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                ld      0x2DC(g13), g5
                lda     0x3E4CCCCD, r13
                mulr    r13, r5, r3
                addr    r3, g5, g5
                addr    r8, r10, g4
                addr    r9, r11, g6
                lda     0x3F000000, r3
                mulr    g4, r3, g4
                mulr    g6, r3, g6
                ld      0x30C(g13), r13
                mulr    r13, r5, r5
                ld      0x2E0(g13), r13
                addr    r13, r5, r5
                st      r5, 0x2E8(g13)
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                shlo    0xE, 1, r13
                addi    r13, r7, r7
                ldos    0x302(g13), r13
                addi    r13, r7, r7
                ldos    0x302(g13), r13
                addi    r13, r7, r7
                ldos    0xF8(g13), r3
                stt     g4, 0x120(g13)
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      0x2F0(g13), g1
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                notbit  0x1F, g1, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r11
                notbit  0x1F, r5, r5
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x18(g13)
                stos    r3, 0x24(g13)
                stos    r7, 0x26(g13)
                lda     displacement35, r15
                stib    r15, 0x40(g13)
loc_71594:                              # DATA XREF: ROM:0009C820↓o
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                ld      0x1A4(g7), r12
                ld      0x1A4(g8), r13
                or      r13, r12, g2
                shlo    7, 1, r15
                stis    r15, 0x304(g13)
                lda     0x3D4CCCCD, r15
                st      r15, 0x2E4(g13)
                ld      0x1A4(g7), r15
                bbc     5, r15, loc_715D8
                ld      0x1F4(g7), r8
                ld      0x1FC(g7), r9
                b       loc_715E0
# ---------------------------------------------------------------------------
loc_715D8:                              # CODE XREF: sub_71358+270↑j
                ld      0x18(g7), r8
                ld      0x20(g7), r9
loc_715E0:                              # CODE XREF: sub_71358+27C↑j
                bbs     0x10, r15, loc_715EC
                bbs     0xE, r15, loc_715EC
                bbc     4, r15, loc_715F4
loc_715EC:                              # CODE XREF: sub_71358:loc_715E0↑j
                ld      0x1F8(g7), g3
                b       loc_71604
# ---------------------------------------------------------------------------
loc_715F4:                              # CODE XREF: sub_71358+290↑j
                ld      0x1C(g7), g3
                lda     0x3F800000, r15
                addr    r15, g3, g3
loc_71604:                              # CODE XREF: sub_71358+298↑j
                ld      0x1A4(g8), r15
                bbc     5, r15, loc_71618
                ld      0x1F4(g8), r10
                ld      0x1FC(g8), r11
                b       loc_71620
# ---------------------------------------------------------------------------
loc_71618:                              # CODE XREF: sub_71358+2B0↑j
                ld      0x18(g8), r10
                ld      0x20(g8), r11
loc_71620:                              # CODE XREF: sub_71358+2BC↑j
                bbs     0x10, r15, loc_7162C
                bbs     0xE, r15, loc_7162C
                bbc     4, r15, loc_71634
loc_7162C:                              # CODE XREF: sub_71358:loc_71620↑j
                ld      0x1F8(g8), r4
                b       loc_71644
# ---------------------------------------------------------------------------
loc_71634:                              # CODE XREF: sub_71358+2D0↑j
                ld      0x1C(g8), r4
                lda     0x3F800000, r15
                addr    r15, r4, r4
loc_71644:                              # CODE XREF: sub_71358+2D8↑j
                lda     0x40800000, r15
                ldt     0x2C(g7), r12
                mulr    r15, r12, r12
                mulr    r15, r14, r14
                addr    r12, r8, r8
                addr    r14, r9, r9
                ldt     0x2C(g8), r12
                mulr    r15, r12, r12
                mulr    r15, r14, r14
                addr    r12, r10, r10
                addr    r14, r11, r11
                cmpr    r4, g3
                bl      loc_71680
                mov     r4, g3
loc_71680:                              # CODE XREF: sub_71358+320↑j
                lda     0x3F800000, r14
                lda     0x40200000, r14
                mulr    r14, g3, g3
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                mov     r5, r4
                cmpr    g3, r5
                bl      loc_716C4
                mov     g3, r5
loc_716C4:                              # CODE XREF: sub_71358+364↑j
                lda     0x40400000, r3
                cmpoble r3, r5, loc_716D4
                mov     r3, r5
loc_716D4:                              # CODE XREF: sub_71358+374↑j
                lda     0x41700000, r3
                cmpobge r3, r5, loc_716E4
                mov     r3, r5
loc_716E4:                              # CODE XREF: sub_71358+384↑j
                ld      0x2DC(g13), g5
                lda     0x3E4CCCCD, r13
                mulr    r13, r5, r3
                addr    r3, g5, g5
                addr    r8, r10, g4
                addr    r9, r11, g6
                lda     0x3F000000, r3
                mulr    g4, r3, g4
                mulr    g6, r3, g6
                ld      0x30C(g13), r13
                mulr    r13, r5, r5
                ld      0x2E0(g13), r13
                addr    r13, r5, r5
                ldos    0x26(g13), r7
                lda     0x3F800000, r12
                cmpr    r4, r12
                bl      loc_6B824
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                shlo    0xE, 1, r13
                addi    r13, r7, r7
                ldos    0x302(g13), r13
                addi    r13, r7, r7
                ldis    0x26(g13), r13
                subi    r13, r7, r3
                shlo    0xE, 1, r13
                addi    r13, r3, r3
                bbc     0xF, r3, loc_7177C
                notbit  0xF, r7, r7
loc_7177C:                              # CODE XREF: sub_71358+41C↑j
                shlo    0x10, r7, r7
                ldos    0x26(g13), r3
                shlo    0x10, r3, r3
                ldos    0x304(g13), r11
                subi    r3, r7, r7
                divi    r11, r7, r7
                addi    r3, r7, r7
                shro    0x10, r7, r7
                lda     0x3D4CCCCD, r6
                ld      0x2E8(g13), r3
                cmpr    r5, r3
                ble     loc_717B8
                lda     0x3E4CCCCD, r6
loc_717B8:                              # CODE XREF: sub_71358+454↑j
                subr    r3, r5, r5
                mulr    r6, r5, r5
                addr    r3, r5, r5
                st      r5, 0x2E8(g13)
                ldos    0xF8(g13), r3
                shlo    0x10, r3, r3
                ldos    0x24(g13), r11
                shlo    0x10, r11, r11
                ldos    0x304(g13), r12
                subi    r11, r3, r3
                divi    r12, r3, r3
                addi    r11, r3, r3
                shro    0x10, r3, r3
                ld      0x2E4(g13), r11
                ldt     0x120(g13), r8
                subr    r8, g4, g4
                mulr    r11, g4, g4
                addr    r8, g4, g4
                subr    r9, g5, g5
                mulr    r11, g5, g5
                addr    r9, g5, g5
                subr    r10, g6, g6
                mulr    r11, g6, g6
                addr    r10, g6, g6
                stt     g4, 0x120(g13)
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      0x2F0(g13), g1
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                notbit  0x1F, g1, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r11
                notbit  0x1F, r5, r5
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x18(g13)
                stos    r3, 0x24(g13)
                stos    r7, 0x26(g13)
                ret
# End of function sub_71358
# ---------------------------------------------------------------------------
                ret
# ---------------------------------------------------------------------------
word_718F4:     .short 0x2000           # DATA XREF: sub_71358+18↑r
word_718F6:     .short 0xF800           # DATA XREF: sub_71358+20↑r
                .short 0x3000
                .short 0xFE00
                .short 0x800
                .short 0x400
                .short 0x1000
                .short 0xE000
                .short 0x5000
                .short 0xD000
                .short 0x6000
                .short 0
                .short 0x7000
                .short 0xF000
                .short 0x1800
                .short 0x800
# =============== S U B R O U T I N E =======================================
object_init:                            # DATA XREF: ROM:00008B58↑o
                ld      0x40(g13), r3   # Label from Fighting Vipers source
                cmpobe  0, r3, object_cont
                addo    4, r3, r9
                ld      (r3), r8
                cmpobe  0, r8, object_cont
                lda     fa_object0_ram, g6
loc_71930:                              # CODE XREF: object_init+68↓j
                lda     0x80000000, r15
                st      r15, 0x0(g6)
                ld      0x0(r9), r3
                stib    r3, 4(g6)
                ld      4(r9), g0
                st      g0, 8(g6)
                ld      8(r9), r15
                st      r15, 0xC(g6)    # Writes 727E0 to 54310C
                ld      0xC(r9), r15
                st      r15, 0x14(g6)
                ld      0x10(r9), r15
                st      r15, 0x10(g6)
                ld      0x14(r9), r3
                cmpobe  0, r3, loc_71970
                st      g6, (r3)
loc_71970:                              # CODE XREF: object_init+54↑j
                addi    0x18, r9, r9
                addo    g0, g6, g6
                cmpdeco 1, r8, r8
                bl      loc_71930
                lda     object_cont, r15
                st      r15, 0xC(g13)
object_cont:                            # CODE XREF: object_init+4↑j
                ld      debug_flag, r15 # Label from Fighting Vipers source
                bbs     5, r15, loc_719E8
                ld      0x40(g13), r3
                ld      (r3), r10
                cmpobe  0, r10, loc_719E8
                lda     fa_object0_ram, g6
loc_719AC:                              # CODE XREF: object_init+C4↓j
                ld      0x0(g6), r4
                bbc     0x1F, r4, loc_719CC
                ld      0xC(g6), r4
                cmpobe  0, r4, loc_719CC
                callx   (r4)
                ldis    6(g6), r15
                lda     1(r15), r15
                stis    r15, 6(g6)
loc_719CC:                              # CODE XREF: object_init+9C↑j
                ld      8(g6), r13
                addi    r13, g6, g6
                cmpdeco 1, r10, r10
                bl      loc_719AC
                ldis    6(g13), r15
                lda     1(r15), r15
                stis    r15, 6(g13)
loc_719E8:                              # CODE XREF: object_init+80↑j
                ret
# End of function object_init
# =============== S U B R O U T I N E =======================================
object_control:                         # CODE XREF: camera_init+1874↑p
                lda     0x800101, r15 # Label from official source
                st      r15, (g11)[g12*1]
                ld      mod_fa_obj0, r9
                ld      0x0(r9), r15
                bbc     0x1F, r15, loc_71A64
                ld      mod_fa_obj0, r13
                ld      0x40(r13), r3
                cmpobe  0, r3, loc_71A64
                ld      (r3), r10
                cmpobe  0, r10, loc_71A64
                lda     fa_object0_ram, g6
loc_71A28:                              # CODE XREF: object_control+74↓j
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                ld      0x0(g6), r4
                bbc     0x1F, r4, loc_71A54
                bbs     1, r4, loc_71A54
                ld      0x14(g6), r4
                callx   (r4)
loc_71A54:                              # CODE XREF: object_control+58↑j
                ld      8(g6), r13
                addi    r13, g6, g6
                cmpdeco 1, r10, r10
                bl      loc_71A28
loc_71A64:                              # CODE XREF: object_control+18↑j
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# End of function object_control
# ---------------------------------------------------------------------------
object_move_int:                        # Label from Fighting Vipers source
                lda     object_move, r15
                st      r15, 0xC(g6)
                mov     0, r3
                stos    r3, 6(g6)
                stob    r3, 0x48(g6)
                ld      0x10(g6), g5
                b       loc_71ABC
# =============== S U B R O U T I N E =======================================
object_move:                            # CODE XREF: ROM:00076278↓p
                ld      0x10(g6), g5    # Label from Fighting Vipers source
                ldos    6(g6), r3
loc_71A9C:                              # CODE XREF: object_move+18↓j
                ldos    0x1E(g5), r12
                cmpobl  r3, r12, uk_unused_init_not_hit
                lda     0x1C(g5), g5
                cmpobe  r3, r12, loc_71AB0
                b       loc_71A9C
# ---------------------------------------------------------------------------
loc_71AB0:                              # CODE XREF: object_move+14↑j
                ldob    0x48(g6), r14
                addi    1, r14, r15
                stob    r15, 0x48(g6)
loc_71ABC:                              # CODE XREF: ROM:00071A90↑j
                ldos    0x0(g5), r11
                ld      off_9CD70[r11*4], r15
                bx      (r15)
# ---------------------------------------------------------------------------
uk_unused_init_not_hit:                 # CODE XREF: object_move+C↑j
                ldos    0x0(g5), r11
                ld      uk_unused_inits_off[r11*4], r15
                bx      (r15)
# End of function object_move
# =============== S U B R O U T I N E =======================================
sub_71ADC:                              # DATA XREF: ROM:off_9CD70↓o
                ldt     4(g5), r4
                stt     r4, 0x18(g6)
                ldt     0x10(g5), r8
                cvtri   r8, r8
                cvtri   r9, r9
                cvtri   r10, r10
                stos    r8, 0x24(g6)
                stos    r9, 0x26(g6)
                stos    r10, 0x28(g6)
                ret
# End of function sub_71ADC
# =============== S U B R O U T I N E =======================================
sub_71B04:                              # DATA XREF: ROM:uk_unused_inits_off↓o
                ret
# End of function sub_71B04
# =============== S U B R O U T I N E =======================================
sub_71B08:                              # DATA XREF: ROM:0009CD74↓o
                ldos    0x1E(g5), r12
                ldos    2(g5), r13
                subi    r13, r12, r13
                cvtir   r13, r13
                st      r13, 0x44(g6)
                lda     displacement, r15
                st      r15, 0x40(g6)
                b       uk_unused_init_not_hit
# End of function sub_71B08
# =============== S U B R O U T I N E =======================================
sub_71B2C:                              # DATA XREF: ROM:0009CD88↓o
                ld      0x44(g6), r3
                ld      0x40(g6), g3
                ldt     4(g5), r4
                ldt     0x20(g5), r8
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                lda     0x18803131, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                stt     r4, 0x18(g6)
                lda     0x3F800000, r15
                addr    r15, g3, g3
                st      g3, 0x40(g6)
                ret
# End of function sub_71B2C
# =============== S U B R O U T I N E =======================================
sub_71BB4:                              # DATA XREF: ROM:0009CD78↓o
                ldos    6(g6), r3
                ldos    2(g5), r12
                subo    r12, r3, r3
                cvtir   r3, r15
                st      r15, 0x40(g6)
                b       uk_unused_init_not_hit
# End of function sub_71BB4
# =============== S U B R O U T I N E =======================================
sub_71BCC:                              # DATA XREF: ROM:0009CD8C↓o
                ldob    0x48(g6), r14
                cmpobe  0, r14, loc_71C38
                ldos    -0x1A(g5), r3
                ldos    0x1E(g5), r11
                subi    r3, r11, r3
                shri    5, r3, r3
                cvtir   r3, r3
                ldt     -0x18(g5), g0
                ldt     0x20(g5), r4
                subr    g0, r4, r4
                subr    g1, r5, r5
                subr    g2, r6, r6
                divr    r3, r4, r4
                divr    r3, r5, r5
                divr    r3, r6, r6
                ldt     -0xC(g5), g0
                ldt     0x2C(g5), r8
                subr    g0, r8, r8
                subr    g1, r9, r9
                subr    g2, r10, r10
                divr    r3, r8, r8
                divr    r3, r9, r9
                divr    r3, r10, r10
                b       loc_71C4C
# ---------------------------------------------------------------------------
loc_71C38:                              # CODE XREF: sub_71BCC+4↑j
                lda     displacement, r4
                mov     r4, r5
                mov     r4, r6
                movt    r4, r8
loc_71C4C:                              # CODE XREF: sub_71BCC+68↑j
                stt     r4, 0x4C(g6)
                stt     r8, 0x64(g6)
                ldos    0x1C(g5), r14
                cmpobe  4, r14, loc_71D14
                ldos    0x1C(g5), r14
                cmpobe  3, r14, loc_71CBC
                ldos    2(g5), r3
                ldos    0x3A(g5), r11
                subi    r3, r11, r3
                shri    5, r3, r3
                cvtir   r3, r3
                ldt     4(g5), g0
                ldt     0x3C(g5), r4
                subr    g0, r4, r4
                subr    g1, r5, r5
                subr    g2, r6, r6
                divr    r3, r4, r4
                divr    r3, r5, r5
                divr    r3, r6, r6
                ldt     0x10(g5), g0
                ldt     0x48(g5), r8
                subr    g0, r8, r8
                subr    g1, r9, r9
                subr    g2, r10, r10
                divr    r3, r8, r8
                divr    r3, r9, r9
                divr    r3, r10, r10
                b       loc_71D28
# ---------------------------------------------------------------------------
loc_71CBC:                              # CODE XREF: sub_71BCC+94↑j
                ldos    2(g5), r3
                ldos    0x1E(g5), r11
                subi    r3, r11, r3
                shri    5, r3, r3
                cvtir   r3, r3
                ldt     4(g5), g0
                ldt     0x20(g5), r4
                subr    g0, r4, r4
                subr    g1, r5, r5
                subr    g2, r6, r6
                divr    r3, r4, r4
                divr    r3, r5, r5
                divr    r3, r6, r6
                ldt     0x10(g5), g0
                ldt     0x2C(g5), r8
                subr    g0, r8, r8
                subr    g1, r9, r9
                subr    g2, r10, r10
                divr    r3, r8, r8
                divr    r3, r9, r9
                divr    r3, r10, r10
                b       loc_71D28
# ---------------------------------------------------------------------------
loc_71D14:                              # CODE XREF: sub_71BCC+8C↑j
                lda     displacement, r4
                mov     r4, r5
                mov     r4, r6
                movt    r4, r8
loc_71D28:                              # CODE XREF: sub_71BCC+EC↑j
                stt     r4, 0x58(g6)
                stt     r8, 0x70(g6)
                mov     g5, r11
                mov     g6, r7
                ldos    0x1E(g5), r12
                ldos    2(g5), r4
                subi    r4, r12, r3
                cvtir   r3, r3
                ldos    6(g6), g3
                subo    r4, g3, g3
                cvtir   g3, g3
                ldt     4(g5), g0
                ldt     0x20(g5), r4
                ldt     0x4C(r7), r8
                ldt     0x58(r7), g4
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                ldt     0x18(r7), r8
                stt     r4, 0x18(r7)
                subr    r8, r4, r4
                subr    r9, r5, r5
                subr    r10, r6, r6
                stt     r4, 0x2C(r7)
                ldt     0x10(r11), g0
                ldt     0x2C(r11), r4
                ldt     0x64(r7), r8
                ldt     0x70(r7), g4
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                ld      (g11)[g12*1], r9
                lda     0x19003232, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      g3, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                mov     r7, g6
                lda     0x3F800000, r15
                addr    r15, g3, g3
                st      g3, 0x40(g6)
                cvtri   r8, r8
                cvtri   r9, r9
                cvtri   r10, r10
                stos    r8, 0x24(g6)
                stos    r9, 0x26(g6)
                stos    r10, 0x28(g6)
                ret
# End of function sub_71BCC
# =============== S U B R O U T I N E =======================================
sub_71EAC:                              # DATA XREF: ROM:0009CD7C↓o
                ldt     0x2C(g6), r4
                ldt     0x18(g6), r8
                addr    r4, r8, r8
                addr    r5, r9, r9
                addr    r6, r10, r10
                stt     r8, 0x18(g6)
                ret
# End of function sub_71EAC
# =============== S U B R O U T I N E =======================================
sub_71EC8:                              # DATA XREF: ROM:0009CD80↓o
                ld      0x0(g6), r15
                clrbit  0x1F, r15, r15
                st      r15, 0x0(g6)
                ret
# End of function sub_71EC8
# =============== S U B R O U T I N E =======================================
sub_71ED8:                              # CODE XREF: ROM:loc_7630C↓p
                lda     0xBB03126F, r4
                ldos    0x5004A8, r5
                addo    1, r5, r5
                stos    r5, 0x5004A8
                cvtir   r5, r5
                lda     0x3F000000, r6
                mulr    r6, r4, r7
                mulr    r5, r5, r5
                mulr    r7, r5, r8
                ld      0x5004B4, r4
                addr    r4, r8, r8
                st      r8, 0x5004B4
                st      r8, 0x1C(g6)
                ret
# End of function sub_71ED8
# =============== S U B R O U T I N E =======================================
sub_71F28:                              # CODE XREF: ROM:000762F0↓p
                ldos    6(g6), r4
                lda     0x62A, r5
                lda     0x636, r6
                shlo    6, 0x19, r7
                lda     0x64A, r8
                lda     0x654, r9
                cmpobe  r4, r5, loc_71F58
                cmpobe  r4, r6, loc_71F58
                cmpobe  r4, r7, loc_71F58
                cmpobe  r4, r8, loc_71F58
                cmpobe  r4, r9, loc_71F58
                b       loc_71F64
# ---------------------------------------------------------------------------
loc_71F58:                              # CODE XREF: sub_71F28+18↑j
                mov     0, r3
                stos    r3, 0x5004A8
loc_71F64:                              # CODE XREF: sub_71F28+2C↑j
                cmpobl  r4, r6, loc_71F74
                cmpobl  r4, r7, loc_71F80
                cmpobl  r4, r8, loc_71F74
                b       loc_71F80
# ---------------------------------------------------------------------------
loc_71F74:                              # CODE XREF: sub_71F28:loc_71F64↑j
                lda     0x3BA3D70A, r4
                b       loc_71F88
# ---------------------------------------------------------------------------
loc_71F80:                              # CODE XREF: sub_71F28+40↑j
                lda     0xBBA3D70A, r4
loc_71F88:                              # CODE XREF: sub_71F28+54↑j
                ldos    0x5004A8, r5
                addo    1, r5, r5
                stos    r5, 0x5004A8
                cvtir   r5, r5
                lda     0x3F000000, r6
                mulr    r6, r4, r7
                mulr    r5, r5, r5
                mulr    r7, r5, r8
                ld      0x5004B4, r4
                addr    r4, r8, r8
                st      r8, 0x5004B4
                st      r8, 0x1C(g6)
                ret
# End of function sub_71F28
# =============== S U B R O U T I N E =======================================
sub_71FD0:                              # CODE XREF: ROM:0007627C↓p
                ldos    6(g6), r3
                lda     0x5FA, r4
                lda     0x618, r5
                lda     0x62C, r6
                lda     0x64A, r7
                cmpobl  r3, r4, loc_71FF4
                cmpobl  r3, r5, loc_71FF8
                cmpobl  r3, r6, loc_71FF4
                cmpobl  r3, r7, loc_72014
loc_71FF4:                              # CODE XREF: sub_71FD0+14↑j
                ret
# ---------------------------------------------------------------------------
loc_71FF8:                              # CODE XREF: sub_71FD0+18↑j
                ldos    0x50A020, r3
                shlo    5, 5, r4
                subo    r4, r3, r3
                stos    r3, 0x50A020
                ret
# ---------------------------------------------------------------------------
loc_72014:                              # CODE XREF: sub_71FD0+20↑j
                ldos    0x50A020, r3
                cmpobe  0, r3, loc_71FF4
                shlo    5, 5, r4
                addo    r4, r3, r3
                stos    r3, 0x50A020
                ret
# End of function sub_71FD0
# ---------------------------------------------------------------------------
                lda     0x3F800000, r15 # unreacahble code
                st      r15, 0x18(g6)
                lda     0x3F000000, r15
                st      r15, 0x1C(g6)
                lda     0x40000000, r15
                st      r15, 0x20(g6)
                lda     0x3E19999A, r15
                st      r15, 0x2C(g6)
                lda     0x3DCCCCCD, r15
                st      r15, 0x30(g6)
                lda     0x3E19999A, r15
                st      r15, 0x34(g6)
                b       loc_720C8
# ---------------------------------------------------------------------------
                lda     displacement, r15
                st      r15, 0x18(g6)
                lda     0x3F800000, r15
                st      r15, 0x1C(g6)
                lda     displacement, r15
                st      r15, 0x20(g6)
                lda     0x3E19999A, r15
                st      r15, 0x2C(g6)
                lda     0x3DCCCCCD, r15
                st      r15, 0x30(g6)
                lda     0x3E19999A, r15
                st      r15, 0x34(g6)
loc_720C8:                              # CODE XREF: ROM:0007207C↑j
                xor     r3, r3, r3
                stos    r3, 0x44(g6)
                lda     loc_720DC, r15
                st      r15, 0xC(g6)
loc_720DC:                              # DATA XREF: ROM:000720D0↑o
                ldt     0x18(g6), r4
                ldt     0x2C(g6), r8
                addr    r8, r4, r4
                addr    r9, r5, r5
                addr    r10, r6, r6
                lda     0x40C00000, r7
                notbit  0x1F, r7, r11
                cmpr    r4, r7
                bl      loc_72108
                setbit  0x1F, r8, r8
loc_72108:                              # CODE XREF: ROM:00072100↑j
                cmpr    r4, r11
                bg      loc_72114
                clrbit  0x1F, r8, r8
loc_72114:                              # CODE XREF: ROM:0007210C↑j
                cmpr    r6, r7
                bl      loc_72120
                setbit  0x1F, r10, r10
loc_72120:                              # CODE XREF: ROM:00072118↑j
                cmpr    r6, r11
                bg      loc_7212C
                clrbit  0x1F, r10, r10
loc_7212C:                              # CODE XREF: ROM:00072124↑j
                lda     0x40400000, r7
                lda     displacement, r11
                cmpr    r5, r7
                bl      loc_72148
                setbit  0x1F, r9, r9
loc_72148:                              # CODE XREF: ROM:00072140↑j
                cmpr    r5, r11
                bg      loc_72154
                clrbit  0x1F, r9, r9
loc_72154:                              # CODE XREF: ROM:0007214C↑j
                stt     r4, 0x18(g6)
                stt     r8, 0x2C(g6)
                ret
# ---------------------------------------------------------------------------
draw_sphynx_head:                       # DATA XREF: ROM:0009CDC4↓o
                ldos    0x44(g6), r7
                shlo    0xA, 1, r8
                addo    r7, r8, r7
                stos    r7, 0x44(g6)
                lda     0xC0FB3333, r4
                lda     0x40E00000, r5
                lda     0x42500000, r6
                ld      fa_rob0, r11
                ld      fa_rob1, r15
                ldt     0x1F4(r11), r8
                ldt     0x1F4(r15), r12
                addr    r8, r12, r8
                addr    r9, r13, r9
                addr    r10, r14, r10
                lda     0x3F000000, r11
                mulr    r8, r11, r8
                mulr    r9, r11, r9
                mulr    r10, r11, r10
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                ld      stage_xpos, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                ld      stage_ypos, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                ld      stage_zpos, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x3FCCCCCD, r15
                st      r15, (g11)[g12*1]
                lda     0x3FCCCCCD, r15
                st      r15, (g11)[g12*1]
                lda     0x3FCCCCCD, r15
                st      r15, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], g2
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                subr    g0, r8, r12
                subr    r10, g2, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                mulr    r12, r12, r12
                mulr    r13, r13, r13
                addr    r12, r13, r12
                sqrtr   r12, r12
                subr    r9, g1, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r13
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                ldis    0x50A024, r15
                subi    r15, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                ldis    0x50A020, r15
                subi    r15, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                ldis    0x50A022, r15
                subi    r15, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                ld      stage_xpos, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                ld      stage_ypos, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                ld      stage_zpos, r15
                notbit  0x1F, r15, r15
                st      r15, (g11)[g12*1]
                lda     0x22004444, r15
                st      r15, (g11)[g12*1]
                mov     8, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_723F0
                st      r13, 0x0(r15)
                b       loc_723FC
# ---------------------------------------------------------------------------
loc_723F0:                              # CODE XREF: ROM:000723E4↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_723FC:                              # CODE XREF: ROM:000723EC↑j
                mov     0, g1
                lda     322, g0         # Sonic Sphynx Head
                call    set_obj
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x40C00000, r13
                ld      stage_x, r14
                divr    r13, r14, r3
                shlo    0xE, 1, r4
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501864, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_724D4
                st      r13, 0x0(r15)
                b       loc_724E0
# ---------------------------------------------------------------------------
loc_724D4:                              # CODE XREF: ROM:000724C8↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_724E0:                              # CODE XREF: ROM:000724D0↑j
                mov     0, g1
                lda     1287, g0
                call    set_obj
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                mov     0, g1
                lda     1287, g0
                call    set_obj
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                mov     0, g1
                lda     1287, g0
                call    set_obj
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                mov     0, g1
                lda     1287, g0
                call    set_obj
                lda     0x501864, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x50184C, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_725D0
                st      r13, 0x0(r15)
                b       loc_725DC
# ---------------------------------------------------------------------------
loc_725D0:                              # CODE XREF: ROM:000725C4↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_725DC:                              # CODE XREF: ROM:000725CC↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      floor_stage_size_0, r3
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                mov     0, g1
                lda     3332, g0        # Unknown floor
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x50184C, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                ret
# ---------------------------------------------------------------------------
                ret
# ---------------------------------------------------------------------------
un_flying_carpet_flame_test:            # Puts the burning flame animation in the middle of the stage floor
                ld      frame_counter, r3
                shro    1, r3, r3
                lda     0x3F, r15
                and     r15, r3, r3
                ldos    flying_carpet_cage_flames_anim[r3*2], r4
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ldt     0x18(g6), r8
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x8001010, r15
                st      r15, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501864, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_726FC
                st      r13, 0x0(r15)
                b       loc_72708
# ---------------------------------------------------------------------------
loc_726FC:                              # CODE XREF: ROM:000726F0↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_72708:                              # CODE XREF: ROM:000726F8↑j
                mov     0, g1
                lda     (r4), g0
                call    set_obj
                lda     0x501864, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# ---------------------------------------------------------------------------
flying_carpet_cage_flames_anim:.short 675 # DATA XREF: ROM:00072678↑r
                .short 676
                .short 677
                .short 678
                .short 679
                .short 680
                .short 681
                .short 682
                .short 683
                .short 684
                .short 685
                .short 686
                .short 687
                .short 688
                .short 689
                .short 690
                .short 691
                .short 692
                .short 693
                .short 694
                .short 695
                .short 696
                .short 697
                .short 698
                .short 699
                .short 700
                .short 701
                .short 702
                .short 703
                .short 704
                .short 705
                .short 706
                .short 706
                .short 705
                .short 704
                .short 703
                .short 702
                .short 701
                .short 700
                .short 699
                .short 698
                .short 697
                .short 696
                .short 695
                .short 694
                .short 693
                .short 692
                .short 691
                .short 690
                .short 689
                .short 688
                .short 687
                .short 686
                .short 685
                .short 684
                .short 683
                .short 682
                .short 681
                .short 680
                .short 679
                .short 678
                .short 677
                .short 676
                .short 675
# ---------------------------------------------------------------------------
flying_carpet_init:                     # DATA XREF: ROM:0009CDA8↓o
                mov     0, r15
                stis    r15, 0x26(g6)
                lda     loc_727F4, r15
                st      r15, 0xC(g6)
loc_727F4:                              # DATA XREF: ROM:000727E8↑o
                ld      debug_flag, r15
                bbs     5, r15, loc_72900
                ldos    0x26(g6), r3
                lda     0x42700000, r11
                lda     0x12802525, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0x12002424, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                shlo    2, r3, r9
                lda     0x40800000, r10
                lda     0x12002424, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                lda     0x40800000, r13
                addr    r13, r5, r5
                ldt     0x18(g6), r8
                stt     r4, 0x18(g6)
                addo    0x1F, 1, r13
                addi    r13, r3, r3
                stos    r3, 0x26(g6)
                lda     loc_1271C, r14
                subi    r3, r14, r3
                stos    r3, VECTER_Y
                subr    r8, r4, r8
                subr    r9, r5, r9
                subr    r10, r6, r10
                stt     r8, 0x2C(g6)
                lda     0x17002E2E, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                divr    r11, r9, r3
                lda     0x13002626, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ldis    (g11)[g12*1], r3
                stos    r3, 0x24(g6)
                ldt     0x18(g6), r4
                stt     r4, stage_xpos
                ldis    0x24(g6), r15
                stis    r15, 0x50A020
                ldis    0x26(g6), r15
                stis    r15, 0x50A022
loc_72900:                              # CODE XREF: ROM:000727FC↑j
                ret
# ---------------------------------------------------------------------------
flying_carpet_disp:                     # DATA XREF: ROM:0009CDAC↓o
                ret
# ---------------------------------------------------------------------------
un_flying_carpet_disp_1:
                ldt     0x18(g6), r4
                stt     r4, stage_xpos
                ret
# ---------------------------------------------------------------------------
un_flying_carpet_disp_2:
                ldis    0x24(g6), r15
                stis    r15, 0x50A020
                ldis    0x26(g6), r15
                stis    r15, 0x50A022
                ldis    0x28(g6), r15
                stis    r15, 0x50A024
                ret
# ---------------------------------------------------------------------------
un_flying_carpet_disp_3:
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_72988
                st      r13, 0x0(r15)
                b       loc_72994
# ---------------------------------------------------------------------------
loc_72988:                              # CODE XREF: ROM:0007297C↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_72994:                              # CODE XREF: ROM:00072984↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x22004444, r15
                st      r15, (g11)[g12*1]
                mov     8, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     2380, g0        # Oasis edge
                call    set_obj
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# ---------------------------------------------------------------------------
boss_init:                              # DATA XREF: ROM:0009CE14↓o
                mov     0, r15          # Label from official source
                stis    r15, 0x40(g6)
                lda     boss_cont, r15
                st      r15, 0xC(g6)
boss_cont:                              # DATA XREF: ROM:00072A14↑o
                ldos    0x40(g6), r3    # Label from official source
                addo    1, r3, r3
                stos    r3, 0x40(g6)
                lda     death_egg_eye_floor_movement_pattern, g0
                mov     0, g1
                ld      frame_counter, r3
                shro    3, r3, g2
                shlo    5, g2, g2
                lda     0x7FF, r13
                and     r13, g2, g2
                lda     displacement, g3
                call    move_tpd_req
                st      g0, 0x44(g6)
                ret
# ---------------------------------------------------------------------------
boss_disp:                              # DATA XREF: ROM:0009CE18↓o
                ld      0x2008(g10), r15 # Label from official source
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_72AAC
                st      r13, 0x0(r15)
                b       loc_72AB8
# ---------------------------------------------------------------------------
loc_72AAC:                              # CODE XREF: ROM:00072AA0↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_72AB8:                              # CODE XREF: ROM:00072AA8↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                ldis    0x28(g13), r15
                subi    r15, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                ldis    0x24(g13), r15
                subi    r15, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                ldis    0x26(g13), r15
                subi    r15, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     0xC5B3B000, r15
                st      r15, (g11)[g12*1]
                lda     0xC5476000, r15
                st      r15, (g11)[g12*1]
                lda     0x47241000, r15
                st      r15, (g11)[g12*1]
                lda     0x8001010, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x447A0000, r15
                st      r15, (g11)[g12*1]
                lda     0x447A0000, r15
                st      r15, (g11)[g12*1]
                lda     0x447A0000, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     1124, g0        # Aurora Icefield
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x50184C, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_72C20
                st      r13, 0x0(r15)
                b       loc_72C2C
# ---------------------------------------------------------------------------
loc_72C20:                              # CODE XREF: ROM:00072C14↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_72C2C:                              # CODE XREF: ROM:00072C1C↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x40C00000, r13
                ld      stage_x, r14
                divr    r13, r14, r3
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x3FCCCCCD, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      0x44(g6), r11
                lda     (r11), g2
                mov     0, g1
                lda     1165, g0        # Death Egg Eye Floor Texture
                call    set_obj_tpd
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x50184C, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                ldos    0x40(g6), r3
                balx    sub_72FA8, g14
                mov     r4, r8
                addo    0xA, r3, r3
                balx    sub_72FA8, g14
                mov     r4, r7
                addo    0xA, r3, r3
                balx    sub_72FA8, g14
                mov     r4, r6
                addo    0xA, r3, r3
                balx    sub_72FA8, g14
                mov     r4, r5
                addo    0xA, r3, r3
                balx    sub_72FA8, g14
                shlo    4, r4, r4
                shlo    4, r5, r5
                shlo    4, r6, r6
                shlo    4, r7, r7
                shlo    4, r8, r8
                lda     0x40C00000, r13
                ld      stage_x, r14
                divr    r13, r14, r3
                ldob    0x500288, r9
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x50184C, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_72D8C
                st      r13, 0x0(r15)
                b       loc_72D98
# ---------------------------------------------------------------------------
loc_72D8C:                              # CODE XREF: ROM:00072D80↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_72D98:                              # CODE XREF: ROM:00072D88↑j
                mov     0xB, r10
                cmpobe  r10, r9, loc_72E08
                mov     3, r10
                cmpobe  r10, r9, loc_72E08
                mov     9, r10
                cmpobe  r10, r9, loc_72E08
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                mov     0, g1
                lda     1171, g0
                call    set_obj
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                mov     0, g1
                lda     1205, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_72E08:                              # CODE XREF: ROM:00072D9C↑j
                mov     9, r10
                cmpobe  r10, r9, loc_72E5C
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                mov     0, g1
                lda     1206, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_72E5C:                              # CODE XREF: ROM:00072E0C↑j
                mov     0xD, r10
                cmpobe  r10, r9, loc_72EB0
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                mov     0, g1
                lda     1170, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_72EB0:                              # CODE XREF: ROM:00072E60↑j
                mov     6, r10
                cmpobe  r10, r9, loc_72F04
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                mov     0, g1
                lda     1209, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_72F04:                              # CODE XREF: ROM:00072EB4↑j
                mov     7, r10
                cmpobe  r10, r9, loc_72F68
                mov     6, r10
                cmpobe  r10, r9, loc_72F68
                mov     3, r10
                cmpobe  r10, r9, loc_72F68
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                mov     0, g1
                lda     1210, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_72F68:                              # CODE XREF: ROM:00072F08↑j
                lda     0x50184C, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                ret
# =============== S U B R O U T I N E =======================================
sub_72FA8:                              # CODE XREF: ROM:00072CCC↑p
                lda     0x3F, r14
                bbs     6, r3, loc_72FB8
                and     r3, r14, r4
                bx      (g14)
# ---------------------------------------------------------------------------
loc_72FB8:                              # CODE XREF: sub_72FA8+4↑j
                and     r3, r14, r15
                subo    r15, r14, r4
                bx      (g14)
# End of function sub_72FA8
# ---------------------------------------------------------------------------
death_egg_eye_floor_movement_pattern:.long 0x18000C0
                .long 0x800002C
                .long 0x6B00014
                .long 0x6B000EB
                .long 0x80000FE
                .long 0x6B000EB
                .long 0x6B00014
                .long 0x55A0005
                .long 0x55A00DF
                .long 0x55A00DF
                .long 0x55A0005
                .long 0x4000000
                .long 0x40000DC
                .long 0x40000DC
                .long 0x4000000
                .long 0x2A60005
                .long 0x2A600DF
                .long 0x2A600DF
                .long 0x2A60005
                .long 0x1500014
                .long 0x15000EB
                .long 0x15000EB
                .long 0x1500014
                .long 0x2C
                .long 0xFE
                .long 0x15000EB
                .long 0xFE
                .long 0x1EE
                .long 0x15001E1
                .long 0x15000EB
                .long 0x15001E1
                .long 0x2A601D9
                .long 0x2A600DF
                .long 0x2A600DF
                .long 0x2A601D9
                .long 0x40001D6
                .long 0x40000DC
                .long 0x40000DC
                .long 0x40001D6
                .long 0x55A01D9
                .long 0x55A00DF
                .long 0x55A00DF
                .long 0x55A01D9
                .long 0x6B001E1
                .long 0x6B000EB
                .long 0x6B000EB
                .long 0x6B001E1
                .long 0x80001EE
                .long 0x80000FE
                .long 0x80001EE
                .long 0x6B001E1
                .long 0x6B002EB
                .long 0x80002F2
                .long 0x6B002EB
                .long 0x6B001E1
                .long 0x55A01D9
                .long 0x55A02E7
                .long 0x55A02E7
                .long 0x55A01D9
                .long 0x40001D6
                .long 0x40002E6
                .long 0x40002E6
                .long 0x40001D6
                .long 0x2A601D9
                .long 0x2A602E7
                .long 0x2A602E7
                .long 0x2A601D9
                .long 0x15001E1
                .long 0x15002EB
                .long 0x15002EB
                .long 0x15001E1
                .long 0x1EE
                .long 0x2F2
                .long 0x15002EB
                .long 0x2F2
                .long 0x400
                .long 0x1500400
                .long 0x15002EB
                .long 0x1500400
                .long 0x2A60400
                .long 0x2A602E7
                .long 0x2A602E7
                .long 0x2A60400
                .long 0x4000400
                .long 0x40002E6
                .long 0x40002E6
                .long 0x4000400
                .long 0x55A0400
                .long 0x55A02E7
                .long 0x55A02E7
                .long 0x55A0400
                .long 0x6B00400
                .long 0x6B002EB
                .long 0x6B002EB
                .long 0x6B00400
                .long 0x8000400
                .long 0x80002F2
                .long 0x8000400
                .long 0x6B00400
                .long 0x6B00515
                .long 0x800050E
                .long 0x6B00515
                .long 0x6B00400
                .long 0x55A0400
                .long 0x55A0519
                .long 0x55A0519
                .long 0x55A0400
                .long 0x4000400
                .long 0x400051B
                .long 0x400051B
                .long 0x4000400
                .long 0x2A60400
                .long 0x2A60519
                .long 0x2A60519
                .long 0x2A60400
                .long 0x1500400
                .long 0x1500515
                .long 0x1500515
                .long 0x1500400
                .long 0x400
                .long 0x50E
                .long 0x1500515
                .long 0x50E
                .long 0x612
                .long 0x1500620
                .long 0x1500515
                .long 0x1500620
                .long 0x2A60628
                .long 0x2A60519
                .long 0x2A60519
                .long 0x2A60628
                .long 0x400062A
                .long 0x400051B
                .long 0x400051B
                .long 0x400062A
                .long 0x55A0628
                .long 0x55A0519
                .long 0x55A0519
                .long 0x55A0628
                .long 0x6B00620
                .long 0x6B00515
                .long 0x6B00515
                .long 0x6B00620
                .long 0x8000612
                .long 0x800050E
                .long 0x8000612
                .long 0x6B00620
                .long 0x6B00715
                .long 0x8000702
                .long 0x8000702
                .long 0x6B00715
                .long 0x6B007EC
                .long 0x80007D4
                .long 0x6B007EC
                .long 0x6B00715
                .long 0x55A0721
                .long 0x55A07FB
                .long 0x55A0721
                .long 0x6B00715
                .long 0x6B00620
                .long 0x55A0628
                .long 0x55A0721
                .long 0x55A0628
                .long 0x400062A
                .long 0x4000725
                .long 0x55A0721
                .long 0x4000725
                .long 0x4000800
                .long 0x55A07FB
                .long 0x4000800
                .long 0x4000725
                .long 0x2A60721
                .long 0x2A607FB
                .long 0x2A60721
                .long 0x4000725
                .long 0x400062A
                .long 0x2A60628
                .long 0x2A60721
                .long 0x2A60628
                .long 0x1500620
                .long 0x1500715
                .long 0x1500715
                .long 0x1500620
                .long 0x612
                .long 0x702
                .long 0x1500715
                .long 0x702
                .long 0x7D4
                .long 0x15007EC
                .long 0x1500715
                .long 0x15007EC
                .long 0x2A607FB
                .long 0x2A60721
                .long 0
                .long 0
                .long 0
                .long 0
# =============== S U B R O U T I N E =======================================
bossm_init:                             # CODE XREF: STAGE_UP_INT+30↑p
                lda     0x1000000, g9   # Label from official source
                addo    0x1F, 0x1F, g0
                addo    0x1F, 0x11, g1
                call    clr_pattern_s
                lda     172, g0
                call    _Scroll_Initialize
                mov     0, r15
                stis    r15, 0x100A000
                mov     0, r15
                stis    r15, 0x100A008
                mov     0, r15
                stis    r15, scrB_H_page
                mov     0, r15
                stis    r15, scrB_V_page
                mov     0, r15
                stis    r15, 0x50049C
                mov     0, r15
                stis    r15, 0x50049E
                mov     0, r15
                stis    r15, 0x5004A0
                mov     0, r15
                st      r15, 0x500498
                mov     0, r15
                st      r15, 0x5004A4
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                mov     0, r15
                stis    r15, 0x26(g7)
                shlo    0xE, 1, r15
                stis    r15, 0x26(g8)
                lda     boss_countodwn_30, r3 # 4 bytes: Flag1, Flag2, Digit1, Digit2
                st      r3, 0x500524
                ld      fa_camera, r3
                lda     cam_mode11, r15
                stib    r15, 0x40(r3)
                ldob    gameprogram, r4 # bit 0 clear = Player 1
                bbc     0, r4, bossm_init_cam_1p_put
                lda     flt_9E684, r15
                st      r15, 0x210(r3)
                b       bossm_init_cam_put_ex
# ---------------------------------------------------------------------------
bossm_init_cam_1p_put:                  # CODE XREF: bossm_init+D4↑j
                lda     flt_9E444, r15  # Label from official source
                st      r15, 0x210(r3)
bossm_init_cam_put_ex:                  # CODE XREF: bossm_init+E4↑j
                ldob    gameprogram, r4 # Label from official source
                bbs     0, r4, bossm_mot_2p_set
                lda     dword_9DF28, r4
                lda     dword_9E1B0, r5
                b       bossm_mot_tbl_set
# ---------------------------------------------------------------------------
bossm_mot_2p_set:                       # CODE XREF: bossm_init+FC↑j
                lda     dword_9E018, r4 # Label from official source
                lda     dword_9E108, r5
bossm_mot_tbl_set:                      # CODE XREF: bossm_init+110↑j
                st      r4, 0x5004FC # Label from official source
                st      r5, 0x500500
                ldob    gameprogram, r4 # bit 0 clear = Player 1
                bbc     0, r4, loc_73428
bossm_init_rob0_del:                    # Label from official source
                ld      0x0(r3), r15
                clrbit  1, r15, r15
                st      r15, 0x0(r3)
                b       bossm_cont
# ---------------------------------------------------------------------------
loc_73428:                              # CODE XREF: bossm_init+13C↑j
                ld      0x0(r3), r15
                clrbit  2, r15, r15
                st      r15, 0x0(r3)
bossm_cont:                             # CODE XREF: sub_26830↑p
                ldos    0x50049C, r3 # Label from official source
                shlo    7, 7, r4
                cmpobne r3, r4, loc_73468
                ld      0x500498, r15
                setbit  0x1F, r15, r15
                st      r15, 0x500498
                lda     0xAE1413, g0    # sd_computer_3_off
                call    check_same_sound
                call    sound_request_u
loc_73468:                              # CODE XREF: bossm_init+168↑j
                ld      0x500498, r15
                bbs     0x1F, r15, loc_735B4
                ld      debug_flag, r15
                bbs     5, r15, loc_7348C
                addo    1, r3, r3
                stos    r3, 0x50049C
loc_7348C:                              # CODE XREF: bossm_init+1A4↑j
                shlo    6, 1, r4
                cmpobne r3, r4, loc_734DC
                lda     0xAE116E, g0    # sd_computer_3
                call    check_same_sound
                call    sound_request_u
                ld      add_BACKUP_RAM_TO_RAM, r4
                ldob    0x3352(r4), r4
                cmpobe  0, r4, loc_734CC
                lda     0x1000188, g9
                lda     501, g0         # Death Egg II will explode EN
                call    dsp_pattern_new
                b       loc_734DC
# ---------------------------------------------------------------------------
loc_734CC:                              # CODE XREF: bossm_init+1DC↑j
                lda     0x1004288, g9
                lda     502, g0         # Death Egg II will explode JP
                call    dsp_pattern_new
loc_734DC:                              # CODE XREF: bossm_init+1B8↑j
                ld      0x500524, r4
                ldos    0x0(r4), r3
                ldos    0x50049C, r5
                cmpobne r3, r5, loc_73540
                lda     515, g0         # Large red countdown numbers
                mov     4, g3
                ldob    2(r4), g4
                lda     0x1000352, g9
                call    dsp_character
                lda     515, g0         # Large red countdown numbers
                mov     4, g3
                ldob    3(r4), g4
                lda     0x100035A, g9
                call    dsp_character
                lda     0xAE1155, g0    # sd_pinball_c
                call    check_same_sound
                call    sound_request_u
                lda     4(r4), r4
                st      r4, 0x500524
loc_73540:                              # CODE XREF: bossm_init+218↑j
                ldob    gameprogram, r4 # bit 0 clear = Player 1
                bbs     0, r4, loc_73568
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                call    bossm_player_cont
                call    bossm_enemy_cont
                b       loc_73580
# ---------------------------------------------------------------------------
loc_73568:                              # CODE XREF: bossm_init+270↑j
                ld      fa_rob0, g8
                ld      fa_rob1, g7
                call    bossm_player_cont
                call    bossm_enemy_cont
loc_73580:                              # CODE XREF: bossm_init+28C↑j
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                lda     displacement, r3
                st      r3, 0x644(g7)
                st      r3, 0x64C(g7)
                st      r3, 0x644(g8)
                st      r3, 0x64C(g8)
                ld      0x500498, r15
                bbc     0x1F, r15, loc_735E8
loc_735B4:                              # CODE XREF: bossm_init+198↑j
                ld      fa_camera, r3
                ldob    gameprogram, r4 # bit 0 clear = Player 1
                bbc     0, r4, loc_735D8
                ld      0x0(r3), r15
                setbit  1, r15, r15
                st      r15, 0x0(r3)
                b       loc_735E8
# ---------------------------------------------------------------------------
loc_735D8:                              # CODE XREF: bossm_init+2EC↑j
                ld      0x0(r3), r15
                setbit  2, r15, r15
                st      r15, 0x0(r3)
                b       loc_735E8
# ---------------------------------------------------------------------------
loc_735E8:                              # CODE XREF: bossm_init+2D8↑j
                ret
# End of function bossm_init
# =============== S U B R O U T I N E =======================================
bossm_player_cont:                      # CODE XREF: bossm_init+284↑p
                ld      0x5004FC, r3 # Label from official source
                ldos    0x12(r3), r4
                ldos    0x50049C, r5
                cmpobne r4, r5, loc_736B4
                ldt     4(r3), r4
                stt     r4, 0x18(g7)
                ldos    0x10(r3), r7
                stos    r7, 0x26(g7)
                ld      0x0(r3), r7
                lda     481, r4         # EMERALDS_K mot (Throwing up the chaos emeralds)
                cmpobe  r4, r7, loc_7363C
                lda     278, r4         # Sonic's Idle Animation (mot/motion)
                cmpobne r4, r7, loc_7365C
                ldob    0x1B0(g7), r4
                lda     idle_motions, r5
                ldos    (r5)[r4*2], r7
                b       loc_7365C
# ---------------------------------------------------------------------------
loc_7363C:                              # CODE XREF: bossm_player_cont+30↑j
                ldob    0x1B0(g7), r4
                lda     word_9E258, r5
                ldos    (r5)[r4*4], r7
                ldos    2(r5)[r4*4], r4
                stos    r4, 0x500520
loc_7365C:                              # CODE XREF: bossm_player_cont+38↑j
                st      r7, 0x198(g7)   # P1_PARTS+0x198
                ldob    0x14(r3), r4
                cmpobe  0, r4, loc_73678
                ld      0x0(g7), r15
                setbit  0x17, r15, r15
                st      r15, 0x0(g7)
                b       loc_73684
# ---------------------------------------------------------------------------
loc_73678:                              # CODE XREF: bossm_player_cont+78↑j
                ld      0x0(g7), r15
                clrbit  0x17, r15, r15
                st      r15, 0x0(g7)
loc_73684:                              # CODE XREF: bossm_player_cont+88↑j
                ldob    0x15(r3), r4
                cmpobe  0, r4, loc_7369C
                ld      0x0(g7), r15
                setbit  0x14, r15, r15
                st      r15, 0x0(g7)
                b       loc_736A8
# ---------------------------------------------------------------------------
loc_7369C:                              # CODE XREF: bossm_player_cont+9C↑j
                ld      0x0(g7), r15
                clrbit  0x14, r15, r15
                st      r15, 0x0(g7)
loc_736A8:                              # CODE XREF: bossm_player_cont+AC↑j
                lda     0x18(r3), r3
                st      r3, 0x5004FC
loc_736B4:                              # CODE XREF: bossm_player_cont+14↑j
                ret
# End of function bossm_player_cont
# =============== S U B R O U T I N E =======================================
bossm_enemy_cont:                       # CODE XREF: bossm_init+288↑p
                ld      0x500500, r3 # Label from official source
                ldos    0x12(r3), r4
                ldos    0x50049C, r5
                cmpobne r4, r5, loc_7373C
                ldt     4(r3), r4
                stt     r4, 0x18(g8)
                ldos    0x10(r3), r7
                stos    r7, 0x26(g8)
                ld      0x0(r3), r7
                st      r7, 0x198(g8)
                ldob    0x14(r3), r4
                cmpobe  0, r4, loc_73700
                ld      0x0(g7), r15
                setbit  0x17, r15, r15
                st      r15, 0x0(g7)
                b       loc_7370C
# ---------------------------------------------------------------------------
loc_73700:                              # CODE XREF: bossm_enemy_cont+34↑j
                ld      0x0(g7), r15
                clrbit  0x17, r15, r15
                st      r15, 0x0(g7)
loc_7370C:                              # CODE XREF: bossm_enemy_cont+44↑j
                ldob    0x15(r3), r4
                cmpobe  0, r4, loc_73724
                ld      0x0(g7), r15
                setbit  0x14, r15, r15
                st      r15, 0x0(g7)
                b       loc_73730
# ---------------------------------------------------------------------------
loc_73724:                              # CODE XREF: bossm_enemy_cont+58↑j
                ld      0x0(g7), r15
                clrbit  0x14, r15, r15
                st      r15, 0x0(g7)
loc_73730:                              # CODE XREF: bossm_enemy_cont+68↑j
                lda     0x18(r3), r3
                st      r3, 0x500500
loc_7373C:                              # CODE XREF: bossm_enemy_cont+14↑j
                ret
# End of function bossm_enemy_cont
# =============== S U B R O U T I N E =======================================
bossm_disp:                             # CODE XREF: sub_26830+4↑p
                ld      0x500498, r4 # Label from official source
                bbs     0x1F, r4, loc_73E40
                bbs     0xD, r4, loc_73E40
                bbs     4, r4, bmd_etarth_no_disp
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_7379C
                st      r13, 0x0(r15)
                b       loc_737A8
# ---------------------------------------------------------------------------
loc_7379C:                              # CODE XREF: bossm_disp+50↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_737A8:                              # CODE XREF: bossm_disp+58↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                ldis    0x28(g13), r15
                subi    r15, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                ldis    0x24(g13), r15
                subi    r15, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                ldis    0x26(g13), r15
                subi    r15, 0, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     0xC5B3B000, r15
                st      r15, (g11)[g12*1]
                lda     0xC5476000, r15
                st      r15, (g11)[g12*1]
                lda     0x47241000, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x447A0000, r15
                st      r15, (g11)[g12*1]
                lda     0x447A0000, r15
                st      r15, (g11)[g12*1]
                lda     0x447A0000, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     1124, g0        # Earth in the background of the Death Egg II
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
bmd_etarth_no_disp:                     # CODE XREF: bossm_disp+10↑j
                ld      0x500498, r4 # Label from official source
                bbc     0, r4, loc_73954
                bbs     0xB, r4, loc_739D8
                ldos    0x5004A0, r8
                mov     6, r3
                cmpobl  r3, r8, loc_739B8
                mov     3, g0
                call    set_mmode
                ld      debug_flag, r15
                bbs     5, r15, loc_73900
                mov     1, r3
                addo    r3, r8, r3
                stos    r3, 0x5004A0
loc_73900:                              # CODE XREF: bossm_disp+1AC↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ldl     0x9E40C[r8*8], r4
                lda     0x40C00000, r13
                ld      stage_x, r14
                divr    r13, r14, r3
                mulr    r3, r4, r4
                mulr    r3, r5, r5
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                lda     0x3FCCCCCD, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                b       loc_73994
# ---------------------------------------------------------------------------
loc_73954:                              # CODE XREF: bossm_disp+184↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x40C00000, r13
                ld      stage_x, r14
                divr    r13, r14, r3
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x3FCCCCCD, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
loc_73994:                              # CODE XREF: bossm_disp+210↑j
                mov     0, g1
                lda     1165, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                mov     1, g0
                call    set_mmode
                b       loc_739D8
# ---------------------------------------------------------------------------
loc_739B8:                              # CODE XREF: bossm_disp+198↑j
                mov     0, r8
                stos    r8, 0x5004A0
                ld      0x500498, r15
                setbit  0xB, r15, r15
                st      r15, 0x500498
loc_739D8:                              # CODE XREF: bossm_disp+188↑j
                ld      0x500498, r4
                bbs     0xD, r4, loc_73A38
                bbc     0xC, r4, loc_73A44
                ldos    0x50049E, r4
                mov     0x1E, r3
                cmpobl  r3, r4, loc_73AD4
                lda     0xB801717, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                lda     0x3DCCCCCD, r5
                mulr    r3, r5, r5
                ld      debug_flag, r15
                bbs     5, r15, loc_73A4C
                mov     1, r3
                addo    r3, r4, r4
                stos    r4, 0x50049E
                b       loc_73A4C
# ---------------------------------------------------------------------------
loc_73A38:                              # CODE XREF: bossm_disp+2A0↑j
                lda     0x40400000, r5
                b       loc_73A4C
# ---------------------------------------------------------------------------
loc_73A44:                              # CODE XREF: bossm_disp+2A4↑j
                lda     displacement, r5
loc_73A4C:                              # CODE XREF: bossm_disp+2E0↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                lda     0x40C00000, r13
                ld      stage_x, r14
                divr    r13, r14, r3
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x3FCCCCCD, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0xD2E, r11
                mov     0, g1
                lda     (r11), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                b       loc_73AF4
# ---------------------------------------------------------------------------
loc_73AD4:                              # CODE XREF: bossm_disp+2B4↑j
                mov     0, r4
                stos    r4, 0x50049E
                ld      0x500498, r15
                setbit  0xD, r15, r15
                st      r15, 0x500498
loc_73AF4:                              # CODE XREF: bossm_disp+390↑j
                mov     0, r5
                mov     0, r8
                ldos    0x50049C, r4
                lda     0xAC, r3
                cmpobge r3, r4, loc_73B58
                ld      0x500498, r4
                bbs     0, r4, loc_73E40
                ldos    0x50049E, r4
                addo    0x1F, 1, r3
                cmpoble r3, r4, loc_73DD8
                shlo    8, 1, r3
                mulo    r3, r4, r5
                mov     0, r3
                addo    r5, r3, r8
                subo    r5, r3, r5
                ld      debug_flag, r15
                bbs     5, r15, loc_73B58
                mov     1, r3
                addo    r3, r4, r4
                stos    r4, 0x50049E
loc_73B58:                              # CODE XREF: bossm_disp+3C8↑j
                lda     0x40C00000, r13
                ld      stage_x, r14
                divr    r13, r14, r3
                ldob    0x500288, r9
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x50184C, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_73BBC
                st      r13, 0x0(r15)
                b       loc_73BC8
# ---------------------------------------------------------------------------
loc_73BBC:                              # CODE XREF: bossm_disp+470↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_73BC8:                              # CODE XREF: bossm_disp+478↑j
                mov     0xB, r10
                cmpobe  r10, r9, loc_73C38
                mov     3, r10
                cmpobe  r10, r9, loc_73C38
                mov     9, r10
                cmpobe  r10, r9, loc_73C38
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                mov     0, g1
                lda     0x493, g0
                call    set_obj
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                mov     0, g1
                lda     0x4B5, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_73C38:                              # CODE XREF: bossm_disp+48C↑j
                mov     9, r10
                cmpobe  r10, r9, loc_73C8C
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                mov     0, g1
                lda     0x4B6, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_73C8C:                              # CODE XREF: bossm_disp+4FC↑j
                mov     0xD, r10
                cmpobe  r10, r9, loc_73CE0
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                mov     0, g1
                lda     0x492, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_73CE0:                              # CODE XREF: bossm_disp+550↑j
                mov     6, r10
                cmpobe  r10, r9, loc_73D34
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                mov     0, g1
                lda     0x4B9, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_73D34:                              # CODE XREF: bossm_disp+5A4↑j
                mov     7, r10
                cmpobe  r10, r9, loc_73D98
                mov     6, r10
                cmpobe  r10, r9, loc_73D98
                mov     3, r10
                cmpobe  r10, r9, loc_73D98
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                mov     0, g1
                lda     0x4BA, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_73D98:                              # CODE XREF: bossm_disp+5F8↑j
                lda     0x50184C, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                b       loc_73E40
# ---------------------------------------------------------------------------
loc_73DD8:                              # CODE XREF: bossm_disp+3E4↑j
                mov     0, r15
                stis    r15, 0x50049E
                ld      0x500498, r15
                setbit  0, r15, r15
                st      r15, 0x500498
                ld      0x500498, r15
                setbit  1, r15, r15
                st      r15, 0x500498
                ld      0x500498, r15
                setbit  3, r15, r15
                st      r15, 0x500498
                lda     0xAE1341, g0    # sd_ele_1
                call    check_same_sound
                call    sound_request_u
                lda     0xAE1343, g0    # sd_ele_3
                call    check_same_sound
                call    sound_request_u
loc_73E40:                              # CODE XREF: bossm_disp+8↑j
                ret
# End of function bossm_disp
# =============== S U B R O U T I N E =======================================
pinball_init:                           # DATA XREF: ROM:0009CDDC↓o
                lda     displacement, r4 # Label from official source
                lda     0x41A8F5C3, r5
                lda     0x42C3851F, r6
                mov     0, r7
                stt     r4, 0x40(g6)[r7*4]
                addo    3, r7, r7
                lda     0x4119999A, r4
                stt     r4, 0x40(g6)[r7*4]
                addo    3, r7, r7
                lda     0xC119999A, r4
                stt     r4, 0x40(g6)[r7*4]
                mov     0, r4
                mov     0, r5
                stos    r4, 0x64(g6)[r5*2]
                shlo    0xD, 3, r4
                addo    1, r5, r5
                stos    r4, 0x64(g6)[r5*2]
                shlo    0xC, 0xB, r4
                addo    1, r5, r5
                stos    r4, 0x64(g6)[r5*2]
                mov     0, r15
                stis    r15, 6(g6)
                lda     loc_73ED4, r15
                st      r15, 0xC(g6)
loc_73ED4:                              # DATA XREF: pinball_init+84↑o
                mov     0, r3
                ldos    0x64(g6)[r3*2], r4
                shlo    0xA, 1, r5
                addo    r4, r5, r4
                stos    r4, 0x64(g6)[r3*2]
                addo    1, r3, r3
                ldos    0x64(g6)[r3*2], r4
                addo    r4, r5, r4
                stos    r4, 0x64(g6)[r3*2]
                addo    1, r3, r3
                ldos    0x64(g6)[r3*2], r4
                addo    r4, r5, r4
                stos    r4, 0x64(g6)[r3*2]
                ldos    6(g6), r3
                addo    1, r3, r3
                stos    r3, 6(g6)
                ret
# End of function pinball_init
# =============== S U B R O U T I N E =======================================
pinball_disp:                           # DATA XREF: ROM:0009CDE0↓o
                ldos    6(g6), r3
                mov     0x10, r7
                mulo    r3, r7, r7
                xor     r4, r4, r4
                lda     0x41A00000, r5
                lda     0xC2200000, r6
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_73FCC
                st      r13, 0x0(r15)
                b       loc_73FD8
# ---------------------------------------------------------------------------
loc_73FCC:                              # CODE XREF: pinball_disp+90↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_73FD8:                              # CODE XREF: pinball_disp+98↑j
                mov     0, g1
                lda     2670, g0        # Casino Night Blimp
                call    set_obj
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x42CF3333, r4
                lda     0x41CE6666, r5
                lda     0x41B33333, r6
                shlo    8, 1, r7
                mulo    r3, r7, r7
                shlo    0xC, 0xD, r8
                lda     0x3FCCCCCD, r9
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_740FC
                st      r13, 0x0(r15)
                b       loc_74108
# ---------------------------------------------------------------------------
loc_740FC:                              # CODE XREF: pinball_disp+1C0↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_74108:                              # CODE XREF: pinball_disp+1C8↑j
                mov     0, g1
                lda     2671, g0        # Casino Night Routlette Wheel
                call    set_obj
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                shro    1, r3, r4
                mov     31, r5          # 32 (zero indexed) object count for sky animation
                and     r4, r5, r4
                ld      floating_cards_objects[r4*4], r4 # Casino Night cards that float in the sky
                lda     0x3FCCCCCD, r5
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_741E4
                st      r13, 0x0(r15)
                b       loc_741F0
# ---------------------------------------------------------------------------
loc_741E4:                              # CODE XREF: pinball_disp+2A8↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_741F0:                              # CODE XREF: pinball_disp+2B0↑j
                mov     0, g1
                lda     (r4), g0
                call    set_obj
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_7428C
                st      r13, 0x0(r15)
                b       loc_74298
# ---------------------------------------------------------------------------
loc_7428C:                              # CODE XREF: pinball_disp+350↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_74298:                              # CODE XREF: pinball_disp+358↑j
                mov     0, r3
                mov     0, r7
                lda     0x3FCCCCCD, r9
                ldt     0x40(g6)[r3*4], r4
                ldos    0x64(g6)[r7*2], r8
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                mov     0, g1
                lda     177, g0         # Slot Machine Wheel
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                addo    3, r3, r3
                addo    1, r7, r7
                ldt     0x40(g6)[r3*4], r4
                ldos    0x64(g6)[r7*2], r8
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                mov     0, g1
                lda     177, g0         # Slot Machine Wheel
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                addo    3, r3, r3
                addo    1, r7, r7
                ldt     0x40(g6)[r3*4], r4
                ldos    0x64(g6)[r7*2], r8
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                mov     0, g1
                lda     177, g0         # Slot Machine Wheel
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x3FCCCCCD, r15
                st      r15, (g11)[g12*1]
                lda     0x3FCCCCCD, r15
                st      r15, (g11)[g12*1]
                lda     0x3FCCCCCD, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     0x41A00000, r15
                st      r15, (g11)[g12*1]
                lda     0x40E00000, r15
                st      r15, (g11)[g12*1]
                lda     0x42400000, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     328, g0         # Slot Machine Lever
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      floor_stage_size_0, r3
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                mov     0, g1
                lda     1712, g0        # Alt Casino Night Floor
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                ret
# End of function pinball_disp
# ---------------------------------------------------------------------------
floating_cards_objects:.long 2750       # DATA XREF: pinball_disp+238↑r
                .long 2751
                .long 2752
                .long 2753
                .long 2754
                .long 2755
                .long 2756
                .long 2757
                .long 2758
                .long 2759
                .long 2760
                .long 2761
                .long 2762
                .long 2763
                .long 2764
                .long 2765
                .long 2766
                .long 2767
                .long 2768
                .long 2769
                .long 2770
                .long 2771
                .long 2772
                .long 2773
                .long 2774
                .long 2775
                .long 2776
                .long 2777
                .long 2778
                .long 2779
                .long 2780
                .long 2781
# ---------------------------------------------------------------------------
mushroom_init:                          # DATA XREF: ROM:0009CDF8↓o
                mov     0x14, r3
                mov     0, r4
loc_745A4:                              # CODE XREF: ROM:000745B0↓j
                subo    1, r3, r3
                stob    r4, 0x40(g6)[r3]
                cmpobne 0, r3, loc_745A4
                mov     0, r15
                st      r15, 0x58(g6)
                lda     0x63, r15
                stis    r15, 0x60(g6)
                lda     0x63, r15
                stis    r15, 0x5C(g6)
                lda     loc_745D8, r15
                st      r15, 0xC(g6)
loc_745D8:                              # DATA XREF: ROM:000745CC↑o
                ld      fa_rob0, r3
                bal     sub_74680
                ld      fa_rob1, r3
                bal     sub_74680
                ld      0x58(g6), r3
loc_745F4:                              # CODE XREF: ROM:0007460C↓j
                scanbit r3, r4
                bno     loc_7467C
                clrbit  r4, r3, r3
                st      r3, 0x58(g6)
                ldob    0x40(g6)[r4], r5
                cmpobne 0, r5, loc_745F4
                mov     0x18, r5
                stob    r5, 0x40(g6)[r4]
                ldos    0x5C(g6), r5
                ldos    0x5E(g6), r6
                ldos    0x60(g6), r7
                cmpobe  r5, r7, loc_74654
                addo    1, r6, r6
                cmpobge 0x10, r6, loc_74638
                mov     0, r6
loc_74638:                              # CODE XREF: ROM:00074630↑j
                stos    r6, 0x5E(g6)
                cmpobne r5, r6, loc_74664
                addo    1, r5, r5
                cmpobge 0x10, r5, loc_7464C
                mov     0, r5
loc_7464C:                              # CODE XREF: ROM:00074644↑j
                stos    r5, 0x5C(g6)
                b       loc_74664
# ---------------------------------------------------------------------------
loc_74654:                              # CODE XREF: ROM:00074628↑j
                mov     0, r5
                mov     0, r6
                stos    r5, 0x5C(g6)
                stos    r6, 0x5E(g6)
loc_74664:                              # CODE XREF: ROM:0007463C↑j
                stob    r4, 0x64(g6)[r6]
                mov     0, r15
                stib    r15, 0x7C(g6)[r6]
                b       loc_745F4
# ---------------------------------------------------------------------------
loc_7467C:                              # CODE XREF: ROM:000745F8↑j
                ret
# =============== S U B R O U T I N E =======================================
sub_74680:                              # CODE XREF: ROM:000745E0↑p
                ld      0x644(r3), r4
                ld      0x64C(r3), r5
                lda     displacement, r6
                ldt     0x1F4(r3), r8
                cmpr    r6, r4
                bne     loc_746A8
                cmpr    r6, r5
                bne     loc_746C4
                b       loc_74754
# ---------------------------------------------------------------------------
loc_746A8:                              # CODE XREF: sub_74680+18↑j
                bbs     0x1F, r4, loc_746B8
                mov     0xF, r3
                mov     r10, r4
                b       loc_746DC
# ---------------------------------------------------------------------------
loc_746B8:                              # CODE XREF: sub_74680:loc_746A8↑j
                mov     5, r3
                notbit  0x1F, r10, r4
                b       loc_746DC
# ---------------------------------------------------------------------------
loc_746C4:                              # CODE XREF: sub_74680+20↑j
                bbs     0x1F, r5, loc_746D4
                mov     0, r3
                notbit  0x1F, r8, r4
                b       loc_746DC
# ---------------------------------------------------------------------------
loc_746D4:                              # CODE XREF: sub_74680:loc_746C4↑j
                mov     0xA, r3
                mov     r8, r4
loc_746DC:                              # CODE XREF: sub_74680+34↑j
                ld      stage_x, r5
                lda     0x40200000, r6
                divr    r6, r5, r6
                addr    r4, r5, r4
                divr    r6, r4, r4
                cvtri   r4, r4
                addo    r3, r4, r3
                cmpobne 0x14, r3, loc_74708
                mov     0, r3
loc_74708:                              # CODE XREF: sub_74680+80↑j
                ld      0x58(g6), r15
                setbit  r3, r15, r15
                st      r15, 0x58(g6)
                cmpobe  0, r3, loc_74728
                cmpobe  0x13, r3, loc_74734
                addo    1, r3, r4
                subo    1, r3, r5
                b       loc_7473C
# ---------------------------------------------------------------------------
loc_74728:                              # CODE XREF: sub_74680+94↑j
                mov     1, r4
                mov     0x13, r5
                b       loc_7473C
# ---------------------------------------------------------------------------
loc_74734:                              # CODE XREF: sub_74680+98↑j
                mov     0, r4
                mov     0x12, r5
loc_7473C:                              # CODE XREF: sub_74680+A4↑j
                ld      0x58(g6), r15
                setbit  r4, r15, r15
                st      r15, 0x58(g6)
                ld      0x58(g6), r15
                setbit  r5, r15, r15
                st      r15, 0x58(g6)
loc_74754:                              # CODE XREF: sub_74680+24↑j
                bx      (g14)
# End of function sub_74680
# =============== S U B R O U T I N E =======================================
mushroom_disp:                          # DATA XREF: ROM:0009CDFC↓o
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x50183C, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_747A0
                st      r13, 0x0(r15)
                b       loc_747AC
# ---------------------------------------------------------------------------
loc_747A0:                              # CODE XREF: mushroom_disp+3C↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_747AC:                              # CODE XREF: mushroom_disp+44↑j
                mov     0, g1
                lda     3350, g0        # Mushroom Hill forrest ceiling object
                call    set_obj
                lda     0x50183C, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_7483C
                st      r13, 0x0(r15)
                b       loc_74848
# ---------------------------------------------------------------------------
loc_7483C:                              # CODE XREF: mushroom_disp+D8↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_74848:                              # CODE XREF: mushroom_disp+E0↑j
                mov     0, g1
                lda     324, g0         # Mushroom
                call    set_obj
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                mov     0x14, r3
loc_74894:                              # CODE XREF: mushroom_disp:loc_748B0↓j
                subo    1, r3, r3
                ldob    0x40(g6)[r3], r4
                cmpobe  0, r4, loc_748B0
                subo    1, r4, r4
                stob    r4, 0x40(g6)[r3]
loc_748B0:                              # CODE XREF: mushroom_disp+148↑j
                cmpobne 0, r3, loc_74894
                ldos    0x5C(g6), r3
                ldos    0x5E(g6), r4
                ldos    0x60(g6), r5
                cmpobe  r3, r5, loc_74A8C
loc_748C4:                              # CODE XREF: mushroom_disp+308↓j
                ldob    0x64(g6)[r3], r6
                ldob    0x7C(g6)[r3], r7
                ldl     flt_74D6C[r6*8], r8
                divo    5, r6, r10
                mulo    5, r10, r10
                subo    r10, r6, r10
                ld      flt_74D58[r10*4], r10
                divo    3, r7, r11
                ld      cage_mushroom_spore_animation[r11*4], r11
                ld      fa_camera, r12
                ldos    0x26(r12), r12
                lda     0x40C00000, r13
                ld      stage_x, r14
                divr    r13, r14, r13
                ld      cage_height, r15
                lda     0x40466666, r14
                divr    r14, r15, r14
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                lda     0x3F333333, r14
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501864, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_749E4
                st      r13, 0x0(r15)
                b       loc_749F0
# ---------------------------------------------------------------------------
loc_749E4:                              # CODE XREF: mushroom_disp+280↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_749F0:                              # CODE XREF: mushroom_disp+288↑j
                mov     0, g1
                lda     (r11), g0
                call    set_obj
                lda     0x501864, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                addo    1, r7, r7
                shlo    5, 3, r13
                cmpobe  r13, r7, loc_74A6C
                stob    r7, 0x7C(g6)[r3]
                cmpobe  r3, r4, loc_74A8C
                addo    1, r3, r3
                cmpobge 0x10, r3, loc_748C4
                mov     0, r3
                b       loc_748C4
# ---------------------------------------------------------------------------
loc_74A6C:                              # CODE XREF: mushroom_disp+2F4↑j
                cmpobe  r3, r4, loc_74A84
                addo    1, r3, r3
                cmpobge 0x10, r3, loc_74A7C
                mov     0, r3
loc_74A7C:                              # CODE XREF: mushroom_disp+31C↑j
                stos    r3, 0x5C(g6)
                b       loc_748C4
# ---------------------------------------------------------------------------
loc_74A84:                              # CODE XREF: mushroom_disp:loc_74A6C↑j
                lda     0x63, r15
                stis    r15, 0x5C(g6)
loc_74A8C:                              # CODE XREF: mushroom_disp+168↑j
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x50185C, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_74AD4
                st      r13, 0x0(r15)
                b       loc_74AE0
# ---------------------------------------------------------------------------
loc_74AD4:                              # CODE XREF: mushroom_disp+370↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_74AE0:                              # CODE XREF: mushroom_disp+378↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x40C00000, r13
                ld      stage_x, r14
                divr    r13, r14, r3
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x3FCCCCCD, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ldob    0x500288, r7
                mov     0, g1
                lda     2400, g0        # Mushroom Ring
                call    set_obj
                mov     0, g1
                lda     2402, g0        # Mushroom Ring
                call    set_obj
                mov     0, g1
                lda     2401, g0        # Mushroom Ring
                call    set_obj
                mov     0, g1
                lda     2399, g0        # Mushroom Ring
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x50185C, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                ld      fa_camera, r3
                ld      0x0(r3), r15
                bbc     0xE, r15, loc_74CD4
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x50185C, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_74BF8
                st      r13, 0x0(r15)
                b       loc_74C04
# ---------------------------------------------------------------------------
loc_74BF8:                              # CODE XREF: mushroom_disp+494↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_74C04:                              # CODE XREF: mushroom_disp+49C↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x40C00000, r13
                ld      stage_x, r14
                divr    r13, r14, r3
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x3FCCCCCD, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ldob    0x500288, r7
                bbs     0, r7, loc_74C5C
                mov     0, g1
                lda     2400, g0        # Mushroom Ring
                call    set_obj
loc_74C5C:                              # CODE XREF: mushroom_disp+4F4↑j
                bbs     1, r7, loc_74C6C
                mov     0, g1
                lda     2402, g0        # Mushroom Ring
                call    set_obj
loc_74C6C:                              # CODE XREF: mushroom_disp:loc_74C5C↑j
                bbs     2, r7, loc_74C7C
                mov     0, g1
                lda     2401, g0        # Mushroom Ring
                call    set_obj
loc_74C7C:                              # CODE XREF: mushroom_disp:loc_74C6C↑j
                bbs     3, r7, loc_74C8C
                mov     0, g1
                lda     2399, g0        # Mushroom Ring
                call    set_obj
loc_74C8C:                              # CODE XREF: mushroom_disp:loc_74C7C↑j
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x50185C, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
loc_74CD4:                              # CODE XREF: mushroom_disp+454↑j
                ret
# End of function mushroom_disp
# ---------------------------------------------------------------------------
cage_mushroom_spore_animation:.long 1713
                .long 1724
                .long 1735
                .long 1739
                .long 1740
                .long 1741
                .long 1742
                .long 1743
                .long 1744
                .long 1714
                .long 1715
                .long 1716
                .long 1717
                .long 1718
                .long 1719
                .long 1720
                .long 1721
                .long 1722
                .long 1723
                .long 1725
                .long 1726
                .long 1727
                .long 1728
                .long 1729
                .long 1730
                .long 1731
                .long 1732
                .long 1733
                .long 1734
                .long 1736
                .long 1737
                .long 1738
flt_74D58:      .float 0.69999999       # DATA XREF: mushroom_disp+190↑r
                .float 0.44999999
                .float 0.89999998
                .float 0.60000002
                .float 0.40000001
flt_74D6C:      .float 6.0              # DATA XREF: mushroom_disp+17C↑r
                .float 6.0
                .float 3.5999999
                .float 6.0
                .float 1.2
                .float 6.0
                .float -1.2
                .float 6.0
                .float -3.5999999
                .float 6.0
                .float -6.0
                .float 6.0
                .float -6.0
                .float 3.5999999
                .float -6.0
                .float 1.2
                .float -6.0
                .float -1.2
                .float -6.0
                .float -3.5999999
                .float -6.0
                .float -6.0
                .float -3.5999999
                .float -6.0
                .float -1.2
                .float -6.0
                .float 1.2
                .float -6.0
                .float 3.5999999
                .float -6.0
                .float 6.0
                .float -6.0
                .float 6.0
                .float -3.5999999
                .float 6.0
                .float -1.2
                .float 6.0
                .float 1.2
                .float 6.0
                .float 3.5999999
# ---------------------------------------------------------------------------
aurora_init:                            # DATA XREF: ROM:0009CE30↓o
                mov     0, r15
                stis    r15, 6(g6)
                lda     loc_74E20, r15
                st      r15, 0xC(g6)
loc_74E20:                              # DATA XREF: ROM:00074E14↑o
                lda     aurora_borealis_data, g0
                ld      frame_counter, r13
                subi    r13, 0, g1
                shlo    2, g1, g1
                lda     0x7FF, r13
                and     r13, g1, g1
                mov     0, g2
                lda     displacement, g3
                call    move_tpd_req
                st      g0, 0x44(g6)
                ret
# ---------------------------------------------------------------------------
aurora_disp:                            # DATA XREF: ROM:0009CE34↓o
                ld      0x2008(g10), r15 # Label from official source
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_74EA0
                st      r13, 0x0(r15)
                b       loc_74EAC
# ---------------------------------------------------------------------------
loc_74EA0:                              # CODE XREF: ROM:00074E94↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_74EAC:                              # CODE XREF: ROM:00074E9C↑j
                ld      0x44(g6), r6
                lda     (r6), g2
                mov     0, g1
                lda     1604, g0        # Aurora Borealis reflection
                call    set_obj_tpd
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     3200, g0        # Aurora Icefield skybox
                call    set_obj
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     0xBF800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     3200, g0        # Aurora Icefield skybox
                call    set_obj
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ldob    0x500288, r3
                bbc     0, r3, loc_750E8
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501854, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_74FB0
                st      r13, 0x0(r15)
                b       loc_74FBC
# ---------------------------------------------------------------------------
loc_74FB0:                              # CODE XREF: ROM:00074FA4↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_74FBC:                              # CODE XREF: ROM:00074FAC↑j
                mov     0, g1
                lda     1601, g0        # Aurora Icefield walrususes
                call    set_obj
                lda     0x501854, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_7504C
                st      r13, 0x0(r15)
                b       loc_75058
# ---------------------------------------------------------------------------
loc_7504C:                              # CODE XREF: ROM:00075040↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_75058:                              # CODE XREF: ROM:00075048↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     0xBF800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     2319, g0        # Ice Walruses reflection
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
loc_750E8:                              # CODE XREF: ROM:00074F64↑j
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_75130
                st      r13, 0x0(r15)
                b       loc_7513C
# ---------------------------------------------------------------------------
loc_75130:                              # CODE XREF: ROM:00075124↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_7513C:                              # CODE XREF: ROM:0007512C↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      floor_stage_size_0, r3
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x3FCCCCCD, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                mov     0, g1
                lda     559, g0         # Aurora Icefield floor
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     0xBF800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                ld      0x44(g6), r6
                lda     (r6), g2
                mov     0, g1
                lda     1604, g0        # Aurora Borealis static object
                call    set_obj_tpd
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501854, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_75268
                st      r13, 0x0(r15)
                b       loc_75274
# ---------------------------------------------------------------------------
loc_75268:                              # CODE XREF: ROM:0007525C↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_75274:                              # CODE XREF: ROM:00075264↑j
                call    aurora_ice_pillar_init
                lda     0x501854, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                ret
# =============== S U B R O U T I N E =======================================
aurora_ice_pillar_init:                 # CODE XREF: ROM:loc_75274↑p
                lda     yellow_diamond_ice_pillar0, g1
                call    aurora_ice_pillar_disp
                lda     green_diamond_ice_pillar0, g1
                call    aurora_ice_pillar_disp
                lda     purple_diamond_ice_pillar0, g1
                call    aurora_ice_pillar_disp
                lda     blue_diamond_ice_pillar0, g1
                call    aurora_ice_pillar_disp
                lda     red_diamond_ice_pillar0, g1
                call    aurora_ice_pillar_disp
                lda     orange_diamond_ice_pillar0, g1
                call    aurora_ice_pillar_disp
                lda     purple_diamond_ice_pillar1, g1
                call    aurora_ice_pillar_disp
                lda     green_diamond_ice_pillar1, g1
                call    aurora_ice_pillar_disp
                ret
# End of function aurora_ice_pillar_init
# =============== S U B R O U T I N E =======================================
aurora_ice_pillar_disp:                 # CODE XREF: aurora_ice_pillar_init+8↑p
                mov     g1, r11
                ld      (r11), r4
                lda     displacement, r5
                ld      4(r11), r6
                ldl     focus_dist_x, r8
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                ld      (g11)[g12*1], r13
                ld      (g11)[g12*1], r14
                mulr    r8, r12, r12
                mulr    r9, r13, r13
                divr    r14, r12, r12
                divr    r14, r13, r13
                mov     0, r3
                lda     0x3F800000, r15
                cmpr    r14, r15
                bg      loc_75388
                shlo    4, 9, r3
                b       loc_753B8
# ---------------------------------------------------------------------------
loc_75388:                              # CODE XREF: aurora_ice_pillar_disp+60↑j
                lda     0xC3780000, r15
                cmpr    r12, r15
                bg      loc_753A0
                setbit  0, r3, r3
                setbit  7, r3, r3
loc_753A0:                              # CODE XREF: aurora_ice_pillar_disp+78↑j
                lda     0x43780000, r15
                cmpr    r12, r15
                bl      loc_753B8
                setbit  1, r3, r3
                setbit  7, r3, r3
loc_753B8:                              # CODE XREF: aurora_ice_pillar_disp+68↑j
                cmpobne 0, r3, loc_754F4
                ldt     8(r11), r8
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ldos    0x1E(r11), r7
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ldos    0x18(r11), r3
                mov     0, g1
                lda     (r3), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ld      0x14(r11), r12
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x40000000, r12
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ldos    0x1A(r11), r3
                mov     0, g1
                lda     (r3), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ld      frame_counter, r6
                shlo    8, r6, r6
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x3F99999A, r12
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ldos    0x1C(r11), r3
                mov     0, g1
                lda     (r3), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_754F4:                              # CODE XREF: aurora_ice_pillar_disp:loc_753B8↑j
                ret
# End of function aurora_ice_pillar_disp
# ---------------------------------------------------------------------------
yellow_diamond_ice_pillar0:.float -31.200001
                .float 1.2
                .float 2.0
                .float 1.4
                .float 2.0
                .float 14.5
                .short 4278             # Ice pillar that holds diamond
                .short 4258             # Dark yellow ice diamond
                .short 4256             # Light yellow ice diamond
                .short 0x4000
green_diamond_ice_pillar0:.float -48.0  # DATA XREF: aurora_ice_pillar_init+C↑o
                .float -9.0
                .float 2.0
                .float 1.4
                .float 2.0
                .float 14.5
                .short 4278             # Ice pillar that holds diamond
                .short 4254             # Dark green ice diamond
                .short 4252             # Light green ice diamond
                .short 0x4000
purple_diamond_ice_pillar0:.float 30.0  # DATA XREF: aurora_ice_pillar_init+18↑o
                .float -56.299999
                .float 2.0
                .float 1.4
                .float 2.0
                .float 14.5
                .short 4278             # Ice pillar that holds diamond
                .short 4262             # Dark purple ice diamond
                .short 4260             # Light purple ice diamond
                .short 0x8000
blue_diamond_ice_pillar0:.float 76.699997
                .float -55.5
                .float 2.0
                .float 1.4
                .float 2.0
                .float 14.5
                .short 4278             # Ice pillar that holds diamond
                .short 4250             # Dark blue ice diamond
                .short 4248             # Light blue ice diamond
                .short 0xC000
red_diamond_ice_pillar0:.float 45.0     # DATA XREF: aurora_ice_pillar_init+30↑o
                .float -25.200001
                .float 2.0
                .float 1.4
                .float 2.0
                .float 14.5
                .short 4278             # Ice pillar that holds diamond
                .short 4270             # Dark red ice diamond
                .short 4268             # Light red ice diamond
                .short 0xC000
orange_diamond_ice_pillar0:.float 46.299999
                .float -8.8000002
                .float 2.4000001
                .float 1.6799999
                .float 2.4000001
                .float 16.700001
                .short 4278             # Ice pillar that holds diamond
                .short 4266             # Dark orange ice diamond
                .short 4264             # Light orange ice diamond
                .short 0xC000
purple_diamond_ice_pillar1:.float 105.4 # DATA XREF: aurora_ice_pillar_init+48↑o
                .float -6.4000001
                .float 2.0
                .float 1.4
                .float 2.0
                .float 14.5
                .short 4278             # Ice pillar that holds diamond
                .short 4262             # Dark purple ice diamond
                .short 4260             # Light purple ice diamond
                .short 0xC000
un_blue_diamond_ice_pillar1:.float 68.0
                .float -2.2
                .float 2.4000001
                .float 1.6799999
                .float 2.4000001
                .float 16.700001
                .short 4278             # Ice pillar that holds diamond
                .short 4250             # Dark blue ice diamond
                .short 4248             # Light blue ice diamond
                .short 0xC000
green_diamond_ice_pillar1:.float 87.0   # DATA XREF: aurora_ice_pillar_init+54↑o
                .float 35.400002
                .float 2.0
                .float 1.4
                .float 2.0
                .float 14.5
                .short 4278             # Ice pillar that holds diamond
                .short 4254             # Dark green ice diamond
                .short 4252             # Light green ice diamond
                .short 0xC000
# ---------------------------------------------------------------------------
aurora_nothing:                         # DATA XREF: ROM:0009CE4C↓o
                ret
# ---------------------------------------------------------------------------
un_aurora_ice_cubes:
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501854, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_75664
                st      r13, 0x0(r15)
                b       loc_75670
# ---------------------------------------------------------------------------
loc_75664:                              # CODE XREF: ROM:00075658↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_75670:                              # CODE XREF: ROM:00075660↑j
                ldl     focus_dist_x, r8
                lda     displacement, r3
                lda     aurora_ice_cube_data, r10
                mov     4, r9
loc_7568C:                              # CODE XREF: ROM:000757B4↓j
                ldq     (r10), r4
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                ld      (g11)[g12*1], r13
                ld      (g11)[g12*1], r14
                mulr    r8, r12, r12
                mulr    r9, r13, r13
                divr    r14, r12, r12
                divr    r14, r13, r13
                mov     0, r3
                lda     0x3F800000, r15
                cmpr    r14, r15
                bg      loc_756E0
                shlo    4, 9, r3
                b       loc_75710
# ---------------------------------------------------------------------------
loc_756E0:                              # CODE XREF: ROM:000756D4↑j
                lda     0xC3780000, r15
                cmpr    r12, r15
                bg      loc_756F8
                setbit  0, r3, r3
                setbit  7, r3, r3
loc_756F8:                              # CODE XREF: ROM:000756EC↑j
                lda     0x43780000, r15
                cmpr    r12, r15
                bl      loc_75710
                setbit  1, r3, r3
                setbit  7, r3, r3
loc_75710:                              # CODE XREF: ROM:000756DC↑j
                cmpobne 0, r3, loc_757AC
                ldos    0x10(r10), r8   # r10 = 0x75828
                ldos    0x12(r10), r11  # r11 = 0x7583A
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                mov     0, g1
                lda     (r8), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                mov     0, g1
                lda     (r11), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_757AC:                              # CODE XREF: ROM:loc_75710↑j
                addo    0x18, r10, r10
                cmpdeco 1, r9, r9
                bl      loc_7568C
                lda     0x501854, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                ret
# ---------------------------------------------------------------------------
aurora_ice_cube_data:.float -27.799999  # DATA XREF: ROM:00075680↑o
                .float 4.1999998
                .float 1.65
                .float 1.5
                .short 4315             # Small Cube Next to Pillar (outter)
                .short 4205             # Small Cube Next to Pillar (inner)
                .long 0
                .float -24.4
                .float 1.5
                .float 2.2
                .float 2.0
                .short 4313             # Big Cube Next to Pillar (outter)
                .short 4208             # Big Cube Next to Pillar (Inner)
                .long 0
                .float 7.4000001
                .float -17.200001
                .float 1.1
                .float 1.0
                .short 4316             # Small Cube Outside Ring (outter)
                .short 3353             # Small Cube Outside Ring (inner)
                .long 0
                .float 11.6
                .float -17.799999
                .float 2.2
                .float 2.0
                .short 4313             # Big Cube Outside Ring (outter)
                .short 4204             # Big Cube Outside Ring (inner)
                .long 0
un_aurora_borealis_data:.long 0x480024
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0
                .long 0
                .long 0
                .long 0
aurora_borealis_data:.long 0x480024     # DATA XREF: ROM:loc_74E20↑o
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0x8000000
                .long 0x8000800
                .long 0x800
                .long 0
                .long 0
                .long 0
                .long 0
# ---------------------------------------------------------------------------
dynamite_init:                          # DATA XREF: ROM:0009CE64↓o
                mov     0, r15
                stis    r15, 0x40(g6)
                shlo    0xB, 1, r15
                stis    r15, 0x42(g6)
                lda     displacement, r15
                st      r15, 0x44(g6)
                lda     0x3D4CCCCD, r15
                st      r15, 0x48(g6)
                mov     0, r15
                stis    r15, 0x4C(g6)
                mov     0, r15
                stis    r15, 0x4E(g6)
                lda     loc_759E4, r15
                st      r15, 0xC(g6)
loc_759E4:                              # DATA XREF: ROM:000759D8↑o
                ld      debug_flag, r15
                bbs     5, r15, loc_75A20
                ldos    0x40(g6), r4
                ldos    0x42(g6), r5
                lda     0xFF06, r6
                lda     0xFA, r7
                addo    r4, r6, r4
                addo    r5, r7, r5
                stos    r4, 0x40(g6)
                stos    r5, 0x42(g6)
                ldos    0x4E(g6), r3
                addo    1, r3, r3
                stos    r3, 0x4E(g6)
loc_75A20:                              # CODE XREF: ROM:000759EC↑j
                ret
# ---------------------------------------------------------------------------
dynamite_disp:                          # DATA XREF: ROM:0009CE68↓o
                ldos    0x4C(g6), r3
                addo    1, r3, r3
                stos    r3, 0x4C(g6)
                shro    2, r3, r3
                and     3, r3, r3
                addo    2, r3, r4
                and     3, r4, r4
                ld      dynamite_bg_factory_exhaust[r3*4], r7
                ld      dynamite_bg_factory_exhaust[r4*4], r8
                lda     0x4019999A, r4
                lda     0x41B47AE1, r5
                lda     0x42340000, r6
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_75AB0
                st      r13, 0x0(r15)
                b       loc_75ABC
# ---------------------------------------------------------------------------
loc_75AB0:                              # CODE XREF: ROM:00075AA4↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_75ABC:                              # CODE XREF: ROM:00075AAC↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                mov     0, g1
                lda     (r7), g0
                call    set_obj
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0xBF800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     0x4099999A, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     (r8), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x40ACCCCD, r3
                ld      0x44(g6), r4
                ld      0x48(g6), r5
                addr    r4, r5, r4
                chkbit  0x1F, r4
                be      loc_75BD4
                cmpr    r3, r4
                bge     loc_75BE0
                mov     r3, r4
                setbit  0x1F, r5, r5
                st      r5, 0x48(g6)
                b       loc_75BE0
# ---------------------------------------------------------------------------
loc_75BD4:                              # CODE XREF: ROM:00075BB8↑j
                xor     r4, r4, r4
                clrbit  0x1F, r5, r5
                st      r5, 0x48(g6)
loc_75BE0:                              # CODE XREF: ROM:00075BC0↑j
                st      r4, 0x44(g6)
                lda     0x46800000, r6
                mulr    r4, r6, r7
                cvtri   r7, r7
                lda     0x41B8CCCD, r8
                lda     0x3F000000, r9
                lda     0x3FD9999A, r10
                addr    r4, r9, r9
                lda     0x3FCCCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_75CAC
                st      r13, 0x0(r15)
                b       loc_75CB8
# ---------------------------------------------------------------------------
loc_75CAC:                              # CODE XREF: ROM:00075CA0↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_75CB8:                              # CODE XREF: ROM:00075CA8↑j
                mov     0, g1
                lda     0x746, g0
                call    set_obj
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                subr    r4, r3, r4
                mulr    r4, r6, r7
                cvtri   r7, r7
                lda     0x41D26666, r8
                lda     0x3F000000, r9
                lda     0xBFCCCCCD, r10
                addr    r4, r9, r9
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_75DC8
                st      r13, 0x0(r15)
                b       loc_75DD4
# ---------------------------------------------------------------------------
loc_75DC8:                              # CODE XREF: ROM:00075DBC↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_75DD4:                              # CODE XREF: ROM:00075DC4↑j
                mov     0, g1
                lda     0x746, g0
                call    set_obj
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                shlo    0xD, 7, r3
                lda     0xC12A3D71, r4
                lda     0x402CCCCD, r5
                lda     0xC1C0E148, r6
                ldos    0x40(g6), r7
                lda     0x3FCCCCCD, r8
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_75EF4
                st      r13, 0x0(r15)
                b       loc_75F00
# ---------------------------------------------------------------------------
loc_75EF4:                              # CODE XREF: ROM:00075EE8↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_75F00:                              # CODE XREF: ROM:00075EF0↑j
                mov     0, g1
                lda     0x8D9, g0
                call    set_obj
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0xC158F5C3, r4
                lda     0x40D66666, r5
                lda     0xC1B3999A, r6
                ldos    0x42(g6), r7
                lda     0x3F99999A, r9
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_76034
                st      r13, 0x0(r15)
                b       loc_76040
# ---------------------------------------------------------------------------
loc_76034:                              # CODE XREF: ROM:00076028↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_76040:                              # CODE XREF: ROM:00076030↑j
                mov     0, g1
                lda     0x8D9, g0
                call    set_obj
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3FCCCCCD, r3
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      frame_counter, r4
                shro    1, r4, r4
                and     0x1F, r4, r4
                ldos    dynamite_bg_bombs_conveyor_belt[r4*2], r5
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_76120
                st      r13, 0x0(r15)
                b       loc_7612C
# ---------------------------------------------------------------------------
loc_76120:                              # CODE XREF: ROM:00076114↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_7612C:                              # CODE XREF: ROM:0007611C↑j
                mov     0, g1
                lda     (r5), g0
                call    set_obj
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# ---------------------------------------------------------------------------
dynamite_bg_bombs_conveyor_belt:.short 2563 # DATA XREF: ROM:000760D0↑r
                .short 2564
                .short 2565
                .short 2566
                .short 2567
                .short 2568
                .short 2569
                .short 2570
                .short 2571
                .short 2572
                .short 2573
                .short 2574
                .short 2575
                .short 2576
                .short 2577
                .short 2578
                .short 2617
                .short 2618
                .short 2619
                .short 2620
                .short 2621
                .short 2622
                .short 2623
                .short 2624
                .short 2625
                .short 2626
                .short 2627
                .short 2628
                .short 2629
                .short 2630
                .short 2631
                .short 2632
dynamite_bg_factory_exhaust:.long 836   # DATA XREF: ROM:00075A40↑r
                .long 837
                .long 838
                .long 839
# ---------------------------------------------------------------------------
canyon_init:                            # DATA XREF: ROM:0009CE80↓o
                mov     0, r3
                stos    r3, 6(g6)
                stos    r3, 0x5004AA
                stos    r3, 0x5004AC
                stos    r3, 0x5004AE
                stob    r3, 0x48(g6)
                lda     displacement, r3
                st      r3, 0x5004B0
                st      r3, 0x5004B4
                mov     0xA, r3
                stos    r3, 0x5004A8
                ld      0x0(g6), r15
                setbit  0x1F, r15, r15
                st      r15, 0x0(g6)
                mov     0, r15
                stis    r15, 0x40(g6)
                shlo    8, 1, r15
                stis    r15, 0x530200
                lda     loc_7624C, r15
                st      r15, 0xC(g6)
                ret
# ---------------------------------------------------------------------------
loc_7624C:                              # DATA XREF: ROM:0007623C↑o
                ld      debug_flag, r15
                bbs     5, r15, loc_76384
                ldos    0x50A022, r3
                addo    0x1F, 1, r13
                addi    r13, r3, r3
                shlo    0xD, 9, r14
                subi    r3, r14, r3
                stos    r3, VECTER_Y
                call    object_move
                call    sub_71FD0
                ldos    6(g6), r4
                lda     0x4CE, r5
                lda     0x514, r6
                cmpobl  r4, r5, loc_762A8
                cmpobge r4, r6, loc_762A8
                ldos    0x530200, r14
                subi    2, r14, r15
                stos    r15, 0x530200
loc_762A8:                              # CODE XREF: ROM:0007628C↑j
                lda     0x596, r5
                lda     0x5DC, r6
                cmpobl  r4, r5, loc_762CC
                cmpobge r4, r6, loc_762CC
                ldos    0x530200, r14
                addi    2, r14, r15
                stos    r15, 0x530200
loc_762CC:                              # CODE XREF: ROM:000762B0↑j
                ldos    0x530200, g0
                call    sub_76388
                lda     0x60E, r5
                lda     0x654, r6
                cmpoble r4, r5, loc_76310
                cmpobge r4, r6, loc_76310
                lda     0x62A, r5
                cmpobl  r4, r5, loc_762F8
                call    sub_71F28
                b       loc_76310
# ---------------------------------------------------------------------------
loc_762F8:                              # CODE XREF: ROM:000762EC↑j
                lda     0x60F, r3
                cmpobne r4, r3, loc_7630C
                ld      0x1C(g6), r3
                st      r3, 0x5004B4
loc_7630C:                              # CODE XREF: ROM:000762FC↑j
                call    sub_71ED8
loc_76310:                              # CODE XREF: ROM:000762E0↑j
                ldos    0x40(g6), r3
                lda     loc_F900, r4
                addo    r3, r4, r3
                stos    r3, 0x40(g6)
                ldt     0x2C(g6), r4
                notbit  0x1F, r6, r6
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                shlo    0xF, 1, r13
                addi    r13, r7, r7
                ldos    6(g6), r3
                ldos    0x20D5BC4[r3*2], r7
                subi    r7, 0, r7
                stos    r7, 0x50A022
                ldt     0x18(g6), r4
                stt     r4, stage_xpos
                ldos    6(g6), r3
                lda     0x784, r13
                cmpobne r13, r3, loc_76384
                lda     0x7D, r15
                stis    r15, 6(g6)
loc_76384:                              # CODE XREF: ROM:00076254↑j
                ret
# =============== S U B R O U T I N E =======================================
sub_76388:                              # CODE XREF: ROM:000762D4↑p
                ldob    stage_num, r3
                ld      float_apx_1_5[r3*4], g2
                mov     0, g3
                mov     4, g1
                call    material_part_chg
                mov     7, g1
                call    material_part_chg
                mov     0xD, g1
                call    material_part_chg
                mov     0x12, g1
                call    material_part_chg
                mov     0x15, g1
                call    material_part_chg
                ret
# End of function sub_76388
# =============== S U B R O U T I N E =======================================
canyon_disp:                            # DATA XREF: ROM:0009CE84↓o
                ldos    6(g6), r3
                bbs     7, r3, loc_763E4
                shlo    6, 1, r4
                divo    r4, r3, r5
                mulo    r4, r5, r4
                subo    r4, r3, r3
                b       loc_763F8
# ---------------------------------------------------------------------------
loc_763E4:                              # CODE XREF: canyon_disp+4↑j
                addo    0x1F, 1, r4
                divo    r4, r3, r5
                mulo    r4, r5, r4
                subo    r4, r3, r3
                shlo    1, r3, r3
loc_763F8:                              # CODE XREF: canyon_disp+18↑j
                ld      dword_76658[r3*4], r3
                lda     0x40C00000, r13
                ld      stage_x, r14
                divr    r13, r14, r13
                ld      cage_height, r15
                lda     0x40466666, r14
                divr    r14, r15, r14
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x50185C, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_76494
                st      r13, 0x0(r15)
                b       loc_764A0
# ---------------------------------------------------------------------------
loc_76494:                              # CODE XREF: canyon_disp+C0↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_764A0:                              # CODE XREF: canyon_disp+C8↑j
                mov     0, g1
                lda     (r3), g0
                call    set_obj
                lda     0x50185C, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# End of function canyon_disp
# =============== S U B R O U T I N E =======================================
# g6 = 0x543180
canyon_env_init:                        # DATA XREF: ROM:0009CE98↓o
                lda     displacement1, g3
                ld      frame_counter, g1
                shro    1, g1, g1
                lda     0x3F, r13
                and     r13, g1, g1
                addo    7, g1, g1
                lda     canyon_eye_data_1, g0
                call    move_tpd_req
                st      g0, 0x44(g6)
                lda     canyon_eye_data_2, g0
                call    move_tpd_req
                st      g0, 0x48(g6)
                lda     canyon_eye_data_3, g0
                call    move_tpd_req
                st      g0, 0x4C(g6)
                ret
# End of function canyon_env_init
# ---------------------------------------------------------------------------
canyon_eye_data_1:.long 0x1C0007        # DATA XREF: canyon_env_init+20↑o
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
canyon_eye_data_2:.long 0x28000A        # DATA XREF: canyon_env_init+30↑o
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
canyon_eye_data_3:.long 0x3C000F        # DATA XREF: canyon_env_init+40↑o
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
                .long 0x140DA
                .long 0x3C00A0C
dword_76658:    .long 3199              # DATA XREF: canyon_disp:loc_763F8↑r
                .long 3231
                .long 3232
                .long 3233
                .long 3234
                .long 3235
                .long 3236
                .long 3237
                .long 3238
                .long 3239
                .long 3240
                .long 3241
                .long 3242
                .long 3243
                .long 3244
                .long 3245
                .long 3246
                .long 3247
                .long 3248
                .long 3249
                .long 3250
                .long 3251
                .long 3252
                .long 3253
                .long 3254
                .long 3255
                .long 3256
                .long 3257
                .long 3258
                .long 3259
                .long 3260
                .long 3261
                .long 3262
                .long 3263
                .long 3264
                .long 3265
                .long 3266
                .long 3267
                .long 3268
                .long 3269
                .long 3270
                .long 3271
                .long 3272
                .long 3273
                .long 3274
                .long 3275
                .long 3276
                .long 3277
                .long 3278
                .long 3279
                .long 3280
                .long 3281
                .long 3282
                .long 3283
                .long 3284
                .long 3285
                .long 3286
                .long 3287
                .long 3288
                .long 3289
                .long 3290
                .long 3291
                .long 3292
                .long 3293
# =============== S U B R O U T I N E =======================================
canyon_env_disp:                        # DATA XREF: ROM:0009CE9C↓o
                mov     g6, r11
                lda     fa_object0_ram, g6
                ldos    6(g6), r3
                lda     0x784, r4
                cmpobne r4, r3, loc_76790
                mov     1, r4
                stos    r4, 0x5004AA
                mov     0x15, r4
                stos    r4, 0x5004AC
                stos    r4, 0x5004AE
loc_76790:                              # CODE XREF: canyon_env_disp+14↑j
                ldos    0x5004AA, r4
                ldos    word_9D394[r4*2], r7
                ldos    0x5004AE, r15
                stos    r15, 0x5004AC
                addo    4, sp, sp
                st      r3, -4(sp)
                addo    4, sp, sp
                st      r7, -4(sp)
                addo    4, sp, sp
                st      r4, -4(sp)
loc_767D4:                              # CODE XREF: canyon_env_disp+1A4↓j
                ldos    0x5004AC, r8
                ld      canyon_env_objects[r8*4], r9
                subo    1, 0, r10
                cmpibe  r10, r9, loc_76900
                addo    1, r8, r8
                ld      canyon_env_objects[r8*4], r4
                addo    1, r8, r8
                ld      canyon_env_objects[r8*4], r5
                addo    1, r8, r8
                ld      canyon_env_objects[r8*4], r6
                addo    1, r8, r8
                stos    r8, 0x5004AC
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_76864
                st      r13, 0x0(r15)
                b       loc_76870
# ---------------------------------------------------------------------------
loc_76864:                              # CODE XREF: canyon_env_disp+100↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_76870:                              # CODE XREF: canyon_env_disp+108↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x22004444, r15
                st      r15, (g11)[g12*1]
                mov     8, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                mov     0, g1
                lda     (r9), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                b       loc_767D4
# ---------------------------------------------------------------------------
loc_76900:                              # CODE XREF: canyon_env_disp+90↑j
                mov     r11, g6
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501844, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_7694C
                st      r13, 0x0(r15)
                b       loc_76958
# ---------------------------------------------------------------------------
loc_7694C:                              # CODE XREF: canyon_env_disp+1E8↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_76958:                              # CODE XREF: canyon_env_disp+1F0↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x22004444, r15
                st      r15, (g11)[g12*1]
                mov     8, r15
                st      r15, (g11)[g12*1]
                ld      0x44(g6), r3
                lda     (r3), g2
                mov     0, g1
                lda     2559, g0
                call    set_obj_thd
                ld      0x48(g6), r3
                lda     (r3), g2
                mov     0, g1
                lda     2560, g0
                call    set_obj_thd
                ld      0x4C(g6), r3
                lda     (r3), g2
                mov     0, g1
                lda     2561, g0
                call    set_obj_thd
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     0xC3A50000, r15
                st      r15, (g11)[g12*1]
                lda     0x41A9999A, r15
                st      r15, (g11)[g12*1]
                lda     0xC3660000, r15
                st      r15, (g11)[g12*1]
                ld      0x44(g6), r3
                lda     (r3), g2
                mov     0, g1
                lda     2561, g0
                call    set_obj_thd
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     0x43A50000, r15
                st      r15, (g11)[g12*1]
                lda     0xC1A9999A, r15
                st      r15, (g11)[g12*1]
                lda     0x43660000, r15
                st      r15, (g11)[g12*1]
                ld      0x44(g6), r3
                lda     (r3), g2
                mov     0, g1
                lda     2559, g0
                call    set_obj_thd
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x501844, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                lda     fa_object0_ram, g6
                ldos    0x5004AC, r9
                addo    1, r9, r9
                stos    r9, 0x5004AC
                ld      -4(sp), r4
                subo    4, sp, sp
                ld      -4(sp), r7
                subo    4, sp, sp
                ld      -4(sp), r3
                subo    4, sp, sp
                cmpobne r3, r7, loc_76AF4
                stos    r9, 0x5004AE
                addo    1, r4, r4
                stos    r4, 0x5004AA
loc_76AF4:                              # CODE XREF: canyon_env_disp+384↑j
                ret
# End of function canyon_env_disp
# ---------------------------------------------------------------------------
giant_wing_init:                        # CODE XREF: ROM:00076BB0↓j
                lda     displacement, r15
                st      r15, 0x40(g6)
                lda     displacement, r15
                st      r15, 0x44(g6)
                lda     0x45BB8000, r15
                st      r15, 0x48(g6)
                lda     0x453B8000, r15
                st      r15, 0x4C(g6)
                lda     displacement, r15
                st      r15, 0x58(g6)
                lda     0xC53B8000, r15
                st      r15, 0x5C(g6)
                lda     0x44BB8000, r15
                st      r15, 0x50(g6)
                lda     0xC4BB8000, r15
                st      r15, 0x54(g6)
                lda     0x43FA0000, r15
                st      r15, 0x60(g6)
                lda     0xC4BB8000, r15
                st      r15, 0x64(g6)
                mov     0, r15
                stis    r15, 0x50A026
                lda     loc_76B8C, r15
                st      r15, 0xC(g6)
                ret
# ---------------------------------------------------------------------------
loc_76B8C:                              # DATA XREF: ROM:00076B7C↑o
                ldob    mode, r3
                lda     mode9, r4
                cmpobne r3, r4, loc_76BB4
                ldob    _sub_mode, r3
                lda     prcb, r4
                cmpobe  r3, r4, giant_wing_init
loc_76BB4:                              # CODE XREF: ROM:00076B9C↑j
                ldos    0x50A026, r4
                addo    1, r4, r4
                stos    r4, 0x50A026
                shlo    7, r4, r6
                lda     0x12002424, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x43CD8000, r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                shlo    6, r4, r5
                addo    r5, r6, r5
                lda     loc_1234, r7
                addo    r7, r5, r5
                lda     0x12002424, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                lda     0x43050000, r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                addr    r3, r5, r3
                cvtri   r3, r3
                stis    r3, 0x50A024
                lda     0xC5BB8000, r5
                notbit  0x1F, r5, r6
                lda     0x41480000, r3
                ld      0x48(g6), r4
                subr    r3, r4, r4
                cmpr    r4, r5
                bg      loc_76C58
                mov     r6, r4
loc_76C58:                              # CODE XREF: ROM:00076C50↑j
                st      r4, 0x48(g6)
                ld      0x4C(g6), r4
                subr    r3, r4, r4
                cmpr    r4, r5
                bg      loc_76C70
                mov     r6, r4
loc_76C70:                              # CODE XREF: ROM:00076C68↑j
                st      r4, 0x4C(g6)
                ld      0x58(g6), r4
                subr    r3, r4, r4
                cmpr    r4, r5
                bg      loc_76C88
                mov     r6, r4
loc_76C88:                              # CODE XREF: ROM:00076C80↑j
                st      r4, 0x58(g6)
                ld      0x5C(g6), r4
                subr    r3, r4, r4
                cmpr    r4, r5
                bg      loc_76CA0
                mov     r6, r4
loc_76CA0:                              # CODE XREF: ROM:00076C98↑j
                st      r4, 0x5C(g6)
                lda     0xC53B8000, r5
                notbit  0x1F, r5, r6
                lda     0x40F00000, r3
                ld      0x50(g6), r4
                subr    r3, r4, r4
                cmpr    r4, r5
                bg      loc_76CCC
                mov     r6, r4
loc_76CCC:                              # CODE XREF: ROM:00076CC4↑j
                st      r4, 0x50(g6)
                ld      0x54(g6), r4
                subr    r3, r4, r4
                cmpr    r4, r5
                bg      loc_76CE4
                mov     r6, r4
loc_76CE4:                              # CODE XREF: ROM:00076CDC↑j
                st      r4, 0x54(g6)
                lda     0xC57A0000, r5
                notbit  0x1F, r5, r6
                lda     0x40855547, r3
                ld      0x60(g6), r4
                subr    r3, r4, r4
                cmpr    r4, r5
                bg      loc_76D10
                mov     r6, r4
loc_76D10:                              # CODE XREF: ROM:00076D08↑j
                st      r4, 0x60(g6)
                ld      0x64(g6), r4
                subr    r3, r4, r4
                cmpr    r4, r5
                bg      loc_76D28
                mov     r6, r4
loc_76D28:                              # CODE XREF: ROM:00076D20↑j
                st      r4, 0x64(g6)
                ret
# ---------------------------------------------------------------------------
giant_wing_disp:                        # DATA XREF: ROM:0009CEB8↓o
                ldob    mode, r3
                lda     mode9, r4
                cmpobne r3, r4, loc_76D5C
                ldob    _sub_mode, r3
                lda     sub_mode9, r4
                cmpobne r3, r4, loc_76D5C
                b       loc_76E30
# ---------------------------------------------------------------------------
loc_76D5C:                              # CODE XREF: ROM:00076D40↑j
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x501854, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_76DA4
                st      r13, 0x0(r15)
                b       loc_76DB0
# ---------------------------------------------------------------------------
loc_76DA4:                              # CODE XREF: ROM:00076D98↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_76DB0:                              # CODE XREF: ROM:00076DA0↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      floor_stage_size_0, r3
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                mov     0, g1
                lda     3706, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x501854, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
loc_76E30:                              # CODE XREF: ROM:00076D58↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x22004444, r15
                st      r15, (g11)[g12*1]
                mov     8, r15
                st      r15, (g11)[g12*1]
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x50183C, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_76E98
                st      r13, 0x0(r15)
                b       loc_76EA4
# ---------------------------------------------------------------------------
loc_76E98:                              # CODE XREF: ROM:00076E8C↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_76EA4:                              # CODE XREF: ROM:00076E94↑j
                mov     0, g1
                lda     2947, g0
                call    set_obj
                lda     displacement, r3
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      0x40(g6), r4
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                mov     0, g1
                lda     3321, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      0x44(g6), r4
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                mov     0, g1
                lda     3322, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x50183C, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x50184C, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_76FBC
                st      r13, 0x0(r15)
                b       loc_76FC8
# ---------------------------------------------------------------------------
loc_76FBC:                              # CODE XREF: ROM:00076FB0↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_76FC8:                              # CODE XREF: ROM:00076FB8↑j
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      0x48(g6), r4
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                mov     0, g1
                lda     3086, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      0x4C(g6), r4
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                mov     0, g1
                lda     3087, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      0x58(g6), r4
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                mov     0, g1
                lda     3086, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      0x5C(g6), r4
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                mov     0, g1
                lda     3087, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x447A0000, r5
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      0x50(g6), r4
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                mov     0, g1
                lda     3673, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0xC47A0000, r5
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      0x54(g6), r4
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                mov     0, g1
                lda     3673, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x50184C, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# ---------------------------------------------------------------------------
propeller_dsp:                          # DATA XREF: ROM:0009CED0↓o
                ld      0x2008(g10), r15 # Label from official source
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x50185C, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_771EC
                st      r13, 0x0(r15)
                b       loc_771F8
# ---------------------------------------------------------------------------
loc_771EC:                              # CODE XREF: ROM:000771E0↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_771F8:                              # CODE XREF: ROM:000771E8↑j
                lda     0x420D5C29, r4
                lda     0x41033333, r5
                lda     0x4128CCCD, r6
                ld      frame_counter, r3
                lda     2846, r11       # Giant Wing engine propeller
                bbs     0, r3, loc_77224
                lda     2863, r11       # Invisible square
loc_77224:                              # CODE XREF: ROM:0007721C↑j
                ld      floor_stage_size_0, r9
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                mov     0, g1
                lda     259, g0         # Giant Wing plane engine
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0xBF800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     259, g0         # Giant Wing plane engine
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x50185C, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                lda     0x50185C, r10
                ld      fa_camera, r12
                ld      0x20(r12), r8
                cmpr    r8, r6
                bg      loc_7734C
                lda     0x50184C, r10
loc_7734C:                              # CODE XREF: ROM:00077340↑j
                ld      0x2008(g10), r15
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     (r10), r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_77390
                st      r13, 0x0(r15)
                b       loc_7739C
# ---------------------------------------------------------------------------
loc_77390:                              # CODE XREF: ROM:00077384↑j
                setbit  0x1F, r13, r13
                st      r13, BUFF_RAM_START(r14)
loc_7739C:                              # CODE XREF: ROM:0007738C↑j
                shlo    7, 0x1B, r13
                mulo    r13, r3, r7
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                mov     0, g1
                lda     3888, g0        # Giant Wing engine spinner
                call    set_obj
                mov     0, g1
                lda     3889, g0        # Giant Wing engine spinner
                call    set_obj
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                mov     0, g1
                lda     (r11), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                notbit  0x1F, r4, r4
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                mov     0, g1
                lda     (r11), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     (r10), r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, BUFF_RAM_START(r14)
                ret
# ---------------------------------------------------------------------------
post_metal_stage_init:                  # DATA XREF: ROM:0009CEF0↓o
                ret
# ---------------------------------------------------------------------------
dword_774C8:    .long 0                 # DATA XREF: bookkeep_left_player_start+4↓r
                .long 4
                .long 2
                .long 6
dword_774D8:    .long 0                 # DATA XREF: bookkeep_right_player_start+4↓r
                .long 0x40000
                .long 0x20000
                .long 0x60000
# =============== S U B R O U T I N E =======================================
bookkeep_left_player_start:             # CODE XREF: player_entry+4C↑p
                mov     g0, r3          # Label from Fighting Vipers source
                ld      dword_774C8[r3*4], r4
                mov     1, r12
                or      r12, r4, r4
                ld      0x5000E4, r5
                or      r5, r4, r4
                st      r4, 0x5000E4
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldl     0x3318(r15), r12
                stl     r12, 0x5000EC
                ret
# End of function bookkeep_left_player_start
# =============== S U B R O U T I N E =======================================
bookkeep_right_player_start:            # CODE XREF: player_entry+130↑p
                mov     g0, r3          # Label from Fighting Vipers source
                ld      dword_774D8[r3*4], r4
                shlo    0x10, 1, r12
                or      r12, r4, r4
                ld      0x5000E4, r5
                or      r5, r4, r4
                st      r4, 0x5000E4
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldl     0x3318(r15), r12
                stl     r12, 0x5000F4
                ret
# End of function bookkeep_right_player_start
# =============== S U B R O U T I N E =======================================
sub_77570:                              # CODE XREF: ROM:00010CFC↑p
                ld      0x5000E4, r15
                lda     0xFFFF, r14
                and     r14, r15, r13
                cmpobne 0, r13, sub_77828
# End of function sub_77570
# =============== S U B R O U T I N E =======================================
sub_77588:                              # CODE XREF: ROM:0000B73C↑p
                ld      add_BACKUP_RAM_TO_RAM, r8
                ldl     0x3318(r8), r12 # total_game_time
                ldl     0x5000EC, r14
                cmpo    0, 1
                subc    r14, r12, r14
                subc    r15, r13, r15
                ld      0x5000E4, r3
                bbs     1, r3, loc_776E4
                bbs     2, r3, loc_77650
                ldl     0x33D0(r8), r10 # BACKUP_RAM_TO_RAM+0x33D0
                cmpo    0, 1
                addc    r14, r10, r6
                addc    r15, r11, r7
                st      r6, 0x1D033D0
                st      r6, 0x59C3D0
                st      r7, 0x1D033D4
                st      r7, 0x59C3D4
                addo    4, sp, sp
                st      g0, -4(sp)
                mov     r14, g0
                call    sub_77AC8
                ld      -4(sp), g0
                subo    4, sp, sp
                addo    4, sp, sp
                st      r15, -4(sp)
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x33F0(r15), r15 # BACKUP_RAM_TO_RAM+0x33F0
                addo    1, r15, r15
                st      r15, bk_1P_COUNT_B
                st      r15, 0x59C3F0
                ld      -4(sp), r15
                subo    4, sp, sp
                b       loc_7780C
# ---------------------------------------------------------------------------
loc_77650:                              # CODE XREF: sub_77588+30↑j
                ldl     0x33E0(r8), r10 # BACKUP_RAM_TO_RAM+0x33E0
                cmpo    0, 1
                addc    r14, r10, r6
                addc    r15, r11, r7
                st      r6, 0x1D033E0
                st      r6, 0x59C3E0
                st      r7, 0x1D033E4
                st      r7, 0x59C3E4
                addo    4, sp, sp
                st      g0, -4(sp)
                mov     r14, g0
                call    sub_77B38
                ld      -4(sp), g0
                subo    4, sp, sp
                addo    4, sp, sp
                st      r15, -4(sp)
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x33F8(r15), r15 # BACKUP_RAM_TO_RAM+0x33F8
                addo    1, r15, r15
                st      r15, bk_P1_CONTI_B
                st      r15, 0x59C3F8
                ld      -4(sp), r15
                subo    4, sp, sp
                b       loc_7780C
# ---------------------------------------------------------------------------
loc_776E4:                              # CODE XREF: sub_77588+2C↑j
                bbs     2, r3, loc_7777C
                ldl     0x33D8(r8), r10
                cmpo    0, 1
                addc    r14, r10, r6
                addc    r15, r11, r7
                st      r6, 0x1D033D8
                st      r6, 0x59C3D8
                st      r7, 0x1D033DC
                st      r7, 0x59C3DC
                addo    4, sp, sp
                st      g0, -4(sp)
                mov     r14, g0
                call    sub_77B00
                ld      -4(sp), g0
                subo    4, sp, sp
                addo    4, sp, sp
                st      r15, -4(sp)
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x33F4(r15), r15 # BACKUP_RAM_TO_RAM+0x33F4
                addo    1, r15, r15
                st      r15, bk_VS_COUNT_B
                st      r15, 0x59C3F4
                ld      -4(sp), r15
                subo    4, sp, sp
                b       loc_7780C
# ---------------------------------------------------------------------------
loc_7777C:                              # CODE XREF: sub_77588:loc_776E4↑j
                ldl     0x33E8(r8), r10
                cmpo    0, 1
                addc    r14, r10, r6
                addc    r15, r11, r7
                st      r6, 0x1D033E8
                st      r6, 0x59C3E8
                st      r7, 0x1D033EC
                st      r7, 0x59C3EC
                addo    4, sp, sp
                st      g0, -4(sp)
                mov     r14, g0
                call    sub_77B70
                ld      -4(sp), g0
                subo    4, sp, sp
                addo    4, sp, sp
                st      r15, -4(sp)
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x33FC(r15), r15
                addo    1, r15, r15
                st      r15, bk_VS_CONTI_B
                st      r15, 0x59C3FC
                ld      -4(sp), r15
                subo    4, sp, sp
loc_7780C:                              # CODE XREF: sub_77588+C4↑j
                lda     0xFFFF0000, r15
                and     r3, r15, r3
                st      r3, 0x5000E4
                call    write_stats_to_backup_ram
                ret
# End of function sub_77588
# =============== S U B R O U T I N E =======================================
sub_77828:                              # CODE XREF: ROM:0000B744↑p
                ld      add_BACKUP_RAM_TO_RAM, r8
                ldl     0x3318(r8), r12
                ldl     0x5000F4, r14
                cmpo    0, 1
                subc    r14, r12, r14
                subc    r15, r13, r15
                ld      0x5000E4, r3
                bbs     0x11, r3, loc_77984
                bbs     0x12, r3, loc_778F0
                ldl     0x33D0(r8), r10
                cmpo    0, 1
                addc    r14, r10, r6
                addc    r15, r11, r7
                st      r6, 0x1D033D0
                st      r6, 0x59C3D0
                st      r7, 0x1D033D4
                st      r7, 0x59C3D4
                addo    4, sp, sp
                st      g0, -4(sp)
                mov     r14, g0
                call    sub_77AC8
                ld      -4(sp), g0
                subo    4, sp, sp
                addo    4, sp, sp
                st      r15, -4(sp)
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x33F0(r15), r15
                addo    1, r15, r15
                st      r15, bk_1P_COUNT_B
                st      r15, 0x59C3F0
                ld      -4(sp), r15
                subo    4, sp, sp
                b       loc_77AAC
# ---------------------------------------------------------------------------
loc_778F0:                              # CODE XREF: sub_77828+30↑j
                ldl     0x33E0(r8), r10
                cmpo    0, 1
                addc    r14, r10, r6
                addc    r15, r11, r7
                st      r6, 0x1D033E0
                st      r6, 0x59C3E0
                st      r7, 0x1D033E4
                st      r7, 0x59C3E4
                addo    4, sp, sp
                st      g0, -4(sp)
                mov     r14, g0
                call    sub_77B38
                ld      -4(sp), g0
                subo    4, sp, sp
                addo    4, sp, sp
                st      r15, -4(sp)
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x33F8(r15), r15
                addo    1, r15, r15
                st      r15, bk_P1_CONTI_B
                st      r15, 0x59C3F8
                ld      -4(sp), r15
                subo    4, sp, sp
                b       loc_77AAC
# ---------------------------------------------------------------------------
loc_77984:                              # CODE XREF: sub_77828+2C↑j
                bbs     0x12, r3, loc_77A1C
                ldl     0x1D033D8, r10
                cmpo    0, 1
                addc    r14, r10, r6
                addc    r15, r11, r7
                st      r6, 0x1D033D8
                st      r6, 0x59C3D8
                st      r7, 0x1D033DC
                st      r7, 0x59C3DC
                addo    4, sp, sp
                st      g0, -4(sp)
                mov     r14, g0
                call    sub_77B00
                ld      -4(sp), g0
                subo    4, sp, sp
                addo    4, sp, sp
                st      r15, -4(sp)
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x33F4(r15), r15
                addo    1, r15, r15
                st      r15, bk_VS_COUNT_B
                st      r15, 0x59C3F4
                ld      -4(sp), r15
                subo    4, sp, sp
                b       loc_77AAC
# ---------------------------------------------------------------------------
loc_77A1C:                              # CODE XREF: sub_77828:loc_77984↑j
                ldl     0x33E8(r8), r10
                cmpo    0, 1
                addc    r14, r10, r6
                addc    r15, r11, r7
                st      r6, 0x1D033E8
                st      r6, 0x59C3E8
                st      r7, 0x1D033EC
                st      r7, 0x59C3EC
                addo    4, sp, sp
                st      g0, -4(sp)
                mov     r14, g0
                call    sub_77B70
                ld      -4(sp), g0
                subo    4, sp, sp
                addo    4, sp, sp
                st      r15, -4(sp)
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x33FC(r15), r15
                addo    1, r15, r15
                st      r15, bk_VS_CONTI_B
                st      r15, 0x59C3FC
                ld      -4(sp), r15
                subo    4, sp, sp
loc_77AAC:                              # CODE XREF: sub_77828+C4↑j
                lda     0xFFFF, r15
                and     r3, r15, r3
                st      r3, 0x5000E4
                call    write_stats_to_backup_ram
                ret
# End of function sub_77828
# =============== S U B R O U T I N E =======================================
sub_77AC8:                              # CODE XREF: sub_77588+78↑p
                shlo    7, 0xF, r15
                divo    r15, g0, r7
                cmpobge 0x14, r7, loc_77AD8
                mov     0x14, r7
loc_77AD8:                              # CODE XREF: sub_77AC8+8↑j
                ld      add_BACKUP_RAM_TO_RAM, r3
                ld      0x3520(r3)[r7*4], r4
                addo    1, r4, r4
                st      r4, 0x1D03520[r7*4]
                st      r4, 0x59C520[r7*4]
                ret
# End of function sub_77AC8
# =============== S U B R O U T I N E =======================================
sub_77B00:                              # CODE XREF: sub_77588+1A4↑p
                shlo    7, 0xF, r15
                divo    r15, g0, r7
                cmpobge 0x14, r7, loc_77B10
                mov     0x14, r7
loc_77B10:                              # CODE XREF: sub_77B00+8↑j
                ld      add_BACKUP_RAM_TO_RAM, r3
                ld      0x3948(r3)[r7*4], r4
                addo    1, r4, r4
                st      r4, 0x1D03948[r7*4]
                st      r4, 0x59C948[r7*4]
                ret
# End of function sub_77B00
# =============== S U B R O U T I N E =======================================
sub_77B38:                              # CODE XREF: sub_77588+10C↑p
                shlo    7, 0xF, r15
                divo    r15, g0, r7
                cmpobge 0x14, r7, loc_77B48
                mov     0x14, r7
loc_77B48:                              # CODE XREF: sub_77B38+8↑j
                ld      add_BACKUP_RAM_TO_RAM, r3
                ld      0x39F8(r3)[r7*4], r4
                addo    1, r4, r4
                st      r4, 0x1D039F8[r7*4]
                st      r4, 0x59C9F8[r7*4]
                ret
# End of function sub_77B38
# =============== S U B R O U T I N E =======================================
sub_77B70:                              # CODE XREF: sub_77588+238↑p
                shlo    7, 0xF, r15
                divo    r15, g0, r7
                cmpobge 0x14, r7, loc_77B80
                mov     0x14, r7
loc_77B80:                              # CODE XREF: sub_77B70+8↑j
                ld      add_BACKUP_RAM_TO_RAM, r3
                ld      0x39A0(r3)[r7*4], r4
                addo    1, r4, r4
                st      r4, 0x1D039A0[r7*4]
                st      r4, 0x59C9A0[r7*4]
                ret
# End of function sub_77B70
# =============== S U B R O U T I N E =======================================
sub_77BA8:                              # CODE XREF: ROM:000084AC↑p
                ldob    0x5000E9, r12
                setbit  0, r12, r12
                stob    r12, 0x5000E9
                ld      add_BACKUP_RAM_TO_RAM, r3
                ldl     0x3318(r3), r4  # r4 = BACKUP_RAM_START+0x3318 (total_time_bk)
                stl     r4, 0x50014C
                stl     r4, total_game_time_ram
                ldob    0x5000E9, r12
                setbit  1, r12, r12
                stob    r12, 0x5000E9
                mov     0, r4
                mov     r4, r5
                stl     r4, 0x500184
                stob    r4, 0x500194
                stob    r4, 0x500195
                stob    r4, 0x500196
                stob    r4, 0x500197
                stob    r4, 0x500198
                ret
# End of function sub_77BA8
# =============== S U B R O U T I N E =======================================
sub_77C2C:                              # CODE XREF: ROM:0000B734↑p
                ld      add_BACKUP_RAM_TO_RAM, r3
                ldob    gameprogram, r14 # bit 0 clear = Player 1
                cmpobl  1, r14, loc_77D1C
                ldob    gameprogram, r14 # bit 0 clear = Player 1
                cmpobe  1, r14, loc_77C70
                ldob    0x500194, r15
                addo    1, r15, r15
                stob    r15, 0x500194
                ldob    0x50004D, r14
                cmpobne 2, r14, loc_77CA0
                b       loc_77D04
# ---------------------------------------------------------------------------
loc_77C70:                              # CODE XREF: sub_77C2C+1C↑j
                ldob    0x500194, r15
                addo    1, r15, r15
                stob    r15, 0x500194
                mov     r7, r15
                mov     r8, r7
                mov     r15, r8
                ldob    0x50004D, r14
                cmpobne 2, r14, loc_77CA0
                b       loc_77D04
# ---------------------------------------------------------------------------
loc_77CA0:                              # CODE XREF: sub_77C2C+3C↑j
                ldob    0x500050, r14
                cmpobe  0, r14, loc_77CE8
                ldob    0x500050, r14
                cmpobe  1, r14, loc_77CD0
                ldob    0x500198, r15
                addo    1, r15, r15
                stob    r15, 0x500198
                b       loc_77DCC
# ---------------------------------------------------------------------------
loc_77CD0:                              # CODE XREF: sub_77C2C+88↑j
                ldob    0x500197, r15
                addo    1, r15, r15
                stob    r15, 0x500197
                b       loc_77DCC
# ---------------------------------------------------------------------------
loc_77CE8:                              # CODE XREF: sub_77C2C+7C↑j
                ldob    0x500196, r15
                addo    1, r15, r15
                stob    r15, 0x500196
                b       loc_77DCC
# ---------------------------------------------------------------------------
                b       loc_77DCC
# ---------------------------------------------------------------------------
loc_77D04:                              # CODE XREF: sub_77C2C+40↑j
                ldob    0x500195, r15
                addo    1, r15, r15
                stob    r15, 0x500195
                b       loc_77DCC
# ---------------------------------------------------------------------------
loc_77D1C:                              # CODE XREF: sub_77C2C+10↑j
                ldob    0x500199, r15
                addo    1, r15, r15
                stob    r15, 0x500199
                ldob    0x50004D, r14
                cmpobe  2, r14, loc_77DB8
                ldob    0x50004D, r14
                cmpobe  1, r14, loc_77D4C
                b       loc_77D58
# ---------------------------------------------------------------------------
loc_77D4C:                              # CODE XREF: sub_77C2C+118↑j
                mov     r8, r15
                mov     r7, r8
                mov     r15, r8
loc_77D58:                              # CODE XREF: sub_77C2C+11C↑j
                ldob    0x500050, r14
                cmpobe  0, r14, loc_77DA0
                ldob    0x500050, r14
                cmpobe  1, r14, loc_77D88
                ldob    0x50019D, r15
                addo    1, r15, r15
                stob    r15, 0x50019D
                b       loc_77DCC
# ---------------------------------------------------------------------------
loc_77D88:                              # CODE XREF: sub_77C2C+140↑j
                ldob    0x50019C, r15
                addo    1, r15, r15
                stob    r15, 0x50019C
                b       loc_77DCC
# ---------------------------------------------------------------------------
loc_77DA0:                              # CODE XREF: sub_77C2C+134↑j
                ldob    0x50019B, r15
                addo    1, r15, r15
                stob    r15, 0x50019B
                b       loc_77DCC
# ---------------------------------------------------------------------------
loc_77DB8:                              # CODE XREF: sub_77C2C+10C↑j
                ldob    0x50019A, r15
                addo    1, r15, r15
                stob    r15, 0x50019A
loc_77DCC:                              # CODE XREF: sub_77C2C+A0↑j
                call    write_stats_to_backup_ram
                ret
# End of function sub_77C2C
# =============== S U B R O U T I N E =======================================
write_intrude_times:                    # CODE XREF: INTRUDE_INT+24↑p
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldl     0x3318(r15), r4 # r4 = total_game_time_bk
                ldl     total_game_time_ram, r6
                cmpo    1, 0
                subc    r6, r4, r6
                subc    r7, r5, r7
                ldl     0x33C8(r15), r4 # r4 = wait_game_time_bk
                cmpo    1, 0
                addc    r6, r4, r6
                addc    r7, r5, r7
                stl     r6, wait_game_time_bk
                stl     r6, wait_game_time
                ldl     0x3318(r15), r4 # r4 = total_game_time_bk
                stl     r4, total_game_time_ram
                call    write_stats_to_backup_ram
                ret
# End of function write_intrude_times
# =============== S U B R O U T I N E =======================================
sub_77E34:                              # CODE XREF: TEST_INT↑p
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldob    0x5000E9, r12
                bbc     0, r12, loc_77EAC
                ldob    0x5000E9, r12
                clrbit  0, r12, r12
                stob    r12, 0x5000E9
                ldl     0x50014C, r4
                ldl     0x3318(r15), r6 # total_game_time
                cmpo    0, 1
                subc    r4, r6, r4
                subc    r5, r7, r5
                ldl     0x33A8(r15), r6 # play_time
                cmpo    0, 1
                addc    r4, r6, r4
                addc    r5, r7, r5
                st      r4, play_time_bk
                st      r4, play_time
                st      r5, 0x1D033AC
                st      r5, 0x59C3AC
loc_77EAC:                              # CODE XREF: sub_77E34+10↑j
                ldob    0x5000E9, r12
                bbc     1, r12, loc_77ECC
                ldob    0x5000E9, r12
                clrbit  1, r12, r12
                stob    r12, 0x5000E9
loc_77ECC:                              # CODE XREF: sub_77E34+80↑j
                call    write_stats_to_backup_ram
                ret
# End of function sub_77E34
# =============== S U B R O U T I N E =======================================
bookkeep_all_end:                       # CODE XREF: ROM:all_end↑p
                ld      add_BACKUP_RAM_TO_RAM, r15 # Label from Fighting Vipers source
                ldob    0x5000E9, r12
                clrbit  0, r12, r12
                clrbit  1, r12, r12
                stob    r12, 0x5000E9
                ldl     0x50014C, r4
                ldl     0x3318(r15), r6 # total_game_time
                cmpo    0, 1
                subc    r4, r6, r4
                subc    r5, r7, r5
                ldl     0x33A8(r15), r6 # play_time
                cmpo    0, 1
                addc    r4, r6, r4
                addc    r5, r7, r5
                st      r4, play_time_bk
                st      r4, play_time
                st      r5, 0x1D033AC
                st      r5, 0x59C3AC
                call    write_stats_to_backup_ram
                ret
# End of function bookkeep_all_end
# =============== S U B R O U T I N E =======================================
save_stats_and_reset_counters:          # CODE XREF: MEZASE_DEATHEGG_INT-808↑p
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldl     0x3318(r15), r4 # BACKUP_RAM_TO_RAM+0x3318
                ldl     total_game_time_ram, r6
                cmpo    1, 0
                subc    r6, r4, r6
                subc    r7, r5, r7
                ldl     0x500184, r4
                cmpo    1, 0
                addc    r6, r4, r4
                addc    r7, r5, r5
                ldl     0x33B8(r15), r6 # BACKUP_RAM_TO_RAM+0x33B8
                cmpo    1, 0
                addc    r6, r4, r6
                addc    r7, r5, r7
                st      r6, game_time_1p_bk
                st      r6, game_time_1p
                st      r7, 0x1D033BC
                st      r7, 0x59C3BC
                ld      add_BACKUP_RAM_TO_RAM, r6
                ld      0x3400(r6), r6  # BACKUP_RAM_TO_RAM+0x3400
                cmpibge 0, r6, loc_77FD0
                cmpibge r4, r6, loc_77FE0
loc_77FD0:                              # CODE XREF: save_stats_and_reset_counters+7C↑j
                st      r4, min_time_1p_bk
                st      r4, min_time_1p
loc_77FE0:                              # CODE XREF: save_stats_and_reset_counters+80↑j
                ld      add_BACKUP_RAM_TO_RAM, r6
                ld      0x3404(r6), r6  # BACKUP_RAM_TO_RAM+0x3404
                cmpibge r6, r4, loc_78004
                st      r4, max_time_1p_bk
                st      r4, max_time_1p
loc_78004:                              # CODE XREF: save_stats_and_reset_counters+A4↑j
                mov     0, r4
                mov     r4, r5
                stl     r4, 0x500184
                addo    4, sp, sp
                st      r15, -4(sp)
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x33B0(r15), r15
                addo    1, r15, r15
                st      r15, bk_1P_COUNT_A
                st      r15, _1P_COUNT_A
                ld      -4(sp), r15
                subo    4, sp, sp
                ldob    0x500194, r12
                ld      add_BACKUP_RAM_TO_RAM, r10
                ld      0x340C(r10), r10
                addo    r12, r10, r10
                st      r10, set_count_bk
                st      r10, set_count
                ldob    0x500195, r12
                ld      add_BACKUP_RAM_TO_RAM, r10
                ld      0x3410(r10), r10
                addo    r12, r10, r10
                st      r10, draw_count_bk
                st      r10, draw_count
                ldob    0x500196, r12
                ld      add_BACKUP_RAM_TO_RAM, r10
                ld      0x3414(r10), r10
                addo    r12, r10, r10
                st      r10, win_by_ko_count_bk
                st      r10, win_by_ko_count
                ldob    0x500197, r12
                ld      add_BACKUP_RAM_TO_RAM, r10
                ld      0x3418(r10), r10 # r10 = BACKUP_RAM_TO_RAM+0x3418 and BACKUP_RAM_START+0x3418
                addo    r12, r10, r10
                st      r10, 0x1D03418
                st      r10, 0x59C418
                ldob    0x500198, r12
                ld      add_BACKUP_RAM_TO_RAM, r10
                ld      0x341C(r10), r10
                addo    r12, r10, r10
                st      r10, win_by_judge_count_bk
                st      r10, win_by_judge_count
                mov     0, r4
                stob    r4, 0x500194
                stob    r4, 0x500195
                stob    r4, 0x500196
                stob    r4, 0x500197
                stob    r4, 0x500198
                ldl     0x3318(r15), r4
                stl     r4, total_game_time_ram
                ldob    0x5000E9, r12
                clrbit  1, r12, r12
                stob    r12, 0x5000E9
                call    write_stats_to_backup_ram
                ret
# End of function save_stats_and_reset_counters
# =============== S U B R O U T I N E =======================================
sub_78184:                              # CODE XREF: CONTINUE_DSP+A0↑p
                ld      add_BACKUP_RAM_TO_RAM, r12
                mov     g0, r3
                cmpobe  3, r3, loc_781D4
                addo    4, sp, sp
                st      r15, -4(sp)
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3408(r15), r15
                addo    1, r15, r15
                st      r15, continue_count_1p_bk
                st      r15, continue_count_1p
                ld      -4(sp), r15
                subo    4, sp, sp
                b       loc_78210
# ---------------------------------------------------------------------------
loc_781D4:                              # CODE XREF: sub_78184+C↑j
                addo    4, sp, sp
                st      r15, -4(sp)
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3608(r15), r15
                addo    1, r15, r15
                st      r15, continue_count_vs_bk
                st      r15, continue_count_vs
                ld      -4(sp), r15
                subo    4, sp, sp
loc_78210:                              # CODE XREF: sub_78184+4C↑j
                call    write_stats_to_backup_ram
                ret
# End of function sub_78184
# =============== S U B R O U T I N E =======================================
sub_78218:                              # CODE XREF: ROUND_INT+1D0↑p
                ld      add_BACKUP_RAM_TO_RAM, r4
                ld      0x3318(r4), r4
                ld      add_BACKUP_RAM_TO_RAM, r5
                ld      0x331C(r5), r5
                stl     r4, 0x50018C
                mov     0, r3
                stob    r3, 0x500199
                stob    r3, 0x50019A
                stob    r3, 0x50019B
                stob    r3, 0x50019C
                stob    r3, 0x50019D
                ret
# End of function sub_78218
# =============== S U B R O U T I N E =======================================
sub_78270:                              # CODE XREF: ROM:0000B724↑p
                ld      add_BACKUP_RAM_TO_RAM, r11
                ldob    gameprogram, r3 # bit 0 clear = Player 1
                cmpobe  2, r3, loc_7830C
                ldob    STAGE_ID, r5
                subo    1, r5, r5
                ld      0x3420(r11)[r5*16], r4
                addo    1, r4, r4
                st      r4, 0x1D03420[r5*16]
                st      r4, 0x59C420[r5*16]
                ldl     0x50018C, r6
                ld      loc_3318(r11), r8
                ld      loc_331C(r11), r9
                cmpo    1, 0
                subc    r6, r8, r6
                subc    r7, r9, r7
                ld      loc_3428(r11)[r5*16], r14
                ld      loc_342C(r11)[r5*16], r15
                cmpo    1, 0
                addc    r6, r14, r6
                addc    r7, r15, r7
                st      r6, 0x1D03428[r5*16]
                st      r7, 0x1D0342C[r5*16]
                st      r6, 0x59C428[r5*16]
                st      r7, 0x59C42C[r5*16]
loc_7830C:                              # CODE XREF: sub_78270+10↑j
                call    write_stats_to_backup_ram
                ret
# End of function sub_78270
# =============== S U B R O U T I N E =======================================
sub_78314:                              # CODE XREF: MEZASE_DEATHEGG_INT:all_round_clear↑p
                ld      add_BACKUP_RAM_TO_RAM, r11
                ldob    STAGE_ID, r5
                subo    1, r5, r5
                b       loc_78390
# End of function sub_78314
# =============== S U B R O U T I N E =======================================
sub_7832C:                              # CODE XREF: ROM:0000B72C↑p
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldl     0x3318(r15), r4 # r4 = BACKUP_RAM_TO_RAM+0x3318 and BACKUP_RAM_START+0x3318
                ldl     total_game_time_ram, r6
                cmpo    1, 0
                subc    r6, r4, r6
                subc    r7, r5, r7
                ldl     0x500184, r4
                cmpo    1, 0
                addc    r6, r4, r6
                addc    r7, r5, r7
                stl     r6, 0x500184
                ldl     0x3318(r15), r4 # r4 = BACKUP_RAM_TO_RAM+0x3318 and BACKUP_RAM_START+0x3318
                stl     r4, total_game_time_ram
                ld      add_BACKUP_RAM_TO_RAM, r11
                ldob    STAGE_ID, r5
                subo    1, r5, r5
loc_78390:                              # CODE XREF: sub_78314+14↑j
                ld      0x3424(r11)[r5*16], r4
                addo    1, r4, r4
                st      r4, 0x1D03424[r5*16]
                st      r4, 0x59C424[r5*16]
                call    write_stats_to_backup_ram
                ret
# End of function sub_7832C
# =============== S U B R O U T I N E =======================================
sub_783B4:                              # CODE XREF: ROM:0000B74C↑p
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldl     0x3318(r15), r4
                ldl     total_game_time_ram, r6
                cmpo    1, 0
                subc    r6, r4, r4
                subc    r7, r5, r5
                ldl     0x33C0(r15), r6
                cmpo    1, 0
                addc    r6, r4, r6
                addc    r7, r5, r7
                st      r6, bk_vs_game_time
                st      r6, 0x59C3C0
                st      r7, 0x1D033C4
                st      r7, 0x59C3C4
                shro    6, r4, r6
                subo    8, r6, r6
                mov     3, r13
                divo    r13, r6, r6
                addo    0x1F, 1, r13
                cmpobge r13, r6, loc_78428
                mov     r13, r6
loc_78428:                              # CODE XREF: sub_783B4+6C↑j
                ld      0x3620(r15)[r6*4], r13
                addo    1, r13, r13
                st      r13, 0x1D03620[r6*4]
                st      r13, 0x59C620[r6*4]
                ld      add_BACKUP_RAM_TO_RAM, r6
                ld      0x3600(r6), r6
                cmpibge 0, r6, loc_7845C
                cmpibge r4, r6, loc_7846C
loc_7845C:                              # CODE XREF: sub_783B4+A0↑j
                st      r4, min_vs_time_bk
                st      r4, min_vs_time_ram
loc_7846C:                              # CODE XREF: sub_783B4+A4↑j
                ld      add_BACKUP_RAM_TO_RAM, r6
                ld      0x3604(r6), r6
                cmpibge r6, r4, loc_78490
                st      r4, max_vs_time_bk
                st      r4, max_vs_time_ram
loc_78490:                              # CODE XREF: sub_783B4+C8↑j
                ld      fa_rob0, r11
                ld      fa_rob1, r12
                ldob    0x1B1(r11), r11
                ldob    0x1B1(r12), r12
                cmpobge 0xC, r11, loc_784B0
                mov     0xC, r11
loc_784B0:                              # CODE XREF: sub_783B4+F4↑j
                cmpobge 0xC, r12, loc_784B8
                mov     0xC, r12
loc_784B8:                              # CODE XREF: sub_783B4:loc_784B0↑j
                ldob    byte_DC0E4[r11], r11
                ldob    byte_DC0E4[r12], r12
                addo    0x1F, 0x15, r13
                mulo    r11, r13, r9
                mulo    r12, r13, r10
                ldob    0x50004E, r13
                cmpobe  0, r13, loc_784F8
                mov     r11, r13
                mov     r12, r11
                mov     r13, r12
                mov     r9, r13
                mov     r10, r9
                mov     r13, r10
loc_784F8:                              # CODE XREF: sub_783B4+128↑j
                addo    r15, r9, r8
                ldos    0x36A4(r8)[r12*4], r13
                addo    1, r13, r13
                stos    r13, 0x1D036A4(r9)[r12*4]
                stos    r13, 0x59C6A4(r9)[r12*4]
                addo    r15, r10, r8
                ldos    0x36A6(r8)[r11*4], r13
                addo    1, r13, r13
                stos    r13, 0x1D036A6(r10)[r11*4]
                stos    r13, 0x59C6A6(r10)[r11*4]
                ldos    0x3A50(r15)[r11*2], r13
                ldos    0x5000A2, r14
                cmpo    r14, r13
                ble     loc_78560
                stos    r14, 0x1D03A50[r11*2]
                stos    r14, 0x59CA50[r11*2]
loc_78560:                              # CODE XREF: sub_783B4+198↑j
                addo    4, sp, sp
                st      r15, -4(sp)
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x33B4(r15), r15
                addo    1, r15, r15
                st      r15, VS_COUNT_A_bk
                st      r15, VS_COUNT_A
                ld      -4(sp), r15
                subo    4, sp, sp
                ldob    0x500199, r12
                ld      add_BACKUP_RAM_TO_RAM, r10
                ld      0x360C(r10), r10
                addo    r12, r10, r10
                st      r10, set_count_vs_bk
                st      r10, set_count_vs
                ldob    0x50019A, r12
                ld      add_BACKUP_RAM_TO_RAM, r10
                ld      0x3610(r10), r10
                addo    r12, r10, r10
                st      r10, draw_count_vs_bk
                st      r10, draw_count_vs
                ldob    0x50019B, r12
                ld      add_BACKUP_RAM_TO_RAM, r10
                ld      0x3614(r10), r10
                addo    r12, r10, r10
                st      r10, win_by_ko_count_vs_bk
                st      r10, win_by_ko_count_vs
                ldob    0x50019C, r12
                ld      add_BACKUP_RAM_TO_RAM, r10
                ld      0x3618(r10), r10
                addo    r12, r10, r10
                st      r10, 0x1D03618
                st      r10, 0x59C618
                ldob    0x50019D, r12
                ld      add_BACKUP_RAM_TO_RAM, r10
                ld      0x361C(r10), r10
                addo    r12, r10, r10
                st      r10, win_by_judge_count_vs_bk
                st      r10, win_by_judge_count_vs
                mov     0, r4
                stob    r4, 0x500199
                stob    r4, 0x50019A
                stob    r4, 0x50019B
                stob    r4, 0x50019C
                stob    r4, 0x50019D
                ldl     0x3318(r15), r4
                stl     r4, total_game_time_ram
                call    write_stats_to_backup_ram
                ret
# End of function sub_783B4
# =============== S U B R O U T I N E =======================================
bookkeep_all_clock:                     # CODE XREF: main_loop+8C↑p
                ldob    0x500171, r3 # Label from official source
                bbc     0, r3, loc_786D0
                call    power_test_check
                cmpobne 0, g0, loc_78728
loc_786D0:                              # CODE XREF: bookkeep_all_clock+8↑j
                ldob    also_mode, r15
                lda     check_word1, r14
                lda     check_word1+1, r13
                cmpobe  r14, r15, loc_78724
                cmpobe  r13, r15, loc_78724
                ldl     total_game_time, r14
                cmpo    1, 0
                addc    1, r14, r14
                addc    0, r15, r15
                st      r14, total_game_time_bk
                st      r14, total_game_time
                st      r15, 0x1D0331C
                st      r15, 0x59C31C
loc_78724:                              # CODE XREF: bookkeep_all_clock+2C↑j
                ret
# ---------------------------------------------------------------------------
loc_78728:                              # CODE XREF: bookkeep_all_clock+10↑j
                ldob    0x500171, r3
                clrbit  0, r3, r3
                stob    r3, 0x500171
                lda     BACKUP_RAM_TO_RAM, r15
                st      r15, add_BACKUP_RAM_TO_RAM
                ret
# End of function bookkeep_all_clock
# =============== S U B R O U T I N E =======================================
# Ring Scatter
ring_tobitiri_init:                     # CODE XREF: ROM:000071E4↑p
                xor     r4, r4, r4      # Label from official source
                xor     r5, r5, r5
                lda     99, r6
                stl     r4, 0x574008
                st      r6, 0x574000
                lda     0x574B18, r4
                mov     0, r15
                st      r15, (r4)
                mov     0, r15
                st      r15, 4(r4)
                ret
# End of function ring_tobitiri_init
# =============== S U B R O U T I N E =======================================
# Ring Scatter
ring_tobitiri_set:                      # CODE XREF: damage_calculation+4C↑p
                ldob    0x1B1(g7), r14  # Label from official source
                cmpobe  3, r14, loc_7879C # if Metal Sonic return
                ldob    0x1B1(g7), r14
                cmpobe  14, r14, loc_7879C # if Rocket Metal return
                b       loc_787A0
# ---------------------------------------------------------------------------
loc_7879C:                              # CODE XREF: ring_tobitiri_set+4↑j
                ret
# ---------------------------------------------------------------------------
loc_787A0:                              # CODE XREF: ring_tobitiri_set+10↑j
                ldob    0x1B1(g7), r14  # P1_SELECTED or P2_SELECTED
                cmpobe  11, r14, loc_787D8 # If Eggman Boss branch
                ldob    0x1B1(g7), r14
                cmpobe  13, r14, loc_787D8 # If Egg Minion branch
                addo    4, sp, sp
                st      g0, -4(sp)
                lda     0xAE1102, g0    # sd_ring_2
                call    check_same_sound
                call    sound_request_u
                ld      -4(sp), g0
                subo    4, sp, sp
loc_787D8:                              # CODE XREF: ring_tobitiri_set+1C↑j
                ld      0x574000, r8
                lda     99, r9
                cmpo    r8, r9
                bne     loc_78804
                mov     24, r4
                subo    1, r4, r4
                st      r4, 0x574000
                st      r4, finish_wall_flag
loc_78804:                              # CODE XREF: ring_tobitiri_set+60↑j
                ldt     0x1F4(g7), r4
                ldt     0x1F4(g8), r8
                subr    r8, r4, r4
                subr    r10, r6, r6
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                lda     0x6000C0C, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                ld      finish_wall_flag, r9
                xor     r10, r10, r10
                lda     0x1B4, r13
                ldos    0x1A8(g7), r14
                cmpobe  r13, r14, loc_78944
                cmpobl  0x14, g0, loc_788BC
                mov     2, r11
                addo    0x1F, 0x1D, r15
                st      r15, 0x574B10
                lda     0x5A, r15
                st      r15, 0x574B14
                lda     dword_AE428, r3
                b       loc_78980
# ---------------------------------------------------------------------------
loc_788BC:                              # CODE XREF: ring_tobitiri_set+108↑j
                mov     0x1E, r11
                cmpobl  r11, g0, loc_788EC
                mov     4, r11
                lda     0x5A, r15
                st      r15, 0x574B10
                lda     0x8C, r15
                st      r15, 0x574B14
                lda     dword_AE434, r3
                b       loc_78980
# ---------------------------------------------------------------------------
loc_788EC:                              # CODE XREF: ring_tobitiri_set+138↑j
                addo    0x1F, 0x1D, r11
                cmpobl  r11, g0, loc_7891C
                mov     8, r11
                shlo    3, 0xF, r15
                st      r15, 0x574B10
                lda     0xB4, r15
                st      r15, 0x574B14
                lda     dword_AE440, r3
                b       loc_78980
# ---------------------------------------------------------------------------
loc_7891C:                              # CODE XREF: ring_tobitiri_set+168↑j
                mov     0x10, r11
                lda     0x96, r15
                st      r15, 0x574B10
                lda     0xD2, r15
                st      r15, 0x574B14
                lda     dword_AE458, r3
                b       loc_78980
# ---------------------------------------------------------------------------
loc_78944:                              # CODE XREF: ring_tobitiri_set+104↑j
                mov     8, r11
                lda     displacement2, r15
                ldob    stage_num, r14
                cmpobne r15, r14, loc_78960
                mov     4, r11
loc_78960:                              # CODE XREF: ring_tobitiri_set+1D0↑j
                lda     0x5A, r15
                st      r15, 0x574B10
                lda     0x8C, r15
                st      r15, 0x574B14
                lda     dword_AE47C, r3
loc_78980:                              # CODE XREF: ring_tobitiri_set+130↑j
                cmpo    r10, r11
                bge     loc_78B24
                lda     loc_78AFC, r12
                balx    spanbit_ring, r14
                balx    setbit_ring, r14
loc_789A0:                              # CODE XREF: ring_tobitiri_set+398↓j
                addo    0x1F, 0xD, r8
                mulo    r8, r9, r8
                lda     0x574010(r8), r8
                st      r7, 0x0(r8)
                mov     r7, r9
                addo    0x1F, 0xD, r8
                mulo    r7, r8, r7
                lda     0x574010(r7), r7
                ld      (r3), r4
                cmpobge r4, r10, loc_789D4
                addo    0xC, r3, r3
loc_789D4:                              # CODE XREF: ring_tobitiri_set+244↑j
                and     7, r10, r4
                mov     0x10, r8
                mulo    r4, r8, r8
                ldl     0xAE3A8(r8), r12
                xor     r14, r14, r14
                ldt     0x20C(g7), r4
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                ld      (g11)[g12*1], r13
                ld      (g11)[g12*1], r14
                addr    r4, r12, r4
                addr    r5, r13, r5
                addr    r6, r14, r6
                stt     r4, 8(r7)
                addo    8, r8, r8
                ldl     0xAE3A8(r8), r4
                xor     r6, r6, r6
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r6
                ld      (g11)[g12*1], r5
                ld      4(r3), r12
                mulr    r4, r12, r4
                mulr    r5, r12, r5
                stl     r4, 0x14(r7)
                mov     0, r15
                st      r15, 4(r7)
                ld      8(r3), r15
                st      r15, 0x1C(r7)
                ld      0x574B10, r15
                st      r15, 0x20(r7)
                ld      0x574B14, r15
                st      r15, 0x24(r7)
                ldob    0x1B1(g7), r14
                cmpobe  0xB, r14, loc_78AB8
                ldob    0x1B1(g7), r14
                cmpobe  0xD, r14, loc_78AB8
                lda     0x1B4, r13
                ldos    0x1A8(g7), r14
                cmpobe  r13, r14, loc_78AE4
                mov     0, r15
                st      r15, 0x28(r7)
                b       loc_78AEC
# ---------------------------------------------------------------------------
loc_78AB8:                              # CODE XREF: ring_tobitiri_set+30C↑j
                addo    4, sp, sp
                st      g0, -4(sp)
                call    rand            # Random value stored to g0
                and     3, g0, r4
                ld      -4(sp), g0
                subo    4, sp, sp
                addo    1, r4, r4
                st      r4, 0x28(r7)
                b       loc_78AEC
# ---------------------------------------------------------------------------
loc_78AE4:                              # CODE XREF: ring_tobitiri_set+320↑j
                mov     5, r15
                st      r15, 0x28(r7)
loc_78AEC:                              # CODE XREF: ring_tobitiri_set+32C↑j
                st      r9, finish_wall_flag
                addo    1, r10, r10
                b       loc_78980
# ---------------------------------------------------------------------------
loc_78AFC:                              # DATA XREF: ring_tobitiri_set+200↑o
                ld      0x574000, r7
                addo    0x1F, 0xD, r4
                mulo    r4, r7, r5
                lda     0x574010(r5), r5
                ld      0x0(r5), r5
                st      r5, 0x574000
                b       loc_789A0
# ---------------------------------------------------------------------------
loc_78B24:                              # CODE XREF: ring_tobitiri_set+1FC↑j
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# End of function ring_tobitiri_set
# =============== S U B R O U T I N E =======================================
down_star:                              # CODE XREF: ring_tobitiri+20↓p
                lda     0x3F800000, r8  # Label from official source
                addr    r5, r8, r5
                mov     4, r8
                mulo    r7, r8, r7
                lda     0x574B18(r7), r7
                ld      0x0(r7), r11
                ld      debug_flag, r15
                bbs     5, r15, loc_78B68
                addo    1, r11, r11
                st      r11, 0x0(r7)
loc_78B68:                              # CODE XREF: down_star+28↑j
                shlo    0xA, r11, r12
                shlo    0xB, r11, r13
                lda     0x3FC00000, r9
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r13
                addr    r9, r13, r13
                subr    r13, r9, r7
                shlo    0xE, 1, r9
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                addr    r4, r8, r8
                addr    r6, r10, r10
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                mov     0, g1
                lda     211, g0         # Yellow star
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                addo    r12, r9, r12
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                addr    r4, r8, r8
                addr    r6, r10, r10
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                mov     0, g1
                lda     211, g0         # Yellow star
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                addo    r12, r9, r12
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                addr    r4, r8, r8
                addr    r6, r10, r10
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                mov     0, g1
                lda     211, g0         # Yellow star
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                addo    r12, r9, r12
                lda     0x11002222, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                addr    r4, r8, r8
                addr    r6, r10, r10
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                mov     0, g1
                lda     211, g0         # Yellow star
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                bx      (g14)
# End of function down_star
# =============== S U B R O U T I N E =======================================
# Ring Scatter
ring_tobitiri:                          # CODE XREF: camera_init:loc_20820↑p
                ld      fa_rob0, r7     # Label from official source
                ld      0x1A4(r7), r15
                bbc     0x10, r15, loc_78E1C
                ld      0x1A4(r7), r15
                bbs     0xF, r15, loc_78E1C
                ldt     0x20C(r7), r4
                mov     0, r7
                bal     down_star
loc_78E1C:                              # CODE XREF: ring_tobitiri+C↑j
                ld      fa_rob1, r8
                ld      0x1A4(r8), r15
                bbc     0x10, r15, loc_78E40
                ld      0x1A4(r8), r15
                bbs     0xF, r15, loc_78E40
                ldt     0x20C(r8), r4
                mov     1, r7
                bal     down_star
loc_78E40:                              # CODE XREF: ring_tobitiri+30↑j
                ld      0x574000, r11
                mov     r11, r12
                lda     0x63, r13
                cmpo    r12, r13
                be      loc_79168       # return
                ld      finish_wall_flag, r13
ring_tobitiri_loop:                     # CODE XREF: ring_tobitiri+C4↓j
                addo    31, 13, r7      # Label from official source
                mulo    r7, r12, r7
                lda     0x574010(r7), r7
                ld      debug_flag, r15
                bbs     5, r15, loc_78FA0
                ld      4(r7), r10
                addo    1, r10, r10
                st      r10, 4(r7)
                ld      0x24(r7), r9
                cmpo    r9, r10
                bg      loc_78F00
                balx    clrbit_ring, r14
                cmpo    r11, r12
                bne     loc_78EC0
                cmpo    r12, r13
                be      loc_78EF8
                ld      0x0(r7), r12
                mov     r12, r11
                st      r11, 0x574000
                b       ring_tobitiri_loop
# ---------------------------------------------------------------------------
loc_78EC0:                              # CODE XREF: ring_tobitiri+A8↑j
                cmpo    r12, r13
                bne     loc_78ED8
                mov     r11, r13
                st      r13, finish_wall_flag
                b       loc_79168       # return
# ---------------------------------------------------------------------------
loc_78ED8:                              # CODE XREF: ring_tobitiri+CC↑j
                ld      0x0(r7), r4
                addo    0x1F, 0xD, r5
                mulo    r5, r11, r5
                lda     0x574010(r5), r5
                st      r4, 0x0(r5)
                mov     r4, r12
                b       loc_78F00
# ---------------------------------------------------------------------------
loc_78EF8:                              # CODE XREF: ring_tobitiri+B0↑j
                call    ring_tobitiri_init # Ring Scatter
                b       loc_79168       # return
# ---------------------------------------------------------------------------
loc_78F00:                              # CODE XREF: ring_tobitiri+98↑j
                ldt     8(r7), r4
                chkbit  0x1F, r5
                bno     loc_78F14
                xor     r5, r5, r5
                b       loc_78FB0
# ---------------------------------------------------------------------------
loc_78F14:                              # CODE XREF: ring_tobitiri+110↑j
                ldl     0x14(r7), r8
                addr    r4, r8, r4
                addr    r6, r9, r6
                lda     0x40F00000, r14
                clrbit  0x1F, r4, r15
                cmpr    r14, r15
                bg      loc_78F44
                notbit  0x1F, r8, r8
                chkbit  0x1F, r4
                alterbit 0x1F, r14, r4
                st      r8, 0x14(r7)
loc_78F44:                              # CODE XREF: ring_tobitiri+138↑j
                clrbit  0x1F, r6, r15
                cmpr    r14, r15
                bg      loc_78F60
                notbit  0x1F, r9, r9
                chkbit  0x1F, r6
                alterbit 0x1F, r14, r6
                st      r9, 0x18(r7)
loc_78F60:                              # CODE XREF: ring_tobitiri+154↑j
                ld      4(r7), r10
                ld      0x1C(r7), r14
                ld      (r14)[r10*4], r5
                chkbit  0x1F, r5
                be      loc_78F94
                cmpobne 0, r5, loc_78F8C
                lda     0x3F333333, r14
                mulr    r14, r8, r8
                mulr    r14, r9, r9
                stl     r8, 0x14(r7)
loc_78F8C:                              # CODE XREF: ring_tobitiri+17C↑j
                stt     r4, 8(r7)
                b       loc_78FB0
# ---------------------------------------------------------------------------
loc_78F94:                              # CODE XREF: ring_tobitiri+178↑j
                stt     r4, 8(r7)
                xor     r5, r5, r5
                b       loc_78FB0
# ---------------------------------------------------------------------------
loc_78FA0:                              # CODE XREF: ring_tobitiri+80↑j
                ldt     8(r7), r4
                chkbit  0x1F, r5
                bno     loc_78FB0
                xor     r5, r5, r5
loc_78FB0:                              # CODE XREF: ring_tobitiri+118↑j
                ld      4(r7), r9
                ld      0x20(r7), r10
                cmpo    r10, r9
                bg      loc_78FC4
                bbs     1, r9, loc_79158
loc_78FC4:                              # CODE XREF: ring_tobitiri+1C4↑j
                ld      0x28(r7), r14
                cmpobne 0, r14, loc_79064
                and     0xF, r9, r9
                ld      fat_ring_spin_animation[r9*4], r8
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                mov     0, g1
                lda     (r8), g0
                call    set_obj
                lda     displacement2, r15
                ldob    stage_num, r14
                cmpobne r15, r14, loc_79054
                addr    r5, r5, r5
                xor     r4, r4, r4
                setbit  0x1F, r5, r5
                ld      thin_ring_spin_animation[r9*4], r8
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                mov     0, g1
                lda     (r8), g0
                call    set_obj
loc_79054:                              # CODE XREF: ring_tobitiri+220↑j
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                b       loc_79158
# ---------------------------------------------------------------------------
loc_79064:                              # CODE XREF: ring_tobitiri+1D0↑j
                ld      0x28(r7), r8
                subo    1, r8, r8
                ld      non_ring_item_drops_when_hit[r8*4], r8
                and     0xF, r9, r9
                shlo    0xC, r9, r9
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                mov     0, g1
                lda     (r8), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     displacement2, r15
                ldob    stage_num, r14
                cmpobne r15, r14, loc_79158
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     0xBF800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                mov     0, g1
                lda     (r8), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_79158:                              # CODE XREF: ring_tobitiri+1C8↑j
                mov     r12, r11
                ld      0x0(r7), r12
                cmpo    r11, r13
                bne     ring_tobitiri_loop
loc_79168:                              # CODE XREF: ring_tobitiri+5C↑j
                ret                     # return
# End of function ring_tobitiri
# =============== S U B R O U T I N E =======================================
spanbit_ring:                           # CODE XREF: ring_tobitiri_set+208↑p
                addo    4, sp, sp       # Label from official source
                st      r14, -4(sp)
                lda     0xFF000000, r14
                ld      0x574008, r15
                or      r14, r15, r14
                spanbit r14, r7
                bno     loc_791A4
                ld      -4(sp), r14
                subo    4, sp, sp
                bx      (r14)
# ---------------------------------------------------------------------------
loc_791A4:                              # CODE XREF: spanbit_ring+24↑j
                ld      -4(sp), r14
                subo    4, sp, sp
                bx      (r12)
# End of function spanbit_ring
# =============== S U B R O U T I N E =======================================
setbit_ring:                            # CODE XREF: ring_tobitiri_set+210↑p
                ld      0x574008, r15 # Label from official source
                setbit  r7, r15, r15
                st      r15, 0x574008
                bx      (r14)
# End of function setbit_ring
# =============== S U B R O U T I N E =======================================
clrbit_ring:                            # CODE XREF: ring_tobitiri+9C↑p
                ld      0x574008, r15 # Label from official source
                clrbit  r12, r15, r15
                st      r15, 0x574008
                bx      (r14)
# End of function clrbit_ring
# =============== S U B R O U T I N E =======================================
fa_pol_string:                          # CODE XREF: camera_init+193C↑p
                ret
# End of function fa_pol_string
# =============== S U B R O U T I N E =======================================
rank_mode_over_check:                   # CODE XREF: ROM:00011200↑p
                ldob    gameprogram, r14 # Label from Fighting Vipers source
                cmpobne 0, r14, loc_79230
                ldob    p1_wins, r13
                ld      total_win, r14
                addi    r13, r14, r15
                st      r15, total_win
                ldob    p2_wins, r13
                ld      total_time, r14
                addi    r13, r14, r15
                st      r15, total_time
                b       single_game_1p_total_win_set
# ---------------------------------------------------------------------------
loc_79230:                              # CODE XREF: rank_mode_over_check+8↑j
                ldob    p2_wins, r13
                ld      total_win, r14
                addi    r13, r14, r15
                st      r15, total_win
                ldob    p1_wins, r13
                ld      total_time, r14
                addi    r13, r14, r15
                st      r15, total_time
single_game_1p_total_win_set:           # CODE XREF: rank_mode_over_check+44↑j
                ldob    stage_num, r10  # Label from Fighting Vipers source
                cmpobe  0, r10, loc_792D4
                addo    1, r10, r10
                ld      total_win, r3
                ld      total_time, r4
                subi    r4, r3, r5
                divi    r10, r5, r8
                ldob    p1_match_count_ingame, r13
                mulo    r13, r10, r9
                subi    r9, r3, r9
                lda     500, r13
                mulo    r13, r3, r6
                lda     265, r13
                mulo    r13, r4, r7
                subi    r7, r6, r6
                mulo    r6, r8, r6
                shlo    2, 0x19, r13
                mulo    r13, r9, r7
                subi    r7, r6, r6
                lda     500, r13
                mulo    r13, r10, r7
                addi    r7, r6, r6
                cmpible 0, r6, set_rank_total_win
loc_792D4:                              # CODE XREF: rank_mode_over_check+88↑j
                mov     0, r6
set_rank_total_win:                     # CODE XREF: rank_mode_over_check+E8↑j
                st      r6, win_points  # Label from Fighting Vipers source
                ldob    stage_num, r10
                cmpobe  0, r10, time_points_zero
                addo    1, r10, r10
                shlo    9, 5, r3
                ld      0x500070, r4
                cmpobe  0, r4, time_points_zero
                mulo    r10, r3, r9
                shlo    9, 5, r13
                mulo    r13, r9, r9
                divi    r4, r9, r8
                cmpible 0, r8, loc_79318
time_points_zero:                       # CODE XREF: rank_mode_over_check+100↑j
                mov     0, r8           # Label from Fighting Vipers source
loc_79318:                              # CODE XREF: rank_mode_over_check+128↑j
                st      r8, time_points
                ld      total_skill, r6
                st      r6, skill_points
                ld      skill_points, r3
                ld      time_points, r4
                ld      win_points, r5
                addo    r3, r4, r10
                addo    r5, r10, r10
                st      r10, total_points
                mov     0, r3
                ld      add_BACKUP_RAM_TO_RAM, r4
                ld      0x3A6C(r4), r4  # r4 = BACKUP_RAM_START+0x3A6C
                ld      add_BACKUP_RAM_TO_RAM, r5
                ld      0x3A70(r5), r5  # r5 = BACKUP_RAM_START+0x3A70
                ld      add_BACKUP_RAM_TO_RAM, r6
                ld      0x3A74(r6), r6  # r6 = BACKUP_RAM_START+0x3A70
                ld      total_points, r7
                cmpobl  r7, r6, loc_793C8
                mov     r7, r6
                mov     3, r3
                cmpobl  r6, r5, loc_793C8
                mov     r5, r15
                mov     r6, r5
                mov     r15, r6
                mov     2, r3
                cmpobl  r5, r4, loc_793C8
                mov     r4, r15
                mov     r5, r4
                mov     r15, r5
                mov     1, r3
loc_793C8:                              # CODE XREF: rank_mode_over_check+1AC↑j
                st      r4, 0x1D03A6C
                st      r4, 0x59CA6C
                st      r5, 0x1D03A70
                st      r5, 0x59CA70
                st      r6, 0x1D03A74
                st      r6, 0x59CA74
                stob    r3, 0x500431
                ret
# End of function rank_mode_over_check
# =============== S U B R O U T I N E =======================================
game_display_init:                      # DATA XREF: ROM:000081C4↑o
                lda     game_display_cont, r15 # Label from official source
                st      r15, 0xC(g13)
                mov     0, g0
                call    check_credit_sub
                shlo    0x10, g0, g0
                shro    0x18, g0, g0
                stob    g0, 0x61(g13)
                mov     1, g0
                call    check_credit_sub
                shlo    0x10, g0, g0
                shro    0x18, g0, g0
                stob    g0, 0x62(g13)
                call    game_disp_lamps
                call    sub_7E4CC
                ret
# End of function game_display_init
# =============== S U B R O U T I N E =======================================
game_display_cont:                      # DATA XREF: game_display_init↑o
                ld      debug_flag, r15 # Label from official source
                bbs     5, r15, loc_794B8
                ld      0x0(g13), r3
                bbs     30, r3, loc_79488 # Branches normally
                ld      fa_rob0, g7
                call    energy_disp
                ld      fa_rob1, g7
                call    energy_disp
                call    barrier_left_disp
                call    time_dsp
                call    win_lamp_dsp
                call    sub_7E220
                clrbit  28, r3, r3
                st      r3, 0x0(g13)
loc_79488:                              # CODE XREF: game_display_cont+10↑j
                bbc     24, r3, loc_79490
                call    south_credit
loc_79490:                              # CODE XREF: game_display_cont:loc_79488↑j
                bbc     23, r3, loc_79498
                call    insert_disp
loc_79498:                              # CODE XREF: game_display_cont:loc_79490↑j
                call    load_player_splash
                bbs     26, r3, loc_794B8
                ldob    draw_vs_routine_flag, r3 # r3 = 19
                cmpobe  0, r3, loc_794B8
                ld      draw_vs_routines[r3*4], r5 # r3=19
                callx   (r5)            # r5=7D66C
loc_794B8:                              # CODE XREF: game_display_cont+8↑j
                ldib    draw_vs_routine_flag, r15
                stib    r15, 0x500430
                ret
# End of function game_display_cont
# =============== S U B R O U T I N E =======================================
south_credit:                           # CODE XREF: game_display_cont+48↑p
                ld      frame_counter, r11 # Label from official source
                ld      select0_flag, r15
                bbc     2, r15, loc_79500
                ld      select1_flag, r15
                bbs     2, r15, loc_79520
                lda     0x10016D0, g9
                mov     0, r10
                mov     8, r12
                b       loc_79564
# ---------------------------------------------------------------------------
loc_79500:                              # CODE XREF: south_credit+10↑j
                ld      select1_flag, r15
                bbc     2, r15, loc_79520
                lda     0x1001682, g9
                mov     1, r10
                mov     4, r12
                b       loc_79564
# ---------------------------------------------------------------------------
loc_79520:                              # CODE XREF: south_credit+1C↑j
                mov     0xC, r12
                ldob    COIN_INTERUPT_FLAGS, r14 # 0x00 = INSERT COINS
                andnot  r12, r14, r14
                stob    r14, COIN_INTERUPT_FLAGS # 0x00 = INSERT COINS
                lda     0x1001682, g9
                mov     0x16, g0
                mov     2, g1
                call    clr_pattern_s
                lda     0x10016D0, g9
                mov     0x16, g0
                mov     2, g1
                call    clr_pattern_s
                b       loc_79A28       # return
# ---------------------------------------------------------------------------
loc_79564:                              # CODE XREF: south_credit+30↑j
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldob    0x3324(r15), r14 # r14 = BACKUP_RAM_TO_RAM+0x3324
                cmpobne 26, r14, loc_79584 # if credits_required_bk_ram not equal to 26 wat
                ld      0x3320(r15), r14 # r14 = BACKUP_RAM_TO_RAM+0x3320
                bbc     1, r14, loc_79614
loc_79584:                              # CODE XREF: south_credit+A8↑j
                addo    4, sp, sp
                st      g0, -4(sp)
                addo    4, sp, sp
                st      g1, -4(sp)
                call    sub_2B5C
                mov     g0, r3
                mov     g1, r4
                ld      -4(sp), g1
                subo    4, sp, sp
                ld      -4(sp), g0
                subo    4, sp, sp
                addo    r3, r4, r8
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14 # r14 = BACKUP_RAM_TO_RAM+0x3320
                bbc     0, r14, loc_795E4
                cmpobe  1, r10, loc_795E0
                mov     r3, r4
loc_795E0:                              # CODE XREF: south_credit+10C↑j
                mov     r4, r8
loc_795E4:                              # CODE XREF: south_credit+108↑j
                ldob    0x40(g13), r13
                cmpobe  r13, r8, loc_79614
                stob    r8, 0x40(g13)
                addo    4, sp, sp
                st      g9, -4(sp)
                mov     0x16, g0
                mov     2, g1
                call    clr_pattern_s
                ld      -4(sp), g9
                subo    4, sp, sp
loc_79614:                              # CODE XREF: south_credit+B4↑j
                bbc     4, r11, loc_79A04
loc_79618:                              # CODE XREF: south_credit:loc_79A04↓j
                bbc     6, r11, loc_79784
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldob    0x3324(r15), r14 # r14 = BACKUP_RAM_TO_RAM+0x3324
                cmpobne 26, r14, loc_7963C
                ld      0x3320(r15), r14 # r14 = BACKUP_RAM_TO_RAM+0x3320
                bbc     1, r14, loc_79760
loc_7963C:                              # CODE XREF: south_credit+160↑j
                ld      add_BACKUP_RAM_TO_RAM, r13
                ld      mode_flag, r14
                lda     displacement64, r12
                lda     displacement128(r12), r12
                and     r14, r12, r12
                cmpobne 0, r12, loc_79678
                ld      0x0(g13), r15
                bbs     0x16, r15, loc_79684
                ldob    0x332B(r13), r9 # r9 = BACKUP_RAM_TO_RAM+0x332B and BACKUP_RAM_START+0x332B
                b       loc_7968C
# ---------------------------------------------------------------------------
loc_79678:                              # CODE XREF: south_credit+194↑j
                ldob    0x332D(r13), r9 # r9 = BACKUP_RAM_TO_RAM+0x332D and BACKUP_RAM_START+0x332D
                b       loc_7968C
# ---------------------------------------------------------------------------
loc_79684:                              # CODE XREF: south_credit+19C↑j
                ldob    0x332E(r13), r9 # r9 = BACKUP_RAM_TO_RAM+0x332E and BACKUP_RAM_START+0x332E
loc_7968C:                              # CODE XREF: south_credit+1A8↑j
                cmpobge 9, r9, loc_79694
                mov     2, r9
loc_79694:                              # CODE XREF: south_credit:loc_7968C↑j
                cmpobge r8, r9, loc_79760
                addo    4, sp, sp
                st      g0, -4(sp)
                addo    4, sp, sp
                st      g1, -4(sp)
                addo    4, sp, sp
                st      g2, -4(sp)
                addo    4, sp, sp
                st      g9, -4(sp)
                call    sub_3060
                mov     g0, r5
                mov     g1, r6
                mov     g2, r9
                mov     g9, r13
                ld      -4(sp), g9
                subo    4, sp, sp
                ld      -4(sp), g2
                subo    4, sp, sp
                ld      -4(sp), g1
                subo    4, sp, sp
                ld      -4(sp), g0
                subo    4, sp, sp
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14 # r14 = BACKUP_RAM_START+0x3320
                bbc     0, r14, loc_7972C
                cmpobe  1, r10, loc_79738
                mov     r5, r9
                b       loc_79738
# ---------------------------------------------------------------------------
loc_7972C:                              # CODE XREF: south_credit+250↑j
                cmpobne 0, r5, Insert_More_Coins
                call    chute_setting_check
                cmpobe  0, g0, loc_7973C
loc_79738:                              # CODE XREF: south_credit+254↑j
                cmpobne 0, r9, Insert_More_Coins
loc_7973C:                              # CODE XREF: south_credit+268↑j
                cmpobe  0, r8, Insert_Coins
Insert_More_Coins:                      # CODE XREF: south_credit:loc_7972C↑j
                addo    0, g9, g9
                lda     aInsertMoreCoin, g0 # "INSERT MORE COIN(S)"
                b       loc_797C4
# ---------------------------------------------------------------------------
Insert_Coins:                           # CODE XREF: south_credit:loc_7973C↑j
                addo    0, g9, g9
                lda     aInsertCoinS, g0 # "INSERT COIN(S)"
                b       loc_797C4
# ---------------------------------------------------------------------------
loc_79760:                              # CODE XREF: south_credit+16C↑j
                ldob    COIN_INTERUPT_FLAGS, r14 # 0x00 = INSERT COINS
                or      r12, r14, r14
                stob    r14, COIN_INTERUPT_FLAGS # 0x00 = INSERT COINS
                addo    0, g9, g9
                lda     aPushStartButto, g0 # "PUSH START BUTTON"
                b       loc_797C4
# ---------------------------------------------------------------------------
loc_79784:                              # CODE XREF: south_credit:loc_79618↑j
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbs     1, r14, loc_797CC
                ldob    0x3324(r15), r14
                cmpobne 26, r14, loc_797CC
                ldob    COIN_INTERUPT_FLAGS, r14 # 0x00 = INSERT COINS
                or      r12, r14, r14
                stob    r14, COIN_INTERUPT_FLAGS # 0x00 = INSERT COINS
                addo    0, g9, g9
                lda     aFreeplay, g0   # "FREEPLAY"
loc_797C4:                              # CODE XREF: south_credit+280↑j
                call    s_print_mes
                b       loc_79A28       # return
# ---------------------------------------------------------------------------
loc_797CC:                              # CODE XREF: south_credit+2C8↑j
                addo    0, g9, g9
                lda     aCredit, g0     # "CREDIT"
                cmpobg  2, r8, loc_797E4
                lda     aCredits, g0    # "CREDITS"
loc_797E4:                              # CODE XREF: south_credit+30C↑j
                call    s_print_mes
                mov     r8, g0
                addo    2, g9, g9
                call    s_print_dec_left
                ld      add_BACKUP_RAM_TO_RAM, r13
                ld      mode_flag, r14
                lda     displacement64, r12
                lda     displacement128(r12), r12
                and     r14, r12, r12
                cmpobne 0, r12, loc_79830
                ld      0x0(g13), r15
                bbs     0x16, r15, loc_7983C
                ldob    0x332B(r13), r3
                b       loc_79844
# ---------------------------------------------------------------------------
loc_79830:                              # CODE XREF: south_credit+34C↑j
                ldob    0x332D(r13), r3 # r3 = BACKUP_RAM_START+0x332D
                b       loc_79844
# ---------------------------------------------------------------------------
loc_7983C:                              # CODE XREF: south_credit+354↑j
                ldob    0x332E(r13), r3 # r3 = BACKUP_RAM_START+0x332E
loc_79844:                              # CODE XREF: south_credit+360↑j
                cmpobge 9, r3, loc_7984C
                mov     2, r3
loc_7984C:                              # CODE XREF: south_credit:loc_79844↑j
                cmpobl  r8, r3, loc_79864
                ldob    COIN_INTERUPT_FLAGS, r14 # 0x00 = INSERT COINS
                or      r12, r14, r14
                stob    r14, COIN_INTERUPT_FLAGS # 0x00 = INSERT COINS
loc_79864:                              # CODE XREF: south_credit:loc_7984C↑j
                ld      add_BACKUP_RAM_TO_RAM, r14
                ldob    0x332A(r14), r15
                cmpobge 9, r15, loc_7987C
                mov     2, r15
loc_7987C:                              # CODE XREF: south_credit+3A8↑j
                cmpobne 1, r15, loc_79884
                cmpobe  1, r3, loc_79894
loc_79884:                              # CODE XREF: south_credit:loc_7987C↑j
                addo    0x1F, 0x10, g0
                call    s_print_char
                mov     r3, g0
                call    s_print_dec_char
loc_79894:                              # CODE XREF: south_credit+3B4↑j
                addo    4, sp, sp
                st      g0, -4(sp)
                addo    4, sp, sp
                st      g1, -4(sp)
                addo    4, sp, sp
                st      g2, -4(sp)
                addo    4, sp, sp
                st      g9, -4(sp)
                call    sub_3060
                mov     g0, r3
                mov     g1, r4
                mov     g2, r5
                mov     g9, r6
                ld      -4(sp), g9
                subo    4, sp, sp
                ld      -4(sp), g2
                subo    4, sp, sp
                ld      -4(sp), g1
                subo    4, sp, sp
                ld      -4(sp), g0
                subo    4, sp, sp
                ldob    0x61(g13), r9
                ldob    0x62(g13), r13
                addo    2, g9, g9
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_7993C
                cmpobe  0, r10, loc_799A8
                mov     r5, r3
                mov     r6, r4
                mov     r13, r9
                b       loc_799A8
# ---------------------------------------------------------------------------
loc_7993C:                              # CODE XREF: south_credit+458↑j
                call    chute_setting_check
                cmpobe  1, g0, loc_79968
                mov     r5, r15
                mov     r3, r5
                mov     r15, r3
                mov     r6, r15
                mov     r4, r6
                mov     r15, r4
                mov     r13, r15
                mov     r9, r13
                mov     r15, r9
loc_79968:                              # CODE XREF: south_credit+474↑j
                cmpobne 1, r13, loc_799A0
                cmpobe  1, r6, loc_799A0
                cmpobe  0, r5, loc_799A0
                lda     aCoin, g0       # "COIN"
                call    s_print_mes
                addo    2, g9, g9
                mov     r5, g0
                call    s_print_dec_char
                addo    0x1F, 0x10, g0
                call    s_print_char
                mov     r6, g0
                call    s_print_dec_char
                addo    2, g9, g9
loc_799A0:                              # CODE XREF: south_credit:loc_79968↑j
                call    chute_setting_check
                cmpobe  0, g0, loc_79A28 # return
loc_799A8:                              # CODE XREF: south_credit+45C↑j
                cmpobne 1, r9, loc_79A28 # return
                cmpobe  1, r4, loc_79A28 # return
                cmpobe  0, r3, loc_79A28 # return
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_799CC
                b       loc_799D8
# ---------------------------------------------------------------------------
loc_799CC:                              # CODE XREF: south_credit+4F8↑j
                cmpobne 0, r5, loc_799E8
                call    chute_setting_check
                cmpobe  0, g0, loc_799E8
loc_799D8:                              # CODE XREF: south_credit+4FC↑j
                lda     aCoin, g0       # "COIN"
                call    s_print_mes
                addo    2, g9, g9
loc_799E8:                              # CODE XREF: south_credit:loc_799CC↑j
                mov     r3, g0
                call    s_print_dec_char
                addo    0x1F, 0x10, g0
                call    s_print_char
                mov     r4, g0
                call    s_print_dec_char
                b       loc_79A28       # return
# ---------------------------------------------------------------------------
loc_79A04:                              # CODE XREF: south_credit:loc_79614↑j
                bbs     3, r11, loc_79618
                ldob    COIN_INTERUPT_FLAGS, r14 # 0x00 = INSERT COINS
                andnot  r12, r14, r14
                stob    r14, COIN_INTERUPT_FLAGS # 0x00 = INSERT COINS
                mov     0x16, g0
                mov     2, g1
                call    clr_pattern_s
loc_79A28:                              # CODE XREF: south_credit+94↑j
                ret                     # return
# End of function south_credit
# =============== S U B R O U T I N E =======================================
insert_disp:                            # CODE XREF: game_display_cont+50↑p
                mov     0, r5           # Label from official source
                mov     0, r10
                ld      frame_counter, r11
                ld      0x0(g13), r12
                lda     0x1001682, g9
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldob    0x3324(r15), r14
                cmpobne 26, r14, loc_79A68
                ld      0x3320(r15), r14
                bbc     1, r14, loc_79AA4
loc_79A68:                              # CODE XREF: insert_disp+2C↑j
                addo    4, sp, sp
                st      g0, -4(sp)
                addo    4, sp, sp
                st      g1, -4(sp)
                call    sub_2B5C
                mov     g0, r3
                mov     g1, r4
                ld      -4(sp), g1
                subo    4, sp, sp
                ld      -4(sp), g0
                subo    4, sp, sp
loc_79AA4:                              # CODE XREF: insert_disp+38↑j
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbs     1, r14, loc_79ADC
                ldob    0x3324(r15), r14
                cmpobne 0x1A, r14, loc_79ADC
                cmpobe  0, r10, loc_79ACC
                addo    0xA, g9, g9
loc_79ACC:                              # CODE XREF: insert_disp+98↑j
                bbs     0x14, r12, loc_79DD4
                lda     83, g0          # FREE PLAY texture
                call    dsp_pattern_new
                b       loc_79DD4
# ---------------------------------------------------------------------------
loc_79ADC:                              # CODE XREF: insert_disp+88↑j
                addo    r3, r4, r8
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_79B00
                mov     r4, r8
                cmpobe  0, r10, loc_79B00
                mov     r3, r8
loc_79B00:                              # CODE XREF: insert_disp+C4↑j
                cmpobe  1, r10, loc_79B14
                ldob    0x40(g13), r13
                cmpobe  r13, r8, loc_79B6C
                stob    r8, 0x40(g13)
                b       loc_79B20
# ---------------------------------------------------------------------------
loc_79B14:                              # CODE XREF: insert_disp:loc_79B00↑j
                ldob    0x41(g13), r13
                cmpobe  r13, r8, loc_79B6C
                stob    r8, 0x41(g13)
loc_79B20:                              # CODE XREF: insert_disp+E4↑j
                addo    4, sp, sp
                st      g9, -4(sp)
                addo    0x1F, 0xD, g0
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_79B54
                mov     0x1E, g0
                cmpobe  0, r10, loc_79B54
                lda     0x10016C0, g9
loc_79B54:                              # CODE XREF: insert_disp+114↑j
                mov     2, g1
                bbs     0x14, r12, loc_79B60
                call    clr_pattern_s
loc_79B60:                              # CODE XREF: insert_disp+12C↑j
                ld      -4(sp), g9
                subo    4, sp, sp
loc_79B6C:                              # CODE XREF: insert_disp+DC↑j
                cmpobl  1, r8, loc_79B80
                cmpobe  0, r10, loc_79B78
                addo    8, g9, g9
loc_79B78:                              # CODE XREF: insert_disp+144↑j
                shlo    4, 5, g0
                b       loc_79B94
# ---------------------------------------------------------------------------
loc_79B80:                              # CODE XREF: insert_disp:loc_79B6C↑j
                cmpobe  0, r10, loc_79B90
                addo    4, g9, g9
                cmpobg  0xA, r8, loc_79B90
                subo    4, g9, g9
loc_79B90:                              # CODE XREF: insert_disp:loc_79B80↑j
                lda     82, g0          # CREDITS texture
loc_79B94:                              # CODE XREF: insert_disp+150↑j
                bbs     0x14, r12, loc_79B9C
                call    dsp_pattern_new
loc_79B9C:                              # CODE XREF: insert_disp:loc_79B94↑j
                addo    2, g9, g9
                mov     r8, r9
                cmpobg  0xA, r8, loc_79BCC
                divo    0xA, r8, r9
                lda     0x15, g0
                mov     r9, g4
                mov     0, g5
                bbs     0x14, r12, loc_79BC4
                mov     2, g3
                call    dsp_character
loc_79BC4:                              # CODE XREF: insert_disp+18C↑j
                remo    0xA, r8, r9
                addo    4, g9, g9
loc_79BCC:                              # CODE XREF: insert_disp+178↑j
                lda     0x15, g0
                mov     r9, g4
                mov     0, g5
                ld      add_BACKUP_RAM_TO_RAM, r14
                ldob    0x332A(r14), r9
                cmpobge 9, r9, loc_79BF0
                mov     2, r9
loc_79BF0:                              # CODE XREF: insert_disp+1BC↑j
                cmpobe  1, r9, loc_79C2C
                bbs     0x14, r12, loc_79C00
                mov     2, g3
                call    dsp_character
loc_79C00:                              # CODE XREF: insert_disp+1C8↑j
                addo    4, g9, g9
                lda     0x15, g0
                mov     0xA, g4
                mov     0, g5
                bbs     0x14, r12, loc_79C1C
                mov     2, g3
                call    dsp_character
loc_79C1C:                              # CODE XREF: insert_disp+1E4↑j
                addo    4, g9, g9
                lda     0x15, g0
                mov     r9, g4
                mov     0, g5
loc_79C2C:                              # CODE XREF: insert_disp:loc_79BF0↑j
                bbs     0x14, r12, loc_79DD4
                mov     2, g3
                call    dsp_character
                addo    6, g9, g9
                addo    4, sp, sp
                st      g0, -4(sp)
                addo    4, sp, sp
                st      g1, -4(sp)
                addo    4, sp, sp
                st      g2, -4(sp)
                addo    4, sp, sp
                st      g9, -4(sp)
                call    sub_3060
                mov     g0, r3
                mov     g1, r4
                mov     g2, r6
                mov     g9, r7
                ld      -4(sp), g9
                subo    4, sp, sp
                ld      -4(sp), g2
                subo    4, sp, sp
                ld      -4(sp), g1
                subo    4, sp, sp
                ld      -4(sp), g0
                subo    4, sp, sp
                ldob    0x61(g13), r9
                ldob    0x62(g13), r13
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14 # r14 = BACKUP_RAM_TO_RAM+0x3320
                bbc     0, r14, loc_79CF8
                lda     aCoin, g0       # "COIN"
                lda     0x10016C0, g9
                cmpobe  1, r10, loc_79D90
                lda     0x10016AE, g9
                mov     r6, r3
                mov     r7, r4
                mov     r13, r9
                b       loc_79D90
# ---------------------------------------------------------------------------
loc_79CF8:                              # CODE XREF: insert_disp+29C↑j
                call    chute_setting_check
                cmpobe  1, g0, loc_79D30
                mov     r6, r15
                mov     r3, r6
                mov     r15, r3
                mov     r7, r15
                mov     r4, r7
                mov     r15, r4
                mov     r13, r15
                mov     r9, r13
                mov     r15, r9
                lda     aCoin, g0       # "COIN"
                b       loc_79D38
# ---------------------------------------------------------------------------
loc_79D30:                              # CODE XREF: insert_disp+2D0↑j
                lda     aCoin, g0       # "COIN"
loc_79D38:                              # CODE XREF: insert_disp+300↑j
                cmpobne 1, r13, loc_79D80
                cmpobe  1, r7, loc_79D80
                cmpobe  0, r6, loc_79D80
                call    s_print_mes
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_79D60
                cmpoble 0xA, r8, loc_79D64
loc_79D60:                              # CODE XREF: insert_disp+32C↑j
                addo    2, g9, g9
loc_79D64:                              # CODE XREF: insert_disp+330↑j
                mov     r6, g0
                call    s_print_dec_char
                addo    0x1F, 0x10, g0
                call    s_print_char
                mov     r7, g0
                call    s_print_dec_char
                addo    2, g9, g9
loc_79D80:                              # CODE XREF: insert_disp:loc_79D38↑j
                call    chute_setting_check
                cmpobe  0, g0, loc_79DD4
                lda     aCoin, g0       # "COIN"
loc_79D90:                              # CODE XREF: insert_disp+2B0↑j
                cmpobne 1, r9, loc_79DD4
                cmpobe  1, r4, loc_79DD4
                cmpobe  0, r3, loc_79DD4
                call    s_print_mes
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_79DB8
                cmpoble 0xA, r8, loc_79DBC
loc_79DB8:                              # CODE XREF: insert_disp+384↑j
                addo    2, g9, g9
loc_79DBC:                              # CODE XREF: insert_disp+388↑j
                mov     r3, g0
                call    s_print_dec_char
                addo    0x1F, 0x10, g0
                call    s_print_char
                mov     r4, g0
                call    s_print_dec_char
loc_79DD4:                              # CODE XREF: insert_disp:loc_79ACC↑j
                bbc     4, r11, loc_79FBC
loc_79DD8:                              # CODE XREF: insert_disp:loc_79FBC↓j
                lda     0x1001322, g9
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_79E08
                lda     0x1001302, g9
                cmpobe  0, r10, loc_79E08
                lda     0x1001344, g9
loc_79E08:                              # CODE XREF: insert_disp+3C4↑j
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldob    0x3324(r15), r14
                cmpobne 0x1A, r14, loc_79E28
                ld      0x3320(r15), r14
                bbc     1, r14, loc_79F58
loc_79E28:                              # CODE XREF: insert_disp+3EC↑j
                ld      add_BACKUP_RAM_TO_RAM, r14
                ldob    0x332A(r14), r15
                cmpobge 9, r15, loc_79E40
                mov     2, r15
loc_79E40:                              # CODE XREF: insert_disp+40C↑j
                cmpobge r8, r15, loc_79F58
                cmpobe  0, r5, loc_79E5C
                ldob    COIN_INTERUPT_FLAGS, r14 # 0x00 = INSERT COINS
                or      r5, r14, r14
                stob    r14, COIN_INTERUPT_FLAGS # 0x00 = INSERT COINS
loc_79E5C:                              # CODE XREF: insert_disp+418↑j
                addo    4, sp, sp
                st      g0, -4(sp)
                addo    4, sp, sp
                st      g1, -4(sp)
                addo    4, sp, sp
                st      g2, -4(sp)
                addo    4, sp, sp
                st      g9, -4(sp)
                call    sub_3060
                mov     g0, r4
                mov     g1, r15
                mov     g2, r3
                mov     g9, r15
                ld      -4(sp), g9
                subo    4, sp, sp
                ld      -4(sp), g2
                subo    4, sp, sp
                ld      -4(sp), g1
                subo    4, sp, sp
                ld      -4(sp), g0
                subo    4, sp, sp
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_79EF0
                cmpobe  1, r10, loc_79EFC
                mov     r3, r4
                b       loc_79EFC
# ---------------------------------------------------------------------------
loc_79EF0:                              # CODE XREF: insert_disp+4B4↑j
                call    chute_setting_check
                cmpobe  0, g0, loc_79EFC
                cmpobne 0, r3, loc_79F04
loc_79EFC:                              # CODE XREF: insert_disp+4B8↑j
                cmpobne 0, r4, loc_79F04
                cmpobe  0, r8, loc_79F28
loc_79F04:                              # CODE XREF: insert_disp+4CC↑j
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_79F20
                lda     0x55, g0
                b       loc_79FB0
# ---------------------------------------------------------------------------
loc_79F20:                              # CODE XREF: insert_disp+4E8↑j
                lda     0x55, g0
                b       loc_79FB0
# ---------------------------------------------------------------------------
loc_79F28:                              # CODE XREF: insert_disp+4D4↑j
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_79F4C
                cmpobe  0, r10, loc_79F44
                addo    0xE, g9, g9
loc_79F44:                              # CODE XREF: insert_disp+510↑j
                shlo    2, 0x15, g0
                b       loc_79FB0
# ---------------------------------------------------------------------------
loc_79F4C:                              # CODE XREF: insert_disp+50C↑j
                addo    8, g9, g9
                shlo    2, 0x15, g0
                b       loc_79FB0
# ---------------------------------------------------------------------------
loc_79F58:                              # CODE XREF: insert_disp+3F8↑j
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_79F80
                cmpobne 0, r10, loc_79F78
                mov     4, r5
                b       loc_79F98
# ---------------------------------------------------------------------------
loc_79F78:                              # CODE XREF: insert_disp+540↑j
                addo    8, r5, r5
                b       loc_79F84
# ---------------------------------------------------------------------------
loc_79F80:                              # CODE XREF: insert_disp+53C↑j
                mov     0xC, r5
loc_79F84:                              # CODE XREF: insert_disp+550↑j
                ldob    COIN_INTERUPT_FLAGS, r14 # 0x00 = INSERT COINS
                or      r5, r14, r14
                stob    r14, COIN_INTERUPT_FLAGS # 0x00 = INSERT COINS
loc_79F98:                              # CODE XREF: insert_disp+548↑j
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_79FAC
loc_79FAC:                              # CODE XREF: insert_disp+57C↑j
                lda     86, g0          # PUSH START BUTTON texture
loc_79FB0:                              # CODE XREF: insert_disp+4F0↑j
                bbs     0x14, r12, loc_79FB8
                call    dsp_pattern_new
loc_79FB8:                              # CODE XREF: insert_disp:loc_79FB0↑j
                b       loc_7A040
# ---------------------------------------------------------------------------
loc_79FBC:                              # CODE XREF: insert_disp:loc_79DD4↑j
                bbs     3, r11, loc_79DD8
                mov     0xC, r5
                ldob    COIN_INTERUPT_FLAGS, r14 # 0x00 = INSERT COINS
                andnot  r5, r14, r14
                stob    r14, COIN_INTERUPT_FLAGS # 0x00 = INSERT COINS
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_7A018
                lda     0x1001300, g9
                addo    0x1F, 0x1F, g0
                mov     2, g1
                call    clr_pattern_s
                lda     0x1001300, g9
                mov     0, g0
                addo    0x1F, 0x1F, g1
                mov     2, g2
                b       loc_7A040
# ---------------------------------------------------------------------------
loc_7A018:                              # CODE XREF: insert_disp+5BC↑j
                lda     0x1001322, g9
                addo    0x1F, 1, g0
                mov     2, g1
                call    clr_pattern_s
                lda     0x1001322, g9
                mov     0x11, g0
                addo    0x1F, 1, g1
                mov     2, g2
loc_7A040:                              # CODE XREF: insert_disp:loc_79FB8↑j
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_7A0C4
                cmpobe  1, r10, loc_7A0C4
                mov     1, r10
                lda     0x10016CE, g9
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldob    0x3324(r15), r14
                cmpobne 0x1A, r14, loc_7A084
                ld      0x3320(r15), r14
                bbc     1, r14, loc_79AA4
loc_7A084:                              # CODE XREF: insert_disp+648↑j
                addo    4, sp, sp
                st      g0, -4(sp)
                addo    4, sp, sp
                st      g1, -4(sp)
                call    sub_2B5C
                mov     g0, r3
                mov     g1, r4
                ld      -4(sp), g1
                subo    4, sp, sp
                ld      -4(sp), g0
                subo    4, sp, sp
                b       loc_79AA4
# ---------------------------------------------------------------------------
loc_7A0C4:                              # CODE XREF: insert_disp+624↑j
                ret
# End of function insert_disp
# ---------------------------------------------------------------------------
                .short 0x3E0
                .short 0x2C0
                .short 0x1A0
                .short 0x80
                .short 0x1A0
                .short 0x2C0
                .short 0x1F
                .short 0x16
                .short 0xD
                .short 4
                .short 0xD
                .short 0x16
# ---------------------------------------------------------------------------
title_put_clr:                          # Label from official source
                ld      mode_flag, r4
                lda     prcb, r3
                lda     displacement8(r3), r3
                and     r4, r3, r3
                cmpobe  0, r3, loc_7A1A4
                ld      0x500034, r4
                lda     displacement64, r3
                lda     displacement128(r3), r3
                lda     displacement256(r3), r3
                lda     0x1000(r3), r3
                lda     0x2000(r3), r3
                lda     0x4000(r3), r3
                and     r4, r3, r3
                cmpobe  0, r3, loc_7A1A4
                lda     0x59, r3
                ld      texture_palette_offsets[r3*4], r4
                lda     0xC(r4), r4
                mov     g9, r11
                shlo    7, 1, r10
                shlo    2, 0x1F, r3
                lda     loc_1268, r13
                addi    r13, r4, r4
                lda     (r4)[g0*2], r4
                mov     g2, r6
loc_7A170:                              # CODE XREF: ROM:0007A1A0↓j
                mov     r11, r9
                mov     r4, r8
                mov     g1, r5
loc_7A17C:                              # CODE XREF: ROM:0007A190↓j
                ldos    (r8), r15
                addo    2, r8, r8
                stos    r15, (r9)
                addo    2, r9, r9
                cmpdeco 1, r5, r5
                bl      loc_7A17C
                addo    r10, r11, r11
                addo    r3, r4, r4
                cmpdeco 1, r6, r6
                bl      loc_7A170
loc_7A1A4:                              # CODE XREF: ROM:0007A0FC↑j
                ret
# =============== S U B R O U T I N E =======================================
barrier_left_disp_init:                 # CODE XREF: MES_FIGHT_INT+2C↓p
                ldob    mode, r3        # Label from official source
                lda     mode9, r4
                cmpobne r3, r4, loc_7A2E8
                ld      barrier_default_num, r8
                cmpobl  3, r8, loc_7A1CC
                mov     3, r8
loc_7A1CC:                              # CODE XREF: barrier_left_disp_init+1C↑j
                ld      fa_rob0, g7
                ld      0xC70(g7), r10
                st      r10, 0xC74(g7)
                cmpobe  0, r10, loc_7A22C
                mov     r8, g1
                lda     0x1001486, g9
                call    barrier_waku_disp
                lda     0x1001406, g9
                lda     117, g0         # BARRIER text texture
                call    dsp_pattern_new
                mov     3, r5
loc_7A204:                              # CODE XREF: barrier_left_disp_init+7C↓j
                lda     0x1001500, g9
                shlo    1, r5, r15
                addo    r15, g9, g9
                lda     118, g0         # P1 Barrier Icon
                call    dsp_pattern_new
                addo    2, r5, r5
                cmpdeco 1, r10, r10
                bl      loc_7A204
                b       loc_7A250
# ---------------------------------------------------------------------------
loc_7A22C:                              # CODE XREF: barrier_left_disp_init+34↑j
                lda     0x1001404, g9
                mov     0x18, g0
                mov     6, g1
                call    clr_pattern_s
                lda     0x1001504, g9
                shlo    3, 0xF, g0      # (120) NO BARRIER texture
                call    dsp_pattern_new
loc_7A250:                              # CODE XREF: barrier_left_disp_init+80↑j
                ld      fa_rob1, g7
                ld      0xC70(g7), r10
                st      r10, 0xC74(g7)
                cmpobe  0, r10, loc_7A2C4
                mulo    2, r8, r3
                addo    0x1F, 0x1C, r14
                subi    r3, r14, r3
                mov     r8, g1
                lda     0x1001480, g9
                shlo    1, r3, r15
                addo    r15, g9, g9
                call    barrier_waku_disp
                lda     0x100146A, g9
                lda     117, g0         # Barrier Text
                call    dsp_pattern_new
                addo    0x1F, 0x1A, r5
loc_7A29C:                              # CODE XREF: barrier_left_disp_init+114↓j
                lda     0x1001500, g9
                shlo    1, r5, r15
                addo    r15, g9, g9
                lda     119, g0         # P1 Barrier Icon
                call    dsp_pattern_new
                subo    2, r5, r5
                cmpdeco 1, r10, r10
                bl      loc_7A29C
                b       loc_7A2E8
# ---------------------------------------------------------------------------
loc_7A2C4:                              # CODE XREF: barrier_left_disp_init+B8↑j
                lda     0x1001448, g9
                mov     0x18, g0
                mov     6, g1
                call    clr_pattern_s
                lda     0x1001558, g9
                shlo    3, 0xF, g0      # (120) NO BARRIER texture
                call    dsp_pattern_new
loc_7A2E8:                              # CODE XREF: barrier_left_disp_init+10↑j
                lda     0x9C(g13), r4
                addo    0x1F, 1, r5
                mov     0, r6
loc_7A2F4:                              # CODE XREF: barrier_left_disp_init+158↓j
                stob    r6, (r4)
                addo    1, r4, r4
                cmpdeco 1, r5, r5
                bl      loc_7A2F4
                ret
# End of function barrier_left_disp_init
# =============== S U B R O U T I N E =======================================
barrier_waku_disp:                      # CODE XREF: barrier_left_disp_init+44↑p
                mov     g9, r9          # Label from official source
                subo    2, r9, g9
                lda     122, g0         # Left barrier boundary box
                call    dsp_pattern_new
                mulo    4, g1, r5
                addo    r5, r9, g9
                lda     307, g0         # Right barrier boundary box
                call    dsp_pattern_new
                mov     r9, g9
                ld      0x64807D0, r3
                ldos    0xC(r3), r6
                setbit  0xF, r6, r6
                ld      0x64804E4, r3
                ldos    0xC(r3), r7
                setbit  0xF, r7, r7
                shlo    9, 1, r13
                addi    r13, r9, r9
                mulo    2, g1, r4
loc_7A358:                              # CODE XREF: barrier_waku_disp+64↓j
                stos    r6, (g9)
                stos    r7, (r9)
                addo    2, g9, g9
                addo    2, r9, r9
                cmpdeco 1, r4, r4
                bl      loc_7A358
                ret
# End of function barrier_waku_disp
# =============== S U B R O U T I N E =======================================
barrier_left_disp:                      # CODE XREF: game_display_cont+2C↑p
                ldob    mode, r3        # Label from official source
                lda     mode9, r4
                cmpobne r3, r4, loc_7A540 # return
                ldob    _sub_mode, r3
                lda     sub_mode9, r4
                cmpobl  r3, r4, loc_7A540 # return
                ld      fa_rob0, g7
                ldos    p1_barrier_flag, r3
                cmpobe  0, r3, loc_7A3B4 # Something to do with barriers
                call    bari_ptn_sub_1p
loc_7A3B4:                              # CODE XREF: barrier_left_disp+38↑j
                ld      fa_rob0, g7
                ld      0xC70(g7), r3   # P1_PARTS+0xC70
                cmpobne 1, r3, loc_7A3C8
                call    bari_left_last_one
loc_7A3C8:                              # CODE XREF: barrier_left_disp+4C↑j
                lda     0x1001504, g9
                cmpobne 0, r3, loc_7A3DC
                balx    nobarrier_flash, r11
loc_7A3DC:                              # CODE XREF: barrier_left_disp+5C↑j
                ld      0xC74(g7), r4
                st      r3, 0xC74(g7)
                cmpobe  r3, r4, loc_7A46C
                cmpobe  0, r3, loc_7A448
                ld      barrier_default_num, r6
                subo    1, r6, r6
                subo    r3, r6, r6
                ldos    p1_barrier_flag, r7
                setbit  r6, r7, r7
                stos    r7, p1_barrier_flag
                mulo    2, r3, r5
                lda     0x1001500, g9
                shlo    1, r5, r15
                addo    r15, g9, g9
                addo    6, g9, g9
                lda     118, g0         # P1 barrier icon
                call    clr_pattern
                ld      health_bar_flag, r15
                setbit  4, r15, r15
                st      r15, health_bar_flag
                b       loc_7A46C
# ---------------------------------------------------------------------------
loc_7A448:                              # CODE XREF: barrier_left_disp+74↑j
                lda     0x1001404, g9
                mov     0x18, g0
                mov     6, g1
                call    clr_pattern_s
                lda     0x1001504, g9
                shlo    3, 0xF, g0      # (120) NO BARRIER texture
                call    dsp_pattern_new
loc_7A46C:                              # CODE XREF: barrier_left_disp+70↑j
                ld      fa_rob1, g7
                ldos    p2_barrier_flag, r3
                cmpobe  0, r3, loc_7A484
                call    bari_ptn_sub_2p
loc_7A484:                              # CODE XREF: barrier_left_disp+108↑j
                ld      fa_rob1, g7
                ld      0xC70(g7), r3
                cmpobne 1, r3, loc_7A498
                call    bari_right_last_one
loc_7A498:                              # CODE XREF: barrier_left_disp+11C↑j
                lda     0x1001558, g9
                cmpobne 0, r3, loc_7A4AC
                balx    nobarrier_flash, r11
loc_7A4AC:                              # CODE XREF: barrier_left_disp+12C↑j
                ld      0xC74(g7), r4
                st      r3, 0xC74(g7)
                cmpobe  r3, r4, loc_7A540 # return
                cmpobe  0, r3, loc_7A51C
                ld      barrier_default_num, r6
                subo    1, r6, r6
                subo    r3, r6, r6
                ldos    p2_barrier_flag, r7
                setbit  r6, r7, r7
                stos    r7, p2_barrier_flag
                mulo    2, r3, r5
                addo    0x1F, 0x1A, r14
                subi    r5, r14, r5
                lda     0x1001500, g9
                shlo    1, r5, r15
                addo    r15, g9, g9
                lda     119, g0         # P2 barrier icon
                call    clr_pattern
                ld      health_bar_flag, r15
                setbit  4, r15, r15
                st      r15, health_bar_flag
                b       loc_7A540       # return
# ---------------------------------------------------------------------------
loc_7A51C:                              # CODE XREF: barrier_left_disp+144↑j
                lda     0x1001448, g9
                mov     0x18, g0
                mov     6, g1
                call    clr_pattern_s
                lda     0x1001558, g9
                shlo    3, 0xF, g0      # (120) NO BARRIER texture
                call    dsp_pattern_new
loc_7A540:                              # CODE XREF: barrier_left_disp+10↑j
                ret                     # return
# End of function barrier_left_disp
# =============== S U B R O U T I N E =======================================
nobarrier_flash:                        # CODE XREF: barrier_left_disp+60↑p
                shlo    3, 0xF, g0      # Label from official source
                ld      frame_counter, r9
                addo    1, r9, r10
                xor     r9, r10, r10
                bbc     3, r10, loc_7A56C
                bbc     3, r9, loc_7A568
                call    dsp_pattern_new
                b       loc_7A56C
# ---------------------------------------------------------------------------
loc_7A568:                              # CODE XREF: nobarrier_flash+18↑j
                call    clr_pattern
loc_7A56C:                              # CODE XREF: nobarrier_flash+14↑j
                bx      (r11)
# End of function nobarrier_flash
# =============== S U B R O U T I N E =======================================
bari_left_last_one:                     # CODE XREF: barrier_left_disp+50↑p
                ld      0xC70(g7), r3   # Label from official source
                mulo    2, r3, r5
                addo    1, r5, r5
                lda     0x1001500, g9
                shlo    1, r5, r15
                addo    r15, g9, g9
                lda     0x76, g0
                ld      frame_counter, r9
                addo    1, r9, r10
                xor     r9, r10, r10
                bbc     3, r10, loc_7A5B4
                bbc     3, r9, loc_7A5B0
                call    dsp_pattern_new
                b       loc_7A5B4
# ---------------------------------------------------------------------------
loc_7A5B0:                              # CODE XREF: bari_left_last_one+34↑j
                call    clr_pattern
loc_7A5B4:                              # CODE XREF: bari_left_last_one+30↑j
                ret
# End of function bari_left_last_one
# =============== S U B R O U T I N E =======================================
bari_right_last_one:                    # CODE XREF: barrier_left_disp+120↑p
                ld      0xC70(g7), r3   # Label from official source
                mulo    2, r3, r5
                addo    0x1F, 0x1A, r14
                subi    r5, r14, r5
                addo    2, r5, r5
                lda     0x1001500, g9
                shlo    1, r5, r15
                addo    r15, g9, g9
                lda     0x77, g0
                ld      frame_counter, r9
                addo    1, r9, r10
                xor     r9, r10, r10
                bbc     3, r10, loc_7A604
                bbc     3, r9, loc_7A600
                call    dsp_pattern_new
                b       loc_7A604
# ---------------------------------------------------------------------------
loc_7A600:                              # CODE XREF: bari_right_last_one+3C↑j
                call    clr_pattern
loc_7A604:                              # CODE XREF: bari_right_last_one+38↑j
                ret
# End of function bari_right_last_one
# =============== S U B R O U T I N E =======================================
bari_ptn_sub_1p:                        # CODE XREF: barrier_left_disp+3C↑p
                ld      0xC70(g7), r3   # Label from official source
                addo    1, r3, r3
                mulo    2, r3, r5
                addo    1, r5, r5
                lda     0x1001500, g9
                shlo    1, r5, r15
                addo    r15, g9, g9
                ldos    0x5004BA, r4
                ld      left_barrier_breaking_hud_anim[r4*4], g0
                addo    4, sp, sp
                st      g0, -4(sp)
                call    dsp_pattern_new
                ld      -4(sp), g0
                subo    4, sp, sp
                addo    1, r4, r4
                cmpobne 7, r4, loc_7A67C
                mov     0, r4
                stos    r4, p1_barrier_flag
                lda     0x1001500, g9
                shlo    1, r5, r15
                addo    r15, g9, g9
                call    clr_pattern
loc_7A67C:                              # CODE XREF: bari_ptn_sub_1p+50↑j
                stos    r4, 0x5004BA
                ret
# End of function bari_ptn_sub_1p
# =============== S U B R O U T I N E =======================================
bari_ptn_sub_2p:                        # CODE XREF: barrier_left_disp+10C↑p
                ld      0xC70(g7), r3   # Label from official source
                addo    1, r3, r3
                mulo    2, r3, r5
                addo    0x1F, 0x1A, r14
                subi    r5, r14, r5
                addo    2, r5, r5
                lda     0x1001500, g9
                shlo    1, r5, r15
                addo    r15, g9, g9
                ldos    0x5004BE, r4
                ld      right_barrier_breaking_hud_anim[r4*4], g0
                addo    4, sp, sp
                st      g0, -4(sp)
                call    dsp_pattern_new
                ld      -4(sp), g0
                subo    4, sp, sp
                addo    1, r4, r4
                cmpobne 7, r4, loc_7A704
                mov     0, r4
                stos    r4, p2_barrier_flag
                lda     0x1001500, g9
                shlo    1, r5, r15
                addo    r15, g9, g9
                call    clr_pattern
loc_7A704:                              # CODE XREF: bari_ptn_sub_2p+58↑j
                stos    r4, 0x5004BE
                ret
# End of function bari_ptn_sub_2p
# =============== S U B R O U T I N E =======================================
energy_disp:                            # CODE XREF: game_display_cont+1C↑p
                ldob    4(g7), r8       # Label from official source
                ldos    0x1AC(g7), r3
                cmpobe  1, r8, loc_7A748
                stos    r5, 0x48(g13)
                stos    r5, 0x4C(g13)
                ldos    0x44(g13), r7
                lda     0x10002B4, g9
                lda     2, r10
                subo    2, 0, r5
                ld      0x0(g13), r15
                bbs     0x1C, r15, loc_7A770
                cmpibe  r3, r7, loc_7A818
                b       loc_7A770
# ---------------------------------------------------------------------------
loc_7A748:                              # CODE XREF: energy_disp+8↑j
                stos    r5, 0x4A(g13)
                stos    r5, 0x4E(g13)
                ldos    0x46(g13), r7
                lda     0x10002C6, g9
                lda     3, r10
                mov     2, r5
                ld      0x0(g13), r15
                bbs     0x1C, r15, loc_7A770
                cmpibe  r3, r7, loc_7A818
loc_7A770:                              # CODE XREF: energy_disp+2C↑j
                subi    r3, r7, r9
                shrdi   1, r9, r9
                addo    r3, r9, r3
                cmpobe  1, r8, loc_7A788
                stis    r3, 0x44(g13)
                b       loc_7A78C
# ---------------------------------------------------------------------------
loc_7A788:                              # CODE XREF: energy_disp+6C↑j
                stis    r3, 0x46(g13)
loc_7A78C:                              # CODE XREF: energy_disp+74↑j
                shlo    4, 0xB, r7
                ldos    energy_max, r8
                mov     0x16, r6
                mulo    r7, r3, r3
                divo    r8, r3, r3
                mov     r10, g0
                mov     0, g4
                mov     0, g5
                mov     1, g3
                addi    r5, g9, g9
loc_7A7B8:                              # CODE XREF: energy_disp+104↓j
                cmpobe  1, r6, loc_7A7C8
                cmpobe  0x16, r6, loc_7A7D0
                mov     0, r7
                b       loc_7A7D8
# ---------------------------------------------------------------------------
loc_7A7C8:                              # CODE XREF: energy_disp:loc_7A7B8↑j
                subo    9, 0, r7
                b       loc_7A7D8
# ---------------------------------------------------------------------------
loc_7A7D0:                              # CODE XREF: energy_disp+AC↑j
                mov     9, r7
                b       loc_7A7D8
# ---------------------------------------------------------------------------
loc_7A7D8:                              # CODE XREF: energy_disp+B4↑j
                cmpibe  0, r3, loc_7A7FC
                cmpibg  8, r3, loc_7A7EC
                addo    0x12, r7, g4
                subi    8, r3, r3
                b       loc_7A800
# ---------------------------------------------------------------------------
loc_7A7EC:                              # CODE XREF: energy_disp+CC↑j
                addo    0xA, r3, g4
                addo    r7, g4, g4
                mov     0, r3
                b       loc_7A800
# ---------------------------------------------------------------------------
loc_7A7FC:                              # CODE XREF: energy_disp:loc_7A7D8↑j
                addo    0xA, r7, g4
loc_7A800:                              # CODE XREF: energy_disp+D8↑j
                mov     r10, g0
                mov     1, g3
                call    dsp_character
                addi    r5, g9, g9
                cmpdeco 1, r6, r6
                bl      loc_7A7B8
loc_7A818:                              # CODE XREF: energy_disp+30↑j
                ret
# End of function energy_disp
# =============== S U B R O U T I N E =======================================
clear_win_lamp_cntr:                    # CODE XREF: ROM:00007158↑p
                ld      mod_fa_game_disp, r9 # Label from official source
                lda     0x3F, r3
                stob    r3, 0x64(r9)
                stob    r3, 0x65(r9)
                stob    r3, 0x66(r9)
                stob    r3, 0x67(r9)
                stob    r3, 0x68(r9)
                stob    r3, 0x6E(r9)
                stob    r3, 0x6F(r9)
                stob    r3, 0x70(r9)
                stob    r3, 0x71(r9)
                stob    r3, 0x72(r9)
                mov     4, r3
                stob    r3, 0x69(r9)
                stob    r3, 0x6A(r9)
                stob    r3, 0x6B(r9)
                stob    r3, 0x6C(r9)
                stob    r3, 0x6D(r9)
                stob    r3, 0x73(r9)
                stob    r3, 0x74(r9)
                stob    r3, 0x75(r9)
                stob    r3, 0x76(r9)
                stob    r3, 0x77(r9)
                ret
# End of function clear_win_lamp_cntr
# =============== S U B R O U T I N E =======================================
win_lamp_int:                           # CODE XREF: ADV_REPLAY_WAIT1B+84↑p
                ldob    gameprogram, r14 # Label from official source
                cmpobe  2, r14, loc_7A898
                ldob    STAGE_ID, r14
                cmpobe  10, r14, win_lamp_erase # Hits just as the HUD is drawn but before the player health bars are filled before the match.
loc_7A898:                              # CODE XREF: win_lamp_int+8↑j
                lda     0xA, g0
                lda     0x100042E, g1
                ldob    p1_wins, g2
                subo    4, 0, g3
                call    win_lamp_draw
                lda     0x12, g0
                ldob    num_rounds_to_win, r11
                subo    g2, r11, g2
                call    win_lamp_draw
                lda     0xA, g0
                lda     0x100044A, g1
                ldob    p2_wins, g2
                mov     4, g3
                call    win_lamp_draw
                lda     0x12, g0
                subo    g2, r11, g2
                call    win_lamp_draw
                ret
# ---------------------------------------------------------------------------
win_lamp_erase:                         # CODE XREF: win_lamp_int+14↑j
                lda     0x100042A, g9   # Label from official source
                mov     2, g0
                mov     2, g1
                call    clr_pattern_s
                lda     0x100044E, g9
                mov     2, g0
                mov     2, g1
                call    clr_pattern_s
                ret
# End of function win_lamp_int
# =============== S U B R O U T I N E =======================================
win_lamp_draw:                          # CODE XREF: win_lamp_int+30↑p
                mov     g0, r3          # Label from official source
                mov     g1, r7
                mov     g2, r11
                mov     g3, r15
                addo    4, sp, sp
                st      g2, -4(sp)
                addo    4, sp, sp
                st      g3, -4(sp)
loc_7A948:                              # CODE XREF: win_lamp_draw+44↓j
                cmpi    0, r11
                bge     loc_7A968
                mov     r3, g0
                mov     r7, g9
                call    dsp_pattern_new
                addo    r15, r7, r7
                subo    1, r11, r11
                b       loc_7A948
# ---------------------------------------------------------------------------
loc_7A968:                              # CODE XREF: win_lamp_draw+2C↑j
                ld      -4(sp), g3
                subo    4, sp, sp
                ld      -4(sp), g2
                subo    4, sp, sp
                mov     r7, g1
                ret
# End of function win_lamp_draw
# =============== S U B R O U T I N E =======================================
win_lamp_dsp:                           # CODE XREF: game_display_cont+34↑p
                ldob    also_mode, r3   # Label from official source
                lda     mode9, r4
                cmpo    r4, r3
                bne     loc_7AAB4       # return
                ldob    p1_wins, r3
                ldob    p2_wins, r4
                or      r4, r3, r3
                cmpo    0, r3
                be      loc_7AAB4       # return
                ldob    p1_wins, r9
                cmpo    0, r9
                be      loc_7AA3C
                lda     0x1000436, g9
                lda     0x64(g13), r8
                lda     0x69(g13), r7
loc_7A9DC:                              # CODE XREF: win_lamp_dsp+B0↓j
                subo    8, g9, g9
                ldob    (r7), r4
                ld      per_char_win_star_texture_ptr[r4*4], r4
                ldob    (r8), r3
                shro    1, r3, r11
                ld      (r4)[r11*4], g0
                call    dsp_pattern_new
                subi    1, r3, r3
                cmpi    0, r3
                ble     loc_7AA28
                call    rand            # Random value stored to g0
                and     0x1F, g0, g0
                cmpobge 3, g0, loc_7AA18
                mov     0, g0
loc_7AA18:                              # CODE XREF: win_lamp_dsp+88↑j
                stob    g0, (r7)
                mov     0x1F, r15
                stib    r15, (r8)
                b       loc_7AA2C
# ---------------------------------------------------------------------------
loc_7AA28:                              # CODE XREF: win_lamp_dsp+7C↑j
                stob    r3, (r8)
loc_7AA2C:                              # CODE XREF: win_lamp_dsp+9C↑j
                addo    1, r7, r7
                addo    1, r8, r8
                cmpdeco 1, r9, r9
                bl      loc_7A9DC
loc_7AA3C:                              # CODE XREF: win_lamp_dsp+40↑j
                ldob    p2_wins, r9
                cmpobe  0, r9, loc_7AAB4 # return
                lda     0x100044A, g9
                mov     0, r10
                lda     0x6E(g13), r8
                lda     0x73(g13), r7
loc_7AA5C:                              # CODE XREF: win_lamp_dsp+128↓j
                ldob    (r7), r4
                ld      per_char_win_star_texture_ptr[r4*4], r4
                ldob    (r8), r3
                shro    1, r3, r11
                ld      (r4)[r11*4], g0
                call    dsp_pattern_new
                subi    1, r3, r3
                cmpible 0, r3, loc_7AAA0
                call    rand            # Random value stored to g0
                and     0x1F, g0, g0
                cmpobge 3, g0, loc_7AA90
                mov     0, g0
loc_7AA90:                              # CODE XREF: win_lamp_dsp+100↑j
                stob    g0, (r7)
                mov     0x1F, r15
                stib    r15, (r8)
                b       loc_7AAA4
# ---------------------------------------------------------------------------
loc_7AAA0:                              # CODE XREF: win_lamp_dsp+F4↑j
                stob    r3, (r8)
loc_7AAA4:                              # CODE XREF: win_lamp_dsp+114↑j
                addo    1, r7, r7
                addo    1, r8, r8
                cmpdeco 1, r9, r9
                bl      loc_7AA5C
loc_7AAB4:                              # CODE XREF: win_lamp_dsp+14↑j
                ret                     # return
# End of function win_lamp_dsp
# =============== S U B R O U T I N E =======================================
# Time Window
timewind_int:                           # CODE XREF: sub_7B380+38↓p
                mov     0, r15          # Label from official source
                st      r15, health_bar_hud_draw_frame_count
                ret
# End of function timewind_int
# =============== S U B R O U T I N E =======================================
# Time Window
timewind_dsp:                           # CODE XREF: ROUND_DSP:SET_DSP↑p
                ld      debug_flag, r3  # Label from official source
                bbc     2, r3, loc_7AADC # Branches because bit 2 will be clear
                bbc     5, r3, loc_7AADC
                b       loc_7AB9C       # return
# ---------------------------------------------------------------------------
loc_7AADC:                              # CODE XREF: timewind_dsp+8↑j
                ldos    health_bar_hud_draw_frame_count, r3
                addo    1, r3, r3
                stos    r3, health_bar_hud_draw_frame_count # Maxes out at 0x80
                mov     0, r11
                lda     dword_7AC08, r13
loc_7AAFC:                              # CODE XREF: timewind_dsp+D0↓j
                ldq     off_7ABA8[r11*16], r4 # r11 always 0
                cmpo    r5, r3
                testle  r14
                cmpo    r6, r3
                testg   r15
                and     r14, r15, r15
                cmpo    0, r15
                be      loc_7AB94
                cmpo    r13, r4
                bne     loc_7AB60
                subo    r5, r3, r8
                subo    1, r8, r8
                remo    r7, r8, r8
                ldl     (r4)[r8*8], g0
                shro    0x10, g1, r9
                shlo    0x10, g1, g1
                shro    0x10, g1, r8
                shli    1, r8, r15
                shli    7, r9, r14
                addi    r14, r15, r15
                lda     TILE_DATA_START, r14
                addo    r14, r15, g9
                call    clr_pattern
loc_7AB60:                              # CODE XREF: timewind_dsp+5C↑j
                subo    r5, r3, r8
                remo    r7, r8, r8
                ldl     (r4)[r8*8], g0
                shro    0x10, g1, r9
                shlo    0x10, g1, g1
                shro    0x10, g1, r8
                shli    1, r8, r15
                shli    7, r9, r14
                addi    r14, r15, r15
                lda     TILE_DATA_START, r14
                addo    r14, r15, g9
                call    dsp_pattern_new
loc_7AB94:                              # CODE XREF: timewind_dsp+54↑j
                cmpinco 5, r11, r11
                bg      loc_7AAFC
loc_7AB9C:                              # CODE XREF: timewind_dsp+10↑j
                ret                     # return
# End of function timewind_dsp
# ---------------------------------------------------------------------------
                .long 0
                .long 0
off_7ABA8:      .long dword_7AC08       # DATA XREF: timewind_dsp:loc_7AAFC↑r
                .long 0xA
                .long 0x18
                .long 0xE
                .long dword_7AC78       # unused
                .long 0x18
                .long 0x32
                .long 0x1A
                .long dword_7AD48       # unused
                .long 0x18
                .long 0x32
                .long 0x1A
                .long dword_7AE18       # unused
                .long 0x32
                .long 0x35
                .long 3
                .long dword_7AE30       # unused
                .long 0x32
                .long 0x35
                .long 3
                .long dword_7AE48       # unused
                .long 0x2B
                .long 0x32
                .long 7
dword_7AC08:    .long 0x3C              # DATA XREF: timewind_dsp+2C↑o
                .long 0x1A
                .long 0x3E
                .long 0x10019
                .long 0x3F
                .long 0x20018
                .long 0x40
                .long 0x30017
                .long 0x3F
                .long 0x20018
                .long 0x3E
                .long 0x10019
                .long 0x3C
                .long 0x1A
                .long 0x41
                .long 0x1B
                .long 0x42
                .long 0x1C
                .long 0x43
                .long 0x1D
                .long 0x42
                .long 0x1C
                .long 0x41
                .long 0x1B
                .long 0x3C
                .long 0x1A
                .long 0x3D
                .long 0x1A
dword_7AC78:    .long 0x36              # DATA XREF: ROM:0007ABB8↑o
                .long 0x40019
                .long 0x36
                .long 0x40018
                .long 0x36
                .long 0x40017
                .long 0x36
                .long 0x40016
                .long 0x36
                .long 0x40015
                .long 0x36
                .long 0x40014
                .long 0x36
                .long 0x40013
                .long 0x36
                .long 0x40012
                .long 0x36
                .long 0x40011
                .long 0x36
                .long 0x40010
                .long 0x36
                .long 0x4000F
                .long 0x36
                .long 0x4000E
                .long 0x36
                .long 0x4000D
                .long 0x36
                .long 0x4000C
                .long 0x36
                .long 0x4000B
                .long 0x36
                .long 0x4000A
                .long 0x36
                .long 0x40009
                .long 0x36
                .long 0x40008
                .long 0x36
                .long 0x40007
                .long 0x36
                .long 0x40006
                .long 0x36
                .long 0x40005
                .long 0x36
                .long 0x40004
                .long 0x37
                .long 0x40003
                .long 0x36
                .long 0x50002
                .long 0x36
                .long 0x50001
                .long 0x38
                .long 0x50000
dword_7AD48:    .long 0x39              # DATA XREF: ROM:0007ABC8↑o
                .long 0x40024
                .long 0x39
                .long 0x40025
                .long 0x39
                .long 0x40026
                .long 0x39
                .long 0x40027
                .long 0x39
                .long 0x40028
                .long 0x39
                .long 0x40029
                .long 0x39
                .long 0x4002A
                .long 0x39
                .long 0x4002B
                .long 0x39
                .long 0x4002C
                .long 0x39
                .long 0x4002D
                .long 0x39
                .long 0x4002E
                .long 0x39
                .long 0x4002F
                .long 0x39
                .long 0x40030
                .long 0x39
                .long 0x40031
                .long 0x39
                .long 0x40032
                .long 0x39
                .long 0x40033
                .long 0x39
                .long 0x40034
                .long 0x39
                .long 0x40035
                .long 0x39
                .long 0x40036
                .long 0x39
                .long 0x40037
                .long 0x39
                .long 0x40038
                .long 0x39
                .long 0x40039
                .long 0x3A
                .long 0x4003A
                .long 0x39
                .long 0x5003B
                .long 0x39
                .long 0x5003C
                .long 0x3B
                .long 0x5003D
dword_7AE18:    .long 0x44              # DATA XREF: ROM:0007ABD8↑o
                .long 0x30000
                .long 0x45
                .long 0x30000
                .long 0x46
                .long 0x30000
dword_7AE30:    .long 0x47              # DATA XREF: ROM:0007ABE8↑o
                .long 0x3003A
                .long 0x48
                .long 0x3003A
                .long 0x49
                .long 0x3003A
dword_7AE48:    .long 0x2F              # DATA XREF: ROM:0007ABF8↑o
                .long 0x16
                .long 0x30
                .long 0x16
                .long 0x31
                .long 0x16
                .long 0x32
                .long 0x16
                .long 0x33
                .long 0x16
                .long 0x34
                .long 0x16
                .long 0x35
                .long 0x16
                .long 0
                .long 0
# ---------------------------------------------------------------------------
time_int:                               # Label from official source
                call    sonic_11_08_dsp # unreachable code (old)
                ldib    time, r3
                ld      not_scr_bg_move, r4
                chkbit  4, r4
                alterbit 0, 0, r5
                shro    r5, r3, r3
                lda     0x1000238, g9
                lda     0xE, g0
                divi    0xA, r3, g4
                mov     0, g5
                mov     2, g3
                call    dsp_character
                lda     0x100023C, g9
                lda     0xE, g0
                remi    0xA, r3, g4
                mov     0, g5
                mov     2, g3
                call    dsp_character
                lda     0x10002C0, g9
                lda     0x10, g0
                mov     0, g4
                mov     0, g5
                mov     1, g3
                call    dsp_character
                lda     0x10002C2, g9
                lda     0x10, g0
                mov     0, g4
                mov     0, g5
                mov     1, g3
                call    dsp_character
                ret
# =============== S U B R O U T I N E =======================================
time_dsp:                               # CODE XREF: game_display_cont+30↑p
                lda     0x1000240, g9   # Label from official source
                lda     15, g0          # Time double quote (seconds) indicator
                call    dsp_pattern_new
                ldos    game_timer, r3
                mov     r3, r4
                shro    6, r3, r3
                divo    10, r3, r5
                lda     0x1000238, g9
                lda     14, g0
                mov     r5, g4
                mov     0, g5
                mov     2, g3
                call    dsp_character
                mulo    10, r5, r5
                subo    r5, r3, r6
                lda     0x100023C, g9
                lda     14, g0
                mov     r6, g4
                mov     0, g5
                mov     2, g3
                call    dsp_character
                lda     0x3F, r7
                and     r7, r4, r4
                shlo    2, 0x19, r7
                mulo    r7, r4, r4
                shro    6, r4, r4
                divo    0xA, r4, r5
                lda     0x10002C0, g9
                lda     16, g0
                mov     r5, g4
                mov     0, g5
                mov     1, g3
                call    dsp_character
                mulo    0xA, r5, r5
                subo    r5, r4, r6
                lda     0x10002C2, g9
                lda     16, g0
                mov     r6, g4
                mov     0, g5
                mov     1, g3
                call    dsp_character
                ret
# End of function time_dsp
# =============== S U B R O U T I N E =======================================
totaltime_dsp:                          # CODE XREF: char_rank_disp_one_line_sub+28↑p
                ldob    RANDOM_MODE, r14 # Label from official source
                cmpobe  1, r14, loc_7B080
                lda     360000, r14
                cmpoble r14, g0, loc_7B080
                mov     g0, r11
                remo    0xA, r11, g0
                call    dsp_num_2x3
                subo    8, g9, g9
                divo    0xA, r11, r11
                remo    0xA, r11, g0
                call    dsp_num_2x3
                subo    8, g9, g9
                addo    0x1F, 3, g0
                call    dsp_char_2x3
                subo    8, g9, g9
                divo    0xA, r11, r11
                remo    0xA, r11, g0
                call    dsp_num_2x3
                divo    0xA, r11, r11
                cmpo    0, r11
                be      loc_7B07C
                remo    6, r11, g0
                divo    6, r11, r11
                subo    8, g9, g9
                call    dsp_num_2x3
                cmpo    0, r11
                be      loc_7B07C
                subo    8, g9, g9
                addo    0x1F, 8, g0
                call    dsp_char_2x3
                subo    8, g9, g9
                remo    0xA, r11, g0
                call    dsp_num_2x3
                divo    0xA, r11, g0
                cmpo    0, g0
                be      loc_7B07C
                subo    8, g9, g9
                call    dsp_num_2x3
loc_7B07C:                              # CODE XREF: totaltime_dsp+58↑j
                ret
# ---------------------------------------------------------------------------
loc_7B080:                              # CODE XREF: totaltime_dsp+8↑j
                addo    0x1F, 0xE, g0
                call    dsp_char_2x3
                subo    8, g9, g9
                call    dsp_char_2x3
                subo    8, g9, g9
                addo    0x1F, 3, g0
                call    dsp_char_2x3
                subo    8, g9, g9
                addo    0x1F, 0xE, g0
                call    dsp_char_2x3
                subo    8, g9, g9
                call    dsp_char_2x3
                subo    8, g9, g9
                addo    0x1F, 8, g0
                call    dsp_char_2x3
                subo    8, g9, g9
                addo    0x1F, 0xE, g0
                call    dsp_char_2x3
                subo    8, g9, g9
                call    dsp_char_2x3
                ret
# End of function totaltime_dsp
# =============== S U B R O U T I N E =======================================
char_nameplate_dsp:                     # CODE XREF: ADV_REPLAY_WAIT1B+88↑p
                addo    4, sp, sp       # Label from official source
                st      r3, -4(sp)
                addo    0x10, sp, sp
                stq     r4, -0x10(sp)
                addo    0x10, sp, sp
                stq     r8, -0x10(sp)
                addo    0x10, sp, sp
                stq     r12, -0x10(sp)
                addo    0x10, sp, sp
                stq     g0, -0x10(sp)
                addo    0x10, sp, sp
                stq     g4, -0x10(sp)
                addo    0x10, sp, sp
                stq     g8, -0x10(sp)
                addo    4, sp, sp
                st      g12, -4(sp)
                addo    4, sp, sp
                st      g13, -4(sp)
                addo    4, sp, sp
                st      g14, -4(sp)
                lda     player_names_jpn, r11
                lda     334, r10        # AT (Automatic) texture
                ld      add_BACKUP_RAM_TO_RAM, r4
                ldob    0x3352(r4), r4  # r4 = BACKUP_RAM_TO_RAM+0x3352
                cmpo    0, r4
                be      draw_p1_ingame_name
                lda     player_names_usa, r11
                lda     334, r10        # AT (Automatic) texture
draw_p1_ingame_name:                    # CODE XREF: char_nameplate_dsp+98↑j
                lda     0x100040A, g9
                ld      fa_rob0, r3
                ldob    0x1B0(r3), r4
                ldos    (r11)[r4*2], g0
                call    dsp_pattern_new
                ld      0x0(r3), r15
                bbc     0x1E, r15, draw_p2_ingame_name
                lda     0x1000508, g9
                mov     r10, g0
                call    dsp_pattern_new
draw_p2_ingame_name:                    # CODE XREF: char_nameplate_dsp+C8↑j
                lda     0x1000472, g9
                ld      fa_rob1, r7
                ldob    0x1B0(r7), r4
                ldos    (r11)[r4*2], g0
                call    dsp_pattern_right
                ld      0x0(r7), r15
                bbc     0x1E, r15, loc_7B1E4
                lda     0x100056E, g9
                mov     r10, g0
                call    dsp_pattern_new
loc_7B1E4:                              # CODE XREF: char_nameplate_dsp+FC↑j
                ld      -4(sp), g14
                subo    4, sp, sp
                ld      -4(sp), g13
                subo    4, sp, sp
                ld      -4(sp), g12
                subo    4, sp, sp
                ldq     -0x10(sp), g8
                subo    0x10, sp, sp
                ldq     -0x10(sp), g4
                subo    0x10, sp, sp
                ldq     -0x10(sp), g0
                subo    0x10, sp, sp
                ldq     -0x10(sp), r12
                subo    0x10, sp, sp
                ldq     -0x10(sp), r8
                subo    0x10, sp, sp
                ldq     -0x10(sp), r4
                subo    0x10, sp, sp
                ld      -4(sp), r3
                subo    4, sp, sp
                ret
# End of function char_nameplate_dsp
# =============== S U B R O U T I N E =======================================
gauge_filled_int:                       # CODE XREF: MES_READY_INT+68↓p
                ld      health_bar_flag, r15 # Label from official source
                setbit  0, r15, r15
                st      r15, health_bar_flag
                ret
# End of function gauge_filled_int
# =============== S U B R O U T I N E =======================================
gauge_filled_cnt:                       # CODE XREF: MES_READY_DSP↓p
                ld      not_scr_bg_move, r15 # Label from official source
                bbs     4, r15, loc_7B2E4 # return
                ld      fa_rob0, r3
                ld      fa_rob1, r7
                ldos    0x1AC(r3), r4
                ldos    0x1AC(r7), r5
                ldos    energy_max, r13
                mov     30, r14         # divide energy_max by 30
                divo    r14, r13, r15   # if energy_max = 140, r15 = 4
                cmpo    r13, r4         # compare ordinal energy_max to p1_energy
                bg      adj_player_energy # branch if greater
                stos    r13, 0x1AC(r3)
                stos    r13, 0x1AC(r7)
                ld      health_bar_flag, r15
                clrbit  0, r15, r15
                st      r15, health_bar_flag
                b       loc_7B2E4       # return
# ---------------------------------------------------------------------------
adj_player_energy:                      # CODE XREF: gauge_filled_cnt+38↑j
                addo    r15, r4, r4
                addo    r15, r5, r5
                stos    r4, 0x1AC(r3)   # store r4 to p1_energy
                stos    r5, 0x1AC(r7)   # store r5 to p2_energy
loc_7B2E4:                              # CODE XREF: gauge_filled_cnt+8↑j
                ret                     # return
# End of function gauge_filled_cnt
# =============== S U B R O U T I N E =======================================
# Attributes: thunk
MES_NULL:                               # DATA XREF: ROM:draw_vs_routines↓o
                b       gp_mes_ex       # Label from official source
# End of function MES_NULL
# =============== S U B R O U T I N E =======================================
MES_ROUND_INT:                          # DATA XREF: ROM:000AEAFC↓o
                ld      not_scr_bg_move, r15 # Label from official source
                bbs     4, r15, loc_7B324
                lda     70, g0
                call    _Scroll_Initialize
                lda     170, g0
                call    _Scroll_Initialize
                mov     0, r15
                ld      fa_rob0, r3
                ld      fa_rob1, r7
                stos    r15, 0x1AC(r3)  # p1_energy
                stos    r15, 0x1AC(r7)  # p2_energy
loc_7B324:                              # CODE XREF: MES_ROUND_INT+8↑j
                ld      mod_fa_game_disp, r3
                ld      0x0(r3), r15
                setbit  0x1E, r15, r15
                st      r15, 0x0(r3)
                mov     0, r15
                stos    r15, 0x44(r3)
                stos    r15, 0x46(r3)
                ldob    gameprogram, r3 # bit 0 clear = Player 1
                cmpo    1, r3
                bl      loc_7B354
loc_7B354:                              # CODE XREF: MES_ROUND_INT+64↑j
                b       gp_mes_ex
# End of function MES_ROUND_INT
# ---------------------------------------------------------------------------
stage_title_cards:.short 227            # DATA XREF: sub_7B380+AC↓r
                .short 225              # FLYING CARPET
                .short 221              # AURORA ICEFIELD
                .short 500              # MUSHROOM HILL
                .short 383              # CANYON CRUISE
                .short 222              # CASINO NIGHT
                .short 224              # DYNAMITE PLANT
                .short 385              # GIANT WING
                .short 384              # DEATH EGG II
                .short 0
                .short 227              # SOUTH ISLAND
                .short 227              # SOUTH ISLAND
                .short 227              # SOUTH ISLAND
                .short 227              # SOUTH ISLAND
                .short 227              # SOUTH ISLAND
                .short 227              # SOUTH ISLAND
                .short 227              # SOUTH ISLAND
                .short 227              # SOUTH ISLAND
                .short 227              # SOUTH ISLAND
                .short 227              # SOUTH ISLAND
# =============== S U B R O U T I N E =======================================
sub_7B380:                              # DATA XREF: ROM:000AEB00↓o
                lda     0x1000000, g9
                shlo    6, 1, g0
                shlo    6, 1, g1
                call    clr_pattern_s
                lda     0x1002000, g9
                shlo    6, 1, g0
                shlo    6, 1, g1
                call    clr_pattern_s
                lda     0x1000000, g9
                lda     17, g0          # Health bar and timer hud texture
                call    clr_pattern
                call    timewind_int    # Time Window
                ld      not_scr_bg_move, r15
                bbs     4, r15, loc_7B3E4
                mov     0, r15
                ld      fa_rob0, r3
                ld      fa_rob1, r7
                stos    r15, 0x1AC(r3)
                stos    r15, 0x1AC(r7)
loc_7B3E4:                              # CODE XREF: sub_7B380+44↑j
                ld      mod_fa_game_disp, r3
                ld      0x0(r3), r15
                setbit  0x1E, r15, r15
                st      r15, 0x0(r3)
                mov     0, r15
                stos    r15, 0x44(r3)
                stos    r15, 0x46(r3)
                lda     0x1000A00, g9
                addo    0x1F, 0x1F, g0
                mov     0x14, g1
                call    clr_pattern_s
                ldob    curr_round_num, r3
                cmpobne 1, r3, loc_7B4C0
                ldob    stage_num, r3
                ldos    stage_title_cards[r3*2], r4
                cmpobe  0, r4, loc_7B4C0
                lda     0x1000708, g9
                lda     220, g0         # Sonic the Fighters stage card
                call    dsp_pattern_new
                lda     0x1000C8C, g9
                mov     r4, g0
                call    dsp_pattern_new
                ldob    gameprogram, r5 # bit 0 clear = Player 1
                cmpobe  2, r5, loc_7B4C0
                ldob    STAGE_ID, r14
                cmpobe  9, r14, loc_7B4C0
                ldob    STAGE_ID, r14
                cmpobe  10, r14, loc_7B4C0
                lda     0x1001132, g9
                lda     382, g0         # STAGE text
                call    dsp_pattern_new
                addo    1, r3, g0
                mov     2, g1
                call    make_dec_string_left
                mov     g0, r4
                lda     342, g0         # 0 to 9 STAGE number texture
                mov     2, g3
                ldob    (r4), g4
                call    dsp_character
                cmpobge 1, g1, loc_7B4C0
                addo    4, g9, g9
                lda     342, g0         # 0 to 9 STAGE number texture
                ldob    1(r4), g4
                call    dsp_character
loc_7B4C0:                              # CODE XREF: sub_7B380+A0↑j
                ld      not_scr_bg_move, r15
                bbs     4, r15, draw_sudden_death
                ldob    curr_round_num, r15
                cmpobne 1, r15, loc_7B4F0
                ld      fa_camera, r14
                mov     0, r15
                stib    r15, 0x274(r14)
                mov     1, r15
                stib    r15, 0x27C(r14)
loc_7B4F0:                              # CODE XREF: sub_7B380+154↑j
                ldob    STAGE_ID, r14
                cmpobe  10, r14, loc_7B570 # If final battle with Eggman, branch
                lda     dword_7E1EC, g1
                ldob    curr_round_num, r12
                cmpobne 1, r12, loc_7B518
                lda     dword_7E204, g1
loc_7B518:                              # CODE XREF: sub_7B380+18C↑j
                call    sub_7E0A4
                lda     0x10007A0, g9
                lda     219, g0         # Round number "ROUND" texture
                shlo    0xD, 1, r13
                addi    r13, g9, g9
                call    dsp_pattern_new
                lda     0x10008CE, g9
                shlo    0xD, 1, r13
                addi    r13, g9, g9
                ldob    curr_round_num, g4
                subo    1, g4, g4
                mov     4, g3
                lda     329, g0         # Round Num number font
                call    dsp_character
                b       loc_7B570
# ---------------------------------------------------------------------------
draw_sudden_death:                      # CODE XREF: sub_7B380+148↑j
                lda     0x1000B9E, g9
                mov     30, g0          # SUDDEN DEATH texture
                call    dsp_pattern_new
loc_7B570:                              # CODE XREF: sub_7B380+178↑j
                ldob    gameprogram, r14 # bit 0 clear = Player 1
                cmpobe  2, r14, loc_7B590
                lda     0x1001682, g9
                ldob    STAGE_ID, r3
                b       loc_7B590
# ---------------------------------------------------------------------------
loc_7B590:                              # CODE XREF: sub_7B380+1F8↑j
                b       gp_mes_ex
# End of function sub_7B380
# =============== S U B R O U T I N E =======================================
sub_7B594:                              # DATA XREF: ROM:000AEB04↓o
                call    sub_7E0F4
                shlo    3, 0x19, r13
                ld      0x50301C, r14
                cmpobne r13, r14, loc_7B5CC
                lda     0x1000708, g9
                lda     220, g0         # Sonic the Fighters stage card
                call    clr_pattern
                lda     0x1001100, g9
                addo    0x1F, 0x1F, g0
                mov     2, g1
                call    clr_pattern_s
loc_7B5CC:                              # CODE XREF: sub_7B594+10↑j
                b       gp_mes_ex
# End of function sub_7B594
# =============== S U B R O U T I N E =======================================
MES_READY_INT:                          # DATA XREF: ROM:000AEB08↓o
                ldob    time, r3        # Label from official source
                shlo    6, r3, r3
                ld      not_scr_bg_move, r7
                chkbit  4, r7
                alterbit 0, 0, r4
                shro    r4, r3, r3
                stos    r3, game_timer
                ldob    STAGE_ID, r14
                cmpobne 10, r14, loc_7B61C
                ldob    gameprogram, r14 # bit 0 clear = Player 1
                cmpobe  2, r14, loc_7B61C
                shlo    6, 0xF, r15
                stis    r15, game_timer
loc_7B61C:                              # CODE XREF: MES_READY_INT+30↑j
                ld      mod_fa_game_disp, r3
                ld      0x0(r3), r15
                clrbit  30, r15, r15    # If bit 30 not cleared, health bars and timer won't be visible
                st      r15, 0x0(r3)
                call    win_lamp_int
                call    char_nameplate_dsp
                call    gauge_filled_int
                call    sub_7E0F4
                mov     5, r15
                stib    r15, draw_vs_routine_flag
                b       gp_mes_ex
# End of function MES_READY_INT
# =============== S U B R O U T I N E =======================================
MES_READY_DSP:                          # DATA XREF: ROM:000AEB0C↓o
                call    gauge_filled_cnt # Label from official source
                call    sub_7E0F4
                shlo    3, 0x19, r13
                ld      0x50301C, r14
                cmpobne r13, r14, loc_7B68C
                lda     0x1000708, g9
                lda     220, g0         # Sonic the Fighters stage card
                call    clr_pattern
                lda     0x1001100, g9
                addo    0x1F, 0x1F, g0
                mov     2, g1
                call    clr_pattern_s
loc_7B68C:                              # CODE XREF: MES_READY_DSP+14↑j
                b       gp_mes_ex
# End of function MES_READY_DSP
# =============== S U B R O U T I N E =======================================
MES_FIGHT_INT:                          # DATA XREF: ROM:000AEB10↓o
                mov     0, r15          # Label from official source
                stis    r15, 0x100A000
                mov     0, r15
                stis    r15, 0x100A008
                lda     0x1000700, g9
                addo    0x1F, 0x1F, g0
                addo    0x1F, 3, g1
                call    clr_pattern_s
                call    barrier_left_disp_init
                ldob    gameprogram, r5 # bit 0 clear = Player 1
                cmpobe  2, r5, loc_7B738
                ldob    STAGE_ID, r14
                cmpobe  9, r14, draw_final_stage
                ldob    STAGE_ID, r14
                cmpobe  10, r14, draw_bonus_stage
                lda     0x1001536, g9
                lda     435, g0         # tiny STAGE texture
                call    dsp_pattern_new
                lda     0x100163C, g9
                mov     2, g3
                lda     530, g0         # Stage number font
                ldob    STAGE_ID, r3
                cmpobg  0xA, r3, loc_7B730
                divo    0xA, r3, g4
                cmpo    0, g4
                be      loc_7B728
                lda     0x100163A, g9
                call    dsp_character
loc_7B728:                              # CODE XREF: MES_FIGHT_INT+88↑j
                lda     0x100163E, g9
loc_7B730:                              # CODE XREF: MES_FIGHT_INT+7C↑j
                remo    0xA, r3, g4
                call    dsp_character
loc_7B738:                              # CODE XREF: MES_FIGHT_INT+38↑j
                b       gp_mes_ex
# ---------------------------------------------------------------------------
draw_final_stage:                       # CODE XREF: MES_FIGHT_INT+44↑j
                lda     0x1001536, g9
                lda     532, g0         # tiny FINAL texture
                call    dsp_pattern_new
                b       draw_stage
# ---------------------------------------------------------------------------
draw_bonus_stage:                       # CODE XREF: MES_FIGHT_INT+50↑j
                lda     0x1001536, g9
                lda     531, g0         # tiny BONUS texture
                call    dsp_pattern_new
draw_stage:                             # CODE XREF: MES_FIGHT_INT+BC↑j
                lda     0x1001636, g9
                lda     533, g0         # Tiny STAGE texture
                call    dsp_pattern_new
                b       gp_mes_ex
# End of function MES_FIGHT_INT
# =============== S U B R O U T I N E =======================================
MES_FIGHT_DSP:                          # DATA XREF: ROM:000AEB14↓o
                ldob    gameprogram, r14 # Label from official source
                cmpobl  1, r14, loc_7B7C8
                ld      0x500070, r3
                ldos    game_timer, r4
                ldob    time, r5
                shlo    6, r5, r5
                ld      not_scr_bg_move, r15
                bbc     4, r15, loc_7B7AC
                shro    1, r5, r5
loc_7B7AC:                              # CODE XREF: MES_FIGHT_DSP+30↑j
                subo    r4, r5, r5
                shlo    2, 0x19, r15
                mulo    r15, r5, r5
                shro    6, r5, r5
                addo    r3, r5, g0
                lda     0x10015F4, g9
loc_7B7C8:                              # CODE XREF: MES_FIGHT_DSP+8↑j
                b       gp_mes_ex
# End of function MES_FIGHT_DSP
# =============== S U B R O U T I N E =======================================
MES_JUDGE_INT:                          # DATA XREF: ROM:000AEB18↓o
                mov     0, r15          # Label from official source
                st      r15, 0x94(g13)
                lda     0xFFFFF000, r15
                stis    r15, 0x98(g13)
                ldob    gameprogram, r14 # bit 0 clear = Player 1
                cmpobl  1, r14, gameprogram_is_0 # If gameprogram less than 1 branch
                b       gameprogram_is_0 # but we load the same thing anyway so what
# ---------------------------------------------------------------------------
gameprogram_is_0:                       # CODE XREF: MES_JUDGE_INT+1C↑j
                mov     9, r15
                stib    r15, draw_vs_routine_flag
                ret
# End of function MES_JUDGE_INT
# =============== S U B R O U T I N E =======================================
MES_JUDGE_DSP:                          # DATA XREF: ROM:000AEB1C↓o
                ldob    0x50004D, r14 # Label from official source
                cmpobe  2, r14, draw_draw_texture
                ld      not_scr_bg_move, r15
                bbs     0, r15, draw_time_over
                ldob    0x500050, r14
                cmpobe  0, r14, loc_7B828
                b       gp_mes_ex
# ---------------------------------------------------------------------------
loc_7B828:                              # CODE XREF: MES_JUDGE_DSP+20↑j
                ldob    0x50004D, r14
                cmpobe  2, r14, loc_7B85C
                ldos    energy_max, r5
                ld      fa_rob0, r4
                ldos    0x1AC(r4), r3
                cmpobe  r5, r3, draw_perfect
                ld      fa_rob1, r4
                ldos    0x1AC(r4), r3
                cmpobe  r5, r3, draw_perfect
loc_7B85C:                              # CODE XREF: MES_JUDGE_DSP+30↑j
                b       gp_mes_ex
# ---------------------------------------------------------------------------
draw_time_over:                         # CODE XREF: MES_JUDGE_DSP+14↑j
                lda     0x100100E, g9
                mov     24, g0          # TIME OVER texture
                call    dsp_pattern_new
                b       gp_mes_ex
# ---------------------------------------------------------------------------
draw_draw_texture:                      # CODE XREF: MES_JUDGE_DSP+8↑j
                lda     0x1001022, g9
                mov     22, g0          # DRAW texture
                call    dsp_pattern_new
                b       gp_mes_ex
# ---------------------------------------------------------------------------
draw_perfect:                           # CODE XREF: MES_JUDGE_DSP+48↑j
                lda     0x1000FAA, g9
                mov     28, g0          # PERFECT texture
                ld      frame_counter, r15
                bbs     3, r15, loc_7B8A8
                call    dsp_pattern_new
                b       loc_7B8AC
# ---------------------------------------------------------------------------
loc_7B8A8:                              # CODE XREF: MES_JUDGE_DSP+9C↑j
                call    clr_pattern
loc_7B8AC:                              # CODE XREF: MES_JUDGE_DSP+A4↑j
                b       gp_mes_ex
# End of function MES_JUDGE_DSP
# =============== S U B R O U T I N E =======================================
draw_tme_over_or_draw:                  # DATA XREF: ROM:000AEB20↓o
                call    win_lamp_int
                mov     0xB, r15
                stib    r15, draw_vs_routine_flag
                ldob    0x50004D, r14
                cmpobe  2, r14, draw_draw_texture0
                ldob    0x500050, r14
                cmpobe  0, r14, loc_7B90C
                ldob    0x500050, r14
                cmpobe  1, r14, loc_7B8F8
                lda     0x100108E, g9
                mov     24, g0          # TIME OVER texture
                call    dsp_pattern_new
                b       gp_mes_ex
# ---------------------------------------------------------------------------
loc_7B8F8:                              # CODE XREF: draw_tme_over_or_draw+30↑j
                ld      mod_fa_pol_string, r3
                mov     0x15, r15
                stib    r15, 0x200(r3)
                b       gp_mes_ex
# ---------------------------------------------------------------------------
loc_7B90C:                              # CODE XREF: draw_tme_over_or_draw+24↑j
                b       gp_mes_ex
# ---------------------------------------------------------------------------
draw_draw_texture0:                     # CODE XREF: draw_tme_over_or_draw+18↑j
                lda     0x10010A2, g9
                mov     22, g0          # DRAW texture
                call    dsp_pattern_new
                b       gp_mes_ex
# End of function draw_tme_over_or_draw
# =============== S U B R O U T I N E =======================================
# Attributes: thunk
j_gp_mes_ex:                            # DATA XREF: ROM:000AEB24↓o
                b       gp_mes_ex
# End of function j_gp_mes_ex
# =============== S U B R O U T I N E =======================================
draw_round_over:                        # DATA XREF: ROM:000AEB28↓o
                mov     0xD, r15
                stib    r15, draw_vs_routine_flag
                mov     0, g1
                call    sub_7E0A4
                ldob    gameprogram, r14 # bit 0 clear = Player 1
                cmpobl  1, r14, loc_7BA8C
                ldob    gameprogram, r13 # bit 0 clear = Player 1
                ldob    0x50004E, r14
                cmpobe  r13, r14, loc_7B970 # if gameprogram equals 0x50004E then branch
                lda     0x1001092, g9
                mov     25, g0          # YOU LOSE texture
                call    dsp_pattern_new
                b       loc_7BACC
# ---------------------------------------------------------------------------
loc_7B970:                              # CODE XREF: draw_round_over+30↑j
                lda     dword_7E190, g1
                call    sub_7E0A4
                lda     0x1002000, g9
                addo    0x1F, 0x1F, g0
                addo    0x1F, 0x11, g1
                call    clr_pattern_s
                shlo    0xF, 1, r15
                stis    r15, 0x100A000
                shlo    0xE, 1, r15
                stis    r15, 0x100A008
                lda     0x1008000, r14
                mov     0, r15
                shlo    4, 7, r13
loc_7B9B8:                              # CODE XREF: draw_round_over+9C↓j
                stis    r15, (r14)
                addo    2, r14, r14
                cmpdeco 1, r13, r13
                bl      loc_7B9B8
                lda     0x10080E0, r14
                lda     0x1FF, r15
                shlo    6, 3, r13
loc_7B9D8:                              # CODE XREF: draw_round_over+BC↓j
                stis    r15, (r14)
                addo    2, r14, r14
                cmpdeco 1, r13, r13
                bl      loc_7B9D8
                ldob    STAGE_ID, r14
                cmpobe  0xA, r14, loc_7BACC
                lda     0x1000798, g9
                lda     326, g0         # STAGE texture
                call    dsp_pattern_new
                lda     0x10007CA, g9
                lda     325, g0         # CLEAR texture
                call    dsp_pattern_new
                lda     0x10007BA, g9
                ldob    STAGE_ID, g0
                mov     2, g1
                lda     0x147, g2
                mov     3, g3
                call    disp_dec_r
                ldob    STAGE_ID, r14
                cmpobe  0xA, r14, loc_7BACC
                lda     0x1000B42, g9
                lda     319, g0         # CLEAR TIME texture
                call    dsp_pattern_new
                lda     0x1000FC2, g9
                lda     328, g0         # TOTAL TIME texture
                call    dsp_pattern_new
                ld      0x500434, g0
                lda     0x1000CB8, g9
                call    time_disp
                ld      0x500070, g0
                lda     0x1001138, g9
                call    time_disp
                b       loc_7BACC
# ---------------------------------------------------------------------------
loc_7BA8C:                              # CODE XREF: draw_round_over+1C↑j
                lda     0x10007A2, g9
                lda     323, g0         # PLAYER WIN texture
                call    dsp_pattern_new
                ldob    winner, g4
                lda     324, g0         # 1 2 texture Goes inbetween PLAYER and WIN above
                mov     3, g3
                lda     0x10007C8, g9
                call    dsp_character
                ld      health_bar_flag, r15
                setbit  1, r15, r15
                st      r15, health_bar_flag
loc_7BACC:                              # CODE XREF: draw_round_over+44↑j
                b       gp_mes_ex
# End of function draw_round_over
# =============== S U B R O U T I N E =======================================
time_disp:                              # CODE XREF: draw_round_over+148↑p
                mov     g9, r9          # Label from official source
                ldob    RANDOM_MODE, r14
                cmpobe  1, r14, time_disp_max # If RANDOM_MODE = 1 branch
                lda     360000, r14
                cmpoble r14, g0, time_disp_max
                mov     g0, r11
                shlo    2, 0x19, r12
                remo    r12, r11, g0
                mov     2, g1
                shlo    6, 5, g2
                mov     3, g3
                addo    0x1F, 5, r13
                addi    r13, r9, g9
                call    disp_dec
                addi    0x1E, r9, g9
                lda     322, g0         # Double quote
                call    dsp_pattern_new
                shlo    2, 0x19, r12
                divo    r12, r11, r11
                addo    0x1F, 0x1D, r12
                remo    r12, r11, g0
                mov     2, g1
                shlo    6, 5, g2
                addi    0x12, r9, g9
                call    disp_dec
                addo    0x1F, 0x1D, r12
                divo    r12, r11, r11
                cmpobe  0, r11, loc_7BB98
                addi    0xC, r9, g9
                lda     321, g0         # Single quote
                call    dsp_pattern_new
                addo    0x1F, 0x1D, r12
                remo    r12, r11, g0
                mov     2, g1
                shlo    6, 5, g2
                mov     r9, g9
                call    disp_dec_r
                stq     g0, AUDIO_3
                st      g14, 0x50EFE8
                lda     byte_AEBC0, g0
                bal     break_point_display
                ldq     AUDIO_3, g0
                ld      0x50EFE8, g14
loc_7BB98:                              # CODE XREF: time_disp+74↑j
                ret
# ---------------------------------------------------------------------------
time_disp_max:                          # CODE XREF: time_disp+C↑j
                addo    0x1F, 0xE, g0   # Label from official source
                call    dsp_char_2x3
                subo    8, g9, g9
                call    dsp_char_2x3
                subo    8, g9, g9
                addo    0x1F, 3, g0
                call    dsp_char_2x3
                subo    8, g9, g9
                addo    0x1F, 0xE, g0
                call    dsp_char_2x3
                subo    8, g9, g9
                call    dsp_char_2x3
                subo    8, g9, g9
                addo    0x1F, 8, g0
                call    dsp_char_2x3
                subo    8, g9, g9
                addo    0x1F, 0xE, g0
                call    dsp_char_2x3
                subo    8, g9, g9
                call    dsp_char_2x3
                ret
# End of function time_disp
# =============== S U B R O U T I N E =======================================
disp_dec_r:                             # CODE XREF: draw_round_over+108↑p
                mov     g9, r9          # Label from official source
                mov     g1, r3
                call    make_dec_string_right
                mov     g0, r4
                mov     g2, g0
loc_7BC04:                              # CODE XREF: disp_dec_r+5C↓j
                mov     r9, g9
                ldob    (r4), g4
                addo    1, r4, r4
                cmpobe  0xA, g4, loc_7BC44
                call    dsp_character
                stq     g0, AUDIO_3
                st      g14, 0x50EFE8
                lda     byte_AEBD8, g0
                bal     break_point_display
                ldq     AUDIO_3, g0
                ld      0x50EFE8, g14
loc_7BC44:                              # CODE XREF: disp_dec_r+20↑j
                lda     (r9)[g3*2], r9
                cmpdeco 1, r3, r3
                bl      loc_7BC04
                ret
# End of function disp_dec_r
# =============== S U B R O U T I N E =======================================
disp_dec:                               # CODE XREF: time_disp+3C↑p
                mov     g9, r9          # Label from official source
                mov     g1, r3
                call    make_dec_string_zero_right
                mov     g0, r4
                mov     g2, g0
loc_7BC68:                              # CODE XREF: disp_dec+58↓j
                mov     r9, g9
                ldob    (r4), g4
                addo    1, r4, r4
                call    dsp_character
                stq     g0, AUDIO_3
                st      g14, 0x50EFE8
                lda     byte_AEBE8, g0
                bal     break_point_display
                ldq     AUDIO_3, g0
                ld      0x50EFE8, g14
                lda     (r9)[g3*2], r9
                cmpdeco 1, r3, r3
                bl      loc_7BC68
                ret
# End of function disp_dec
# =============== S U B R O U T I N E =======================================
draw_chaos_emeralds:                    # DATA XREF: ROM:000AEB2C↓o
                call    sub_7E0F4
                ldob    also_sub_mode, r3
                lda     sub_mode32, r4
                cmpo    r3, r4
                be      gp_mes_ex
                lda     sub_mode33, r4
                cmpo    r3, r4
                be      gp_mes_ex
                ldob    gameprogram, r14 # bit 0 clear = Player 1
                cmpo    1, r14
                bl      gp_mes_ex
                ldob    gameprogram, r13 # bit 0 clear = Player 1
                ldob    0x50004E, r14
                cmpobe  r13, r14, render_chaos_emeralds
                b       gp_mes_ex
# ---------------------------------------------------------------------------
render_chaos_emeralds:                  # CODE XREF: draw_chaos_emeralds+4C↑j
                ldob    STAGE_ID, r3
                cmpo    0xA, r3
                ble     gp_mes_ex
                cmpobne 9, r3, mes_wd_eme_nrm
                ldos    CTRL_TIMER, r5
                shlo    8, 1, r7
                mulo    r5, r7, r7
                chkbit  0, r5
                be      render_chaos_emeralds_alt
                lda     0xC0600000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     3784, g0        # Orange chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0xC0200000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     3782, g0        # Purple chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0xBFC00000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     3788, g0        # Yellow chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0xBF000000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     3786, g0        # Violet chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x3F000000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     3780, g0        # Orange chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x3FC00000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     3774, g0        # Violet chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x40200000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     3778, g0        # Green chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x40600000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     3772, g0        # Blue chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                b       gp_mes_ex
# ---------------------------------------------------------------------------
render_chaos_emeralds_alt:              # CODE XREF: draw_chaos_emeralds+7C↑j
                lda     0xC0600000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     4009, g0        # Red chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0xC0200000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     4008, g0        # Purple chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0xBFC00000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     4011, g0        # Yellow chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0xBF000000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     4010, g0        # Violet chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x3F000000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     4007, g0        # Orange chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x3FC00000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     4005, g0        # Purple chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x40200000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     4006, g0        # Green chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x40600000, r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     4003, g0        # Blue chaos emerald
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                b       gp_mes_ex
# ---------------------------------------------------------------------------
mes_wd_eme_nrm:                         # CODE XREF: draw_chaos_emeralds+64↑j
                mov     8, r3           # Label from official source
                mov     0, r4
                ldob    STAGE_ID, r4
                cmpobe  8, r4, loc_7C87C
                subo    r4, r3, r3
loc_7C7D4:                              # CODE XREF: draw_chaos_emeralds+BC4↓j
                ld      emerald_floats[r4*4], r8
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F000000, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     0x8002, g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                addo    1, r4, r4
                cmpdeco 1, r3, r3
                bl      loc_7C7D4
loc_7C87C:                              # CODE XREF: draw_chaos_emeralds+B18↑j
                ldob    STAGE_ID, r3
                mov     0, r4
                ldos    CTRL_TIMER, r5
                shlo    8, 1, r7
                mulo    r5, r7, r7
                chkbit  0, r5
                be      loc_7C960
loc_7C8A0:                              # CODE XREF: draw_chaos_emeralds+CA4↓j
                ld      emerald_floats[r4*4], r8
                ld      emeralds_results_anim[r4*4], r6
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F000000, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     (r6), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                addo    1, r4, r4
                cmpdeco 1, r3, r3
                bl      loc_7C8A0
                b       loc_7CA20
# ---------------------------------------------------------------------------
loc_7C960:                              # CODE XREF: draw_chaos_emeralds+BE8↑j
                mov     8, r4
loc_7C964:                              # CODE XREF: draw_chaos_emeralds+D68↓j
                ld      emerald_floats[r4*4], r8
                ld      emeralds_results_anim[r4*4], r6
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F000000, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     (r6), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                addo    1, r4, r4
                cmpdeco 1, r3, r3
                bl      loc_7C964
loc_7CA20:                              # CODE XREF: draw_chaos_emeralds+CA8↑j
                ldos    CTRL_TIMER, r5
                chkbit  0, r5
                be      loc_7CAF0
                ldob    STAGE_ID, r4
                subo    1, r4, r4
                ld      emerald_floats[r4*4], r8
                ld      emeralds_results_anim[r4*4], r6
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     (r6), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                b       gp_mes_ex
# ---------------------------------------------------------------------------
loc_7CAF0:                              # CODE XREF: draw_chaos_emeralds+D78↑j
                ldob    STAGE_ID, r4
                addo    8, r4, r4
                subo    1, r4, r4
                ld      emerald_floats[r4*4], r8
                ld      emeralds_results_anim[r4*4], r6
                lda     0xC0200000, r9
                lda     0x40A00000, r10
                lda     0x3F4CCCCD, r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     (r6), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                b       gp_mes_ex
# End of function draw_chaos_emeralds
# =============== S U B R O U T I N E =======================================
draw_game_over:                         # DATA XREF: ROM:000AEB30↓o
                lda     0x1000000, g9
                addo    0x1F, 0x1F, g0
                addo    0x1F, 0x11, g1
                call    clr_pattern_s
                lda     0x1000584, g9
                lda     74, g0          # GAME OVER texture
                call    dsp_pattern_new
                mov     0, r15
                stib    r15, draw_vs_routine_flag
                ld      health_bar_flag, r15
                setbit  2, r15, r15
                st      r15, health_bar_flag
                ldob    gameprogram, r14 # bit 0 clear = Player 1
                cmpobge 1, r14, loc_7CC18
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldob    0x3353(r15), r15
                bbs     5, r15, gp_mes_ex
loc_7CC18:                              # CODE XREF: draw_game_over+4C↑j
                lda     0x1004000, g9
                addo    0x1F, 1, g0
                addo    0x1F, 0x11, g1
                lda     loc_8280, g2
                call    fill_pattern_s
                mov     0xF, r15
                stib    r15, draw_vs_routine_flag
                mov     0, r15
                stis    r15, scrB_H_page
                mov     0, r15
                st      r15, 0x54(g13)
                b       gp_mes_ex
# End of function draw_game_over
# =============== S U B R O U T I N E =======================================
sub_7CC58:                              # DATA XREF: ROM:000AEB34↓o
                ld      0x54(g13), r3
                addo    1, r3, r3
                st      r3, 0x54(g13)
                shlo    7, 1, r4
                cmpo    r3, r4
                bg      loc_7CCC8
                ldos    scrB_H_page, r5
                subo    1, r5, r5
                lda     0x1FF, r13
                and     r13, r5, r5
                stos    r5, scrB_H_page
                ldos    0x501422, r4
                ldos    0x501426, r5
                ldos    0x50142A, r6
                subo    1, r4, r4
                subo    1, r5, r5
                subo    1, r6, r6
                stos    r4, 0x501422
                stos    r5, 0x501426
                stos    r6, 0x50142A
loc_7CCC8:                              # CODE XREF: sub_7CC58+14↑j
                b       gp_mes_ex
# End of function sub_7CC58
# =============== S U B R O U T I N E =======================================
# return
MES_TOUR_INT:                           # DATA XREF: ROM:000AEB38↓o
                ret                     # Label from official source
# End of function MES_TOUR_INT
# =============== S U B R O U T I N E =======================================
MES_INTRUDE_DSP:                        # DATA XREF: ROM:000AEB3C↓o
                ldob    0x500430, r14 # Label from official source
                cmpobg  7, r14, loc_7CCE0
                b       loc_7CD08
# ---------------------------------------------------------------------------
loc_7CCE0:                              # CODE XREF: MES_INTRUDE_DSP+8↑j
                lda     0x1000488, g9
                addo    0x1F, 0x19, g0
                mov     3, g1
                call    clr_pattern_s
                lda     0x1000600, g9
                shlo    6, 1, g0
                addo    0x1F, 4, g1
                call    clr_pattern_s
loc_7CD08:                              # CODE XREF: MES_INTRUDE_DSP+C↑j
                ld      frame_counter, r3
                shlo    0x1D, r3, r4
                shro    0x1D, r4, r4
                cmpobne 0, r4, loc_7CD44
                bbs     3, r3, loc_7CD34
                lda     0x1000B94, g9
                mov     26, g0          # CHALLENGER COMES texture
                call    dsp_pattern_new
                b       loc_7CD44
# ---------------------------------------------------------------------------
loc_7CD34:                              # CODE XREF: MES_INTRUDE_DSP+4C↑j
                lda     0x1000B94, g9
                mov     26, g0          # CHALLENGER COMES texture
                call    clr_pattern
loc_7CD44:                              # CODE XREF: MES_INTRUDE_DSP+48↑j
                ret
# End of function MES_INTRUDE_DSP
# =============== S U B R O U T I N E =======================================
MES_CONTINUE_INT:                       # DATA XREF: ROM:000AEB40↓o
                ld      0x0(g13), r15   # Label from official source
                setbit  0x1E, r15, r15
                st      r15, 0x0(g13)
                lda     0x1000000, g9
                addo    0x1F, 0x1F, g0
                addo    0x1F, 0x11, g1
                call    clr_pattern_s
                lda     0x1004000, g9
                lda     333, g0
                call    dsp_pattern_low
                shlo    0xF, 1, r15
                stis    r15, 0x100A000
                shlo    0xE, 1, r15
                stis    r15, 0x100A008
                lda     0x1008000, r14
                mov     0, r15
                shlo    7, 3, r13
loc_7CDA0:                              # CODE XREF: MES_CONTINUE_INT+64↓j
                stis    r15, (r14)
                addo    2, r14, r14
                cmpdeco 1, r13, r13
                bl      loc_7CDA0
                lda     CG_DATA_START, r14
                shlo    7, 5, r15
                shlo    0xA, 3, r13
loc_7CDC0:                              # CODE XREF: MES_CONTINUE_INT+84↓j
                stis    r15, (r14)
                addo    2, r14, r14
                cmpdeco 1, r13, r13
                bl      loc_7CDC0
                lda     166, g0
                call    _Scroll_Initialize
                ldob    stage_num, r3
                and     0xF, r3, r3
                shlo    8, r3, r4
                ldos    stage_bg_color(r4), r3 # Color 0x0031E6
                stos    r3, 0x1800AC0 # 0x09C00F6
                lda     0x1004086, g9
                shlo    4, 0x1F, g0
                call    dsp_pattern_low
                lda     0x1004206, g9
                ld      add_BACKUP_RAM_TO_RAM, r4
                ldob    0x3352(r4), r4  # country_val
                cmpobne 0, r4, loc_7CE2C # if country_val not Japan
                lda     438, g0         # SPECIAL TIPS texture in Japanese
                b       loc_7CE30
# ---------------------------------------------------------------------------
loc_7CE2C:                              # CODE XREF: MES_CONTINUE_INT+D8↑j
                lda     437, g0         # SPECIAL TIPS texture
loc_7CE30:                              # CODE XREF: MES_CONTINUE_INT+E0↑j
                call    dsp_pattern_low
                lda     0x1004500, g9
                lda     439, g0         # Tip text area background
                call    dsp_pattern_low
                lda     0x1004B80, g9
                lda     440, g0         # Left corner stage camera border texture
                call    dsp_pattern_low
                lda     0x10046C6, g9
                lda     441, g0         # Character background spotlight
                call    dsp_pattern_low
                lda     0x1000244, g9
                mov     27, g0          # CONTINUE texture
                call    dsp_pattern_low
                call    conti_mes_select
                call    chg_window_size_init
MES_CONTINUE_DSP:                       # DATA XREF: ROM:000AEB44↓o
                call    chg_window_size # Label from official source
                addo    0x1F, 1, r13
                ld      0x501A4C, r14
                cmpobne r13, r14, skp_waku
                lda     0x1004B80, g9
                lda     440, g0         # Left corner stage camera border texture
                call    dsp_pattern_new
skp_waku:                               # CODE XREF: MES_CONTINUE_INT+144↑j
                lda     0x100045A, g9   # Label from official source
                ldos    CTRL_TIMER, r3
                shro    6, r3, g4
                mov     g4, r5
                cmpobl  9, g4, loc_7CECC
                lda     31, g0          # Continue numbers font
                mov     0, g5
                mov     3, g3
                call    dsp_character
loc_7CECC:                              # CODE XREF: MES_CONTINUE_INT+170↑j
                b       gp_mes_ex
# End of function MES_CONTINUE_INT
# =============== S U B R O U T I N E =======================================
conti_mes_select:                       # CODE XREF: MES_CONTINUE_INT+12C↑p
                lda     0x1004686, g9 # Label from official source
                ldob    STAGE_ID, r3
                call    rand            # Random value stored to g0
                and     7, g0, r5
                cmpobl  3, r3, conti_ms_jyoukyuu
                ld      add_BACKUP_RAM_TO_RAM, r4
                ldob    0x3352(r4), r4  # country_val to r4
                cmpobne 0, r4, conti_ms_syo_ketou # if country_val is not 0 (Japan) branch
                ld      continue_tips_japan[r5*4], g0
                b       conti_ms_exit
# ---------------------------------------------------------------------------
conti_ms_syo_ketou:                     # CODE XREF: conti_mes_select+2C↑j
                ld      continue_tips_eng[r5*4], g0 # Label from official source
                b       conti_ms_exit
# ---------------------------------------------------------------------------
conti_ms_jyoukyuu:                      # CODE XREF: conti_mes_select+18↑j
                ld      fa_rob1, r7     # Label from official source
                ldob    winner, r6
                cmpobe  0, r6, cmj_next_000
                ld      fa_rob0, r7
cmj_next_000:                           # CODE XREF: conti_mes_select+58↑j
                ld      add_BACKUP_RAM_TO_RAM, r4 # Label from official source
                ldob    0x3352(r4), r4  # r4 = BACKUP_RAM_TO_RAM+0x3352
                cmpobne 0, r4, conti_ms_jyo_ketou # branch if country_val not Japan
                chkbit  0, r5
                be      conti_ms_ja_jyo_char
                ld      add_BACKUP_RAM_TO_RAM, r14
                ldob    0x3353(r14), r14 # r14 = BACKUP_RAM_TO_RAM+03353
                bbs     6, r14, conti_ms_ja_not_hyper
                ldob    0x1B0(r7), r8   # r8 = P1_CHAR_VALUE or P2_CHAR_VALUE
                cmpobe  5, r8, bark_ms_japan_000 # Branch if character is Bark
                ld      dword_AECB8[r5*4], g0
                b       conti_ms_exit
# ---------------------------------------------------------------------------
bark_ms_japan_000:                      # CODE XREF: conti_mes_select+98↑j
                ld      dword_AED38[r5*4], g0 # Label from official source
                b       conti_ms_exit
# ---------------------------------------------------------------------------
conti_ms_ja_not_hyper:                  # CODE XREF: conti_mes_select+90↑j
                ldob    0x1B0(r7), r8   # Label from official source
                cmpobe  5, r8, bark_ms_japan_001
                ld      dword_AECD8[r5*4], g0
                b       conti_ms_exit
# ---------------------------------------------------------------------------
bark_ms_japan_001:                      # CODE XREF: conti_mes_select+B8↑j
                ld      dword_AED58[r5*4], g0 # Label from official source
                b       conti_ms_exit
# ---------------------------------------------------------------------------
conti_ms_ja_jyo_char:                   # CODE XREF: conti_mes_select+7C↑j
                ld      fa_rob1, r7     # Label from official source
                ldob    winner, r6
                cmpobe  0, r6, cmjjc_next
                ld      fa_rob0, r7
cmjjc_next:                             # CODE XREF: conti_mes_select+E4↑j
                ld      frame_counter, r5 # Label from official source
                and     1, r5, r5
                ldob    0x1B0(r7), r8
                mulo    8, r8, r8
                ld      dword_AEDB8(r8)[r5*4], g0
                b       conti_ms_exit
# ---------------------------------------------------------------------------
conti_ms_jyo_ketou:                     # CODE XREF: conti_mes_select+74↑j
                chkbit  0, r5           # Label from official source
                be      conti_ms_ke_jyo_char
                ld      add_BACKUP_RAM_TO_RAM, r14
                ldob    0x3353(r14), r14
                bbs     6, r14, conti_ms_ke_not_hyper
                ldob    0x1B0(r7), r8
                cmpobe  5, r8, bark_ms_ketou_000
                ld      dword_AECF8[r5*4], g0
                b       conti_ms_exit
# ---------------------------------------------------------------------------
bark_ms_ketou_000:                      # CODE XREF: conti_mes_select+130↑j
                ld      dword_AED78[r5*4], g0 # Label from official source
                b       conti_ms_exit
# ---------------------------------------------------------------------------
conti_ms_ke_not_hyper:                  # CODE XREF: conti_mes_select+128↑j
                ldob    0x1B0(r7), r8   # Label from official source
                cmpobe  5, r8, bark_ms_ketou_001
                ld      dword_AED18[r5*4], g0
                b       conti_ms_exit
# ---------------------------------------------------------------------------
bark_ms_ketou_001:                      # CODE XREF: conti_mes_select+150↑j
                ld      dword_AED98[r5*4], g0 # Label from official source
                b       conti_ms_exit
# ---------------------------------------------------------------------------
conti_ms_ke_jyo_char:                   # CODE XREF: conti_mes_select+114↑j
                ld      fa_rob1, r7     # Label from official source
                ldob    winner, r6
                cmpobe  0, r6, cmkjc_next
                ld      fa_rob0, r7
cmkjc_next:                             # CODE XREF: conti_mes_select+17C↑j
                ld      frame_counter, r5 # Label from official source
                and     1, r5, r5
                ldob    0x1B0(r7), r8
                mulo    8, r8, r8
                ld      dword_AEE88(r8)[r5*4], g0
conti_ms_exit:                          # CODE XREF: conti_mes_select+38↑j
                call    dsp_pattern_low # Label from official source
                ret
# End of function conti_mes_select
# =============== S U B R O U T I N E =======================================
chg_window_size_init:                   # CODE XREF: MES_CONTINUE_INT+130↑p
                mov     0, r15          # Label from official source
                st      r15, 0x501A4C
                lda     0x1002000, r14
                lda     dword_4004+3, r15
                shlo    0xA, 3, r13
loc_7D09C:                              # CODE XREF: chg_window_size_init+2C↓j
                stis    r15, (r14)
                addo    2, r14, r14
                cmpdeco 1, r13, r13
                bl      loc_7D09C
                lda     0x503024, r14
                mov     0, r15
                addo    0x1F, 1, r13
loc_7D0BC:                              # CODE XREF: chg_window_size_init+4C↓j
                stis    r15, (r14)
                addo    2, r14, r14
                cmpdeco 1, r13, r13
                bl      loc_7D0BC
                ldl     win_down_rom, r4 # Window down
                stl     r4, 0x501A50
                stl     r4, 0x501A58
                stl     r4, 0x501A60
                ret
# End of function chg_window_size_init
# =============== S U B R O U T I N E =======================================
chg_window_size:                        # CODE XREF: MES_CONTINUE_INT:MES_CONTINUE_DSP↑p
                ldl     0x501A58, r4 # Label from official source
                stl     r4, 0x501A60
                ldl     0x501A50, r4
                stl     r4, 0x501A58
                ldl     win_down, r4    # Window down
                stl     r4, 0x501A50
                mov     0, r9
                ld      0x501A4C, g0
                addo    0x1F, 1, r14
                cmpibe  g0, r14, loc_7D214
                addo    0x1F, 1, r14
                cmpibg  g0, r14, loc_7D180
loc_7D13C:                              # CODE XREF: chg_window_size+7C↓j
                ldos    win_down_rom[r9*2], r4 # Window down
                ldos    word_7D3BC[r9*2], r5
                subi    r4, r5, r6
                addo    0x1F, 1, r12
                muli    r6, g0, r13
                divi    r12, r13, r3
                addo    r4, r3, r3
                stos    r3, win_down[r9*2] # Window down
                cmpinco 0xF, r9, r9
                bg      loc_7D13C
                call    sub_7D230
                addo    1, g0, g0
                st      g0, 0x501A4C
loc_7D180:                              # CODE XREF: chg_window_size+48↑j
                ldos    0x501A64, r4
                ldos    0x501A60, r5
                shlo    9, 1, r13
                ld      0x501A62, r14
                addi    r13, r14, r9
                mov     0, r10
                cmpobe  0, r4, loc_7D1C0
                mov     0, r3
                subo    1, r4, r11
loc_7D1B0:                              # CODE XREF: chg_window_size+CC↓j
                stos    r10, 0x1008000[r3*2]
                cmpinco r11, r3, r3
                bg      loc_7D1B0
loc_7D1C0:                              # CODE XREF: chg_window_size+B4↑j
                mov     r4, r3
                subo    1, r5, r11
loc_7D1C8:                              # CODE XREF: chg_window_size+E4↓j
                stos    r9, 0x1008000[r3*2]
                cmpinco r11, r3, r3
                bg      loc_7D1C8
                mov     r5, r3
                lda     0x17F, r11
                cmpibge r3, r11, loc_7D1F4
loc_7D1E4:                              # CODE XREF: chg_window_size+100↓j
                stos    r10, 0x1008000[r3*2]
                cmpinco r11, r3, r3
                bg      loc_7D1E4
loc_7D1F4:                              # CODE XREF: chg_window_size+F0↑j
                lda     0x1002000, g9
                ldos    0x501A62, g0
                ldos    0x501A66, g1
                call    scr_width_window
                ret
# ---------------------------------------------------------------------------
loc_7D214:                              # CODE XREF: chg_window_size+40↑j
                mov     0, r15
                stis    r15, 0x100A000
                mov     0, r15
                stis    r15, 0x100A008
                b       loc_7D13C
# End of function chg_window_size
# =============== S U B R O U T I N E =======================================
sub_7D230:                              # CODE XREF: chg_window_size+80↑p
                ldos    win_up, r4      # Window up
                ldos    win_down, r5    # Window down
                ldos    win_up_rom, r6  # Window up
                ldos    win_down_rom, r7 # Window down
                subo    r4, r5, r5
                cvtir   r5, r5
                subo    r6, r7, r7
                cvtir   r7, r7
                divr    r7, r5, r8
                lda     0x438C0000, r13
                mulr    r13, r8, r8
                ldos    win_left, r4    # Window left
                ldos    win_right, r5   # Window right
                ldos    win_left_rom, r6 # Window left
                ldos    win_right_rom, r7 # Window right
                subo    r4, r5, r5
                cvtir   r5, r5
                subo    r6, r7, r7
                cvtir   r7, r7
                divr    r7, r5, r9
                lda     0x438C0000, r13
                mulr    r13, r9, r9
                stl     r8, focus_dist_x
                ret
# End of function sub_7D230
# =============== S U B R O U T I N E =======================================
scr_width_window:                       # CODE XREF: chg_window_size+11C↑p
                subo    g0, g1, r4      # Label from official source
                shro    3, r4, r5
                lda     dword_4004+3, r10
                mov     0, r8
loc_7D2D0:                              # CODE XREF: scr_width_window+54↓j
                ldob    0x503024(r8), r12
                cmpobe  0, r12, loc_7D304
                addo    0x1F, 0x11, r13
                shlo    7, 1, r14
                mov     g9, r15
loc_7D2E8:                              # CODE XREF: scr_width_window+38↓j
                stos    r10, (r15)
                addo    r15, r14, r15
                cmpdeco 1, r13, r13
                bl      loc_7D2E8
                mov     0, r15
                stib    r15, 0x503024(r8)
loc_7D304:                              # CODE XREF: scr_width_window+1C↑j
                addo    1, r8, r8
                addo    2, g9, g9
                cmpdeco 1, r5, r5
                bl      loc_7D2D0
                and     7, r4, r5
                ldos    word_7D39C[r5*2], r10
                addo    0x1F, 0x11, r13
                shlo    7, 1, r14
                mov     g9, r15
loc_7D32C:                              # CODE XREF: scr_width_window+7C↓j
                stos    r10, (r15)
                addo    r15, r14, r15
                cmpdeco 1, r13, r13
                bl      loc_7D32C
                addo    2, g9, g9
                addo    1, r8, r8
                lda     0x1FF, r14
                subi    r4, r14, r5
                shro    3, r4, r5
                mov     0, r10
loc_7D354:                              # CODE XREF: scr_width_window+D8↓j
                ldob    0x503024(r8), r12
                cmpobe  1, r12, loc_7D388
                addo    0x1F, 0x11, r13
                shlo    7, 1, r14
                mov     g9, r15
loc_7D36C:                              # CODE XREF: scr_width_window+BC↓j
                stos    r10, (r15)
                addo    r15, r14, r15
                cmpdeco 1, r13, r13
                bl      loc_7D36C
                mov     1, r15
                stib    r15, 0x503024(r8)
loc_7D388:                              # CODE XREF: scr_width_window+A0↑j
                addo    2, g9, g9
                addo    1, r8, r8
                cmpdeco 1, r5, r5
                bl      loc_7D354
                ret
# End of function scr_width_window
# ---------------------------------------------------------------------------
word_7D39C:     .short 0x4000           # DATA XREF: scr_width_window+5C↑r
                .short 0x4008
                .short 0x4009
                .short 0x400A
                .short 0x400B
                .short 0x400C
                .short 0x400D
                .short 0x400E
                .short 0x4000
                .short 0x400F
                .short 0x4010
                .short 0x4011
                .short 0x4012
                .short 0x4013
                .short 0x4014
                .short 0x4015
word_7D3BC:     .short 376              # DATA XREF: sub_FFF0↑o
                .short 0
                .short 184
                .short 256
                .short 280
                .short 128
                .short 280
                .short 128
                .short 280
                .short 128
                .short 280
                .short 128
# ---------------------------------------------------------------------------
loc_7D3D4:                              # DATA XREF: ROM:000AEB70↓o
                lda     0x1001100, g9
                addo    0x1F, 0x1D, g0
                mov     8, g1
                call    clr_pattern_s
                b       gp_mes_ex
# ---------------------------------------------------------------------------
draw_PERFECT:                           # DATA XREF: ROM:000AEB48↓o
                lda     0x1000FAA, g9
                mov     28, g0          # PERFECT texture
                call    clr_pattern
                lda     0x1000700, g9
                addo    0x1F, 0x1F, g0
                mov     0x18, g1
                call    clr_pattern_s
                mov     0x15, r15
                stib    r15, draw_vs_routine_flag
draw_REPLAY:                            # DATA XREF: ROM:000AEB4C↓o
                ld      frame_counter, r3
                shlo    0x1D, r3, r4
                shro    0x1D, r4, r4
                cmpobne 0, r4, loc_7D44C
                lda     0x1000BB0, g9
                mov     29, g0          # REPLAY texture
                bbs     3, r3, loc_7D448
                call    dsp_pattern_new
                b       loc_7D44C
# ---------------------------------------------------------------------------
loc_7D448:                              # CODE XREF: ROM:0007D43C↑j
                call    clr_pattern
loc_7D44C:                              # CODE XREF: ROM:0007D42C↑j
                b       gp_mes_ex
# ---------------------------------------------------------------------------
loc_7D450:                              # DATA XREF: ROM:000AEB50↓o
                call    sub_7D230
                mov     0, r15
                stis    r15, 0x5003A4
                mov     0x17, r15
                stib    r15, draw_vs_routine_flag
loc_7D46C:                              # DATA XREF: ROM:000AEB54↓o
                ldos    0x5003A4, r3
                addo    1, r3, r4
                stos    r4, 0x5003A4
                ldos    word_7D60A, r10
                shlo    3, r10, r10
                cmpobe  r4, r10, loc_7D52C
                mov     0, r15
                stis    r15, 0x100A000
                lda     0x3FF, r13
                and     r13, r4, r12
                setbit  0xD, r12, r12
                stos    r12, 0x100A008
                shro    3, r4, r12
                subo    1, r12, r12
                lda     0x7F, r13
                and     r13, r12, r12
                lda     0x1000000, g9
                shlo    7, r12, r15
                addo    r15, g9, g9
                call    erase_oneline
                lda     staff_credit_textures, r11
                ldos    word_7D608, r10 # Num of credits graphics to show
display_staff_credit_tex:               # CODE XREF: ROM:0007D524↓j
                ldos    2(r11), r6
                shlo    3, r6, r7
                cmpo    r4, r7
                bne     loc_7D51C
                ldos    (r11), g0
                lda     0x7F, r13
                and     r13, r6, r6
                shlo    6, 1, r13
                addi    r13, r6, r6
                lda     0x1000040, g9
                shlo    7, r6, r15
                addo    r15, g9, g9
                call    dsp_pattern_ending
loc_7D51C:                              # CODE XREF: ROM:0007D4F0↑j
                addo    4, r11, r11
                cmpdeco 1, r10, r10
                bl      display_staff_credit_tex
                b       gp_mes_ex
# ---------------------------------------------------------------------------
loc_7D52C:                              # CODE XREF: ROM:0007D48C↑j
                mov     0, r15
                stib    r15, draw_vs_routine_flag
                b       gp_mes_ex
# =============== S U B R O U T I N E =======================================
gp_mes_ex:                              # CODE XREF: MES_NULL↑j
                ldis    ingame_countdown_FFFF, r15 # Label from Fighting Vipers source
                lda     -1(r15), r15
                stis    r15, ingame_countdown_FFFF # Rename this, it's not always FFFF
                ret
# End of function gp_mes_ex
# =============== S U B R O U T I N E =======================================
dsp_pattern_ending:                     # CODE XREF: ROM:0007D518↑p
                ld      texture_palette_offsets[g0*4], r10 # Label from official source
                ldos    (r10), r4
                ldl     4(r10), r6
                addo    0xC, r10, r8
                lda     0x1003FFF, r11
                shlo    7, 1, r5
                mov     g9, r9
loc_7D57C:                              # CODE XREF: dsp_pattern_ending+54↓j
                mov     r9, r13
                mov     r7, r14
loc_7D584:                              # CODE XREF: dsp_pattern_ending+48↓j
                ldis    (r8), r15
                addo    2, r8, r8
                addo    r4, r15, r15
                and     r11, r13, r13
                stos    r15, (r13)
                addo    2, r13, r13
                cmpdeco 1, r14, r14
                bl      loc_7D584
                addo    r5, r9, r9
                cmpdeco 1, r6, r6
                bl      loc_7D57C
                ret
# End of function dsp_pattern_ending
# =============== S U B R O U T I N E =======================================
erase_oneline:                          # CODE XREF: ROM:0007D4D0↑p
                mov     0, r3           # Label from official source
                mov     g9, r9
                shlo    6, 1, r11
loc_7D5C0:                              # CODE XREF: erase_oneline+18↓j
                stos    r3, (r9)
                addo    2, r9, r9
                cmpdeco 1, r11, r11
                bl      loc_7D5C0
                ret
# End of function erase_oneline
# ---------------------------------------------------------------------------
staff_credit_textures:.short 391        # DATA XREF: ROM:0007D4D4↑o
                .short 1
                .short 392              # Director
                .short 21
                .short 397              # Game Coordinator
                .short 46
                .short 398              # Programmers
                .short 71
                .short 400              # Character Designer
                .short 106
                .short 401              # Stage Designers
                .short 126
                .short 402              # 2D Graphic & Model Design
                .short 151
                .short 403              # Graphic & Model Design
                .short 171
                .short 404              # Motion Designers
                .short 191
                .short 526              # Sound Designer
                .short 216
                .short 527              # Special Thanks
                .short 236
                .short 395              # Producer
                .short 276
                .short 396              # PRESENTED by
                .short 316
word_7D608:     .short 13               # DATA XREF: ROM:0007D4DC↑r
word_7D60A:     .short 364              # DATA XREF: ROM:0007D480↑r
                .long 0
                .long 0
                .long 0
# ---------------------------------------------------------------------------
MES_ROUND_MASK_INT:                     # DATA XREF: ROM:000AEB58↓o
                mov     0, r15          # Label from official source
                stis    r15, 0x500468
                mov     0, r15
                stis    r15, 0x50046C
                lda     0x1005400, g9
                lda     106, g0         # Big black and white background for VS screen
                call    dsp_pattern_new
                mov     0, r15
                stis    r15, scrB_H_page
                lda     loc_2140, r15
                stis    r15, scrB_V_page
                mov     0x19, r15
                stib    r15, draw_vs_routine_flag
                b       gp_mes_ex
# ---------------------------------------------------------------------------
MES_ROUND_MASK_DSP:                     # DATA XREF: ROM:000AEB5C↓o
                ldos    0x500468, r3 # Label from official source
                and     7, r3, r3       # r3=1
                ld      vs_screen_routines[r3*4], r4
                callx   (r4)            # r4=7D718
                ret
# ---------------------------------------------------------------------------
vs_screen_routines:.long rm_wipe_in     # DATA XREF: ROM:0007D678↑r
                .long rm_char_move
                .long rm_char_disp_int
                .long rm_char_disp
                .long rm_char_move2
                .long rm_wipe_out
# ---------------------------------------------------------------------------
rm_wipe_in:                             # DATA XREF: ROM:vs_screen_routines↑o
                lda     0x1000000, g9   # Label from official source
                addo    0x1F, 0x1F, g0
                addo    0x1F, 0x11, g1
                call    clr_pattern_s
                lda     0x1000090, g9
                lda     107, g0         # NEXT MATCH texture
                call    dsp_pattern_new
                ldos    0x500468, r14
                addi    1, r14, r15
                stos    r15, 0x500468
                ld      fa_rob0, r3
                ldob    0x1B1(r3), r3
                ldos    CG_PLAYER_CARDS[r3*2], g0
                call    _Scroll_Initialize
                ld      fa_rob1, r3
                ldob    0x1B1(r3), r3
                ldos    CG_PLAYER2_CARDS[r3*2], g0
                call    _Scroll_Initialize
                mov     0xF, r15
                stis    r15, 0x50046A
                b       gp_mes_ex
# ---------------------------------------------------------------------------
rm_char_move:                           # DATA XREF: ROM:0007D68C↑o
                ldos    0x50046A, r9 # Label from official source
                mulo    3, r9, r11      # r11 = 2D
                ld      fa_rob0, r10
                addo    0x1F, 0xC, r8   # r8=2B
                subo    r11, r8, r3     # r3=FFFFFFFE
                lda     0x1000002, g9
                shlo    7, r3, r15      # r15=FFFFFF00
                addo    r15, g9, g9     # g9=FFFFFF02
                shlo    0xE, 1, r13     # r13=4000
                addi    r13, g9, g9     # g9=1003F02
                ldob    0x1B1(r10), r3  # r10= 510D00 (P1_PARTS_ADD), R3 will = 0 for Sonic
                ldos    P1_CHAR_CARDS[r3*2], g0 # g0= 0x82
                call    dsp_pattern_new
                ld      fa_rob1, r10
                addo    r11, r8, r3
                lda     0x1000042, g9
                shlo    7, r3, r15
                addo    r15, g9, g9
                shlo    0xE, 1, r13
                addi    r13, g9, g9
                ldob    0x1B1(r10), r3
                ldos    P2_CHAR_CARDS[r3*2], g0
                call    dsp_pattern_new
                subi    1, r9, r9
                cmpible 0, r9, loc_7D7B0
                ldos    0x500468, r14
                addi    1, r14, r15
                stos    r15, 0x500468
                shlo    7, 1, r9
loc_7D7B0:                              # CODE XREF: ROM:0007D794↑j
                stos    r9, 0x50046A
                b       gp_mes_ex
# ---------------------------------------------------------------------------
rm_char_disp_int:                       # DATA XREF: ROM:0007D690↑o
                lda     NAME_CELL_AND_CG_JPN, r11 # Label from official source
                ld      add_BACKUP_RAM_TO_RAM, r3
                ldob    0x3352(r3), r3  # r3 = country_val
                cmpobe  0, r3, loc_7D7E0
                lda     NAME_CELL_AND_CG_USA, r11
loc_7D7E0:                              # CODE XREF: ROM:0007D7D4↑j
                ld      fa_rob0, r10
                ldob    0x1B1(r10), r3
                shlo    2, 0x15, g1
                ldos    (r11)[r3*8], g0
                call    _Scroll_Initialize2
                ldos    2(r11)[r3*8], g0
                ldos    4(r11)[r3*8], r6
                lda     0x1001408, g9
                addo    r6, g9, g9
                call    draw_name_texures
                lda     0x1005582, g9
                ldob    0x1B1(r10), r3
                ldos    P1_CHAR_CARDS[r3*2], g0
                call    dsp_pattern_new
                ld      fa_rob1, r10
                ldob    0x1B1(r10), r3
                lda     0x56, g1
                ldos    (r11)[r3*8], g0
                call    _Scroll_Initialize2
                ldos    2(r11)[r3*8], g0
                ldos    4(r11)[r3*8], r6
                lda     0x1001444, g9
                addo    r6, g9, g9
                call    draw_name_texures
                lda     0x10055C2, g9
                ldob    0x1B1(r10), r3
                ldos    P2_CHAR_CARDS[r3*2], g0
                call    dsp_pattern_new
                lda     0x1006232, g9
                lda     109, g0         # V.S. texture
                call    dsp_pattern_new
                ldos    0x500468, r14
                addi    1, r14, r15
                stos    r15, 0x500468
                b       gp_mes_ex
# ---------------------------------------------------------------------------
rm_char_disp:                           # DATA XREF: ROM:0007D694↑o
                ld      CTRL_TIMER, r14 # Label from official source
                cmpible 0x14, r14, loc_7D8F4
                lda     0x10061B2, g9
                lda     110, g0         # Black and white zig zag (middle of vs match) texture
                call    dsp_pattern_new
                lda     0x10063B2, g9
                lda     110, g0         # Black and white zig zag (middle of vs match) texture
                call    dsp_pattern_new
                ldos    0x500468, r14
                addi    1, r14, r15
                stos    r15, 0x500468
                mov     0xF, r15
                stis    r15, 0x50046A
loc_7D8F4:                              # CODE XREF: ROM:0007D8B0↑j
                b       gp_mes_ex
# ---------------------------------------------------------------------------
rm_char_move2:                          # DATA XREF: ROM:0007D698↑o
                lda     0x1005400, g9   # Label from official source
                lda     0x6A, g0
                ldos    0x50046A, r9
                mulo    3, r9, r11
                addo    0x1F, 0xF, r14
                subi    r11, r14, r11
                ld      fa_rob0, r10
                addo    0x1F, 0xC, r8
                addo    r11, r8, r3
                lda     0x1000002, g9
                shlo    7, r3, r15
                addo    r15, g9, g9
                shlo    0xE, 1, r13
                addi    r13, g9, g9
                ldob    0x1B1(r10), r3
                ldos    P1_CHAR_CARDS[r3*2], g0
                call    dsp_pattern_new
                ld      fa_rob1, r10
                subo    r11, r8, r3
                lda     0x1000042, g9
                shlo    7, r3, r15
                addo    r15, g9, g9
                shlo    0xE, 1, r13
                addi    r13, g9, g9
                ldob    0x1B1(r10), r3
                ldos    P2_CHAR_CARDS[r3*2], g0
                call    dsp_pattern_new
                subi    1, r9, r9
                cmpible 0, r9, loc_7D9A0
                ldos    0x500468, r14
                addi    1, r14, r15
                stos    r15, 0x500468
loc_7D9A0:                              # CODE XREF: ROM:0007D988↑j
                stos    r9, 0x50046A
                b       gp_mes_ex
# ---------------------------------------------------------------------------
rm_wipe_out:                            # DATA XREF: ROM:0007D69C↑o
                b       gp_mes_ex       # Label from official source
# ---------------------------------------------------------------------------
                b       gp_mes_ex
# ---------------------------------------------------------------------------
P1_CHAR_CARDS:  .short 130              # DATA XREF: ROM:0007D750↑r
                .short 134              # TAILS title card
                .short 146              # AMY title card
                .short 197              # METAL SONIC title card
                .short 138              # FANG title card
                .short 215              # BARK title card
                .short 142              # KNUCKLES title card
ESPIO_TITLE_CARD:.short 150
EGGMAN_CARD:    .short 207
EGGMANB_CARD:   .short 207
BEAN_CARD:      .short 211
EGGMAN_BOSS_CARD:.short 207
EGG_UFO_CARD:   .short 207
EGG_MINION_CARD:.short 207
ROCKET_METAL_CARD:.short 207
HONEY_CARD:     .short 207              # HONEY title card (Should be 410)
SUPER_SONIC_CARD:.short 130
                .short 207
                .short 207
                .short 207
                .short 207
                .short 207
                .short 207
                .short 207
                .short 207
                .short 207
                .short 246
                .short 250
                .short 230
                .short 197
                .short 238
                .short 215
KNUKCLES_CARD_2:.short 242
                .short 234
                .short 207
                .short 207
                .short 304
                .short 207
                .short 207
                .short 207
                .short 207
                .short 207
                .short 130
                .short 207
                .short 207
                .short 207
                .short 207
                .short 207
                .short 207
                .short 207
                .short 207
                .short 207
P2_CHAR_CARDS:  .short 132              # DATA XREF: ROM:0007D784↑r
                .short 136
                .short 148
                .short 199
                .short 140
                .short 217
                .short 144
                .short 152
                .short 209
                .short 209
                .short 213
                .short 209
                .short 209
                .short 209
                .short 209
                .short 209              # HONEY title card (Should be 412)
                .short 132
                .short 209
                .short 209
                .short 209
                .short 209
                .short 209
                .short 209
                .short 209
                .short 209
                .short 209
                .short 248
                .short 252
                .short 232
                .short 199
                .short 240
                .short 217
                .short 244
                .short 236
                .short 209
                .short 209
                .short 306
                .short 209
                .short 209
                .short 209
                .short 209
                .short 209
                .short 248
                .short 209
                .short 209
                .short 209
                .short 209
                .short 209
                .short 209
                .short 209
                .short 209
                .short 209
CG_PLAYER_CARDS:.short 20               # DATA XREF: ROM:0007D6E4↑r
                .short 24
                .short 36
                .short 54
                .short 28
                .short 66
                .short 32
                .short 40
                .short 60
                .short 60
                .short 12
                .short 60
                .short 60
                .short 60
                .short 60
                .short 60               # HONEY title CG (Should be 150)
                .short 20
                .short 60
                .short 60
                .short 60
                .short 60
                .short 60
                .short 60
                .short 60
                .short 60
                .short 60
SONIC_I_CG:     .short 88
                .short 92
                .short 72
                .short 54
                .short 80
                .short 66
                .short 84
                .short 76
                .short 60
                .short 60
                .short 96
                .short 60
                .short 60
                .short 60
                .short 60
                .short 60
                .short 88
                .short 60
                .short 60
                .short 60
                .short 60
                .short 60
                .short 60
                .short 60
                .short 60
                .short 60
CG_PLAYER2_CARDS:.short 22              # DATA XREF: ROM:0007D6FC↑r
                .short 26
                .short 38
                .short 56
                .short 30
                .short 68
                .short 34
                .short 42
                .short 62
                .short 62
                .short 64
                .short 62
                .short 62
                .short 62
                .short 62
                .short 62               # HONEY title CG (Should be 152)
                .short 22
                .short 62
                .short 62
                .short 62
                .short 62
                .short 62
                .short 62
                .short 62
                .short 62
                .short 62
                .short 90
                .short 94
                .short 74
                .short 56
                .short 82
                .short 68
                .short 86
                .short 78
                .short 62
                .short 62
                .short 98
                .short 62
                .short 62
                .short 62
                .short 62
                .short 62
                .short 90
                .short 62
                .short 62
                .short 62
                .short 62
                .short 62
                .short 62
                .short 62
                .short 62
                .short 62
# ---------------------------------------------------------------------------
MES_WIN_CLOSE_INT:                      # DATA XREF: ROM:000AEB74↓o
                ld      mod_fa_game_disp, r3 # Label from official source
                ld      0x0(r3), r15
                setbit  0x1E, r15, r15
                st      r15, 0x0(r3)
                mov     0, r15
                stis    r15, scrB_H_page
                mov     0, r15
                stis    r15, scrB_V_page
                lda     0x1008000, r14
                mov     0, r15
                shlo    7, 3, r13
loc_7DB90:                              # CODE XREF: ROM:0007DB9C↓j
                stis    r15, (r14)
                addo    2, r14, r14
                cmpdeco 1, r13, r13
                bl      loc_7DB90
                mov     0, r15
                stis    r15, 0x500468
                mov     0x1E, r15
                stis    r15, 0x50046A
                mov     0, r15
                stis    r15, 0x50046C
                addo    0x1F, 1, r15
                stib    r15, draw_vs_routine_flag
                b       gp_mes_ex
# ---------------------------------------------------------------------------
MES_WIN_CLOSE_DSP:                      # DATA XREF: ROM:000AEB78↓o
                ldos    0x500468, r14 # Label from official source
                cmpibne 0, r14, loc_7DCB4
                ldis    0x50046A, r7
                subi    2, r7, r3
                stis    r3, 0x50046A
                mov     0x1E, r6
                subi    r7, r6, r6
                lda     0x1000000, g9
                shlo    1, r6, r15
                addo    r15, g9, g9
                mov     g9, r3
                lda     105, g0         # Draw black bar (vs screen)
                call    dsp_pattern_new
                shlo    0xE, 1, r13
                addi    r13, r3, g9
                lda     105, g0         # Draw black bar (vs screen)
                call    dsp_pattern_new
                mov     0x1E, r6
                addo    r7, r6, r6
                lda     0x1000000, g9
                shlo    1, r6, r15
                addo    r15, g9, g9
                mov     g9, r3
                shlo    2, 0x1B, g0     # 108 - Just white zig zags (vs screen)
                call    dsp_pattern_new
                shlo    0xE, 1, r13
                addi    r13, r3, g9
                shlo    2, 0x1B, g0     # 108 - Just white zig zags (vs screen)
                call    dsp_pattern_new
                ldos    0x50046A, r14
                cmpibl  0, r14, loc_7DCB4
                ldos    0x500468, r14
                addi    1, r14, r15
                stos    r15, 0x500468
                mov     0, r15
                stis    r15, 0x50046A
                lda     0x1000000, g9
                lda     106, g0         # Full black and white vs screen background texture
                call    dsp_pattern_new
                lda     0x1004000, g9
                lda     106, g0         # Full black and white vs screen background texture
                call    dsp_pattern_new
                subo    1, 0, r15
                stis    r15, 0x500468
loc_7DCB4:                              # CODE XREF: ROM:0007DBDC↑j
                b       gp_mes_ex
# ---------------------------------------------------------------------------
MES_NAME_INT:                           # DATA XREF: ROM:000AEB60↓o
                b       gp_mes_ex       # Label from official source
# ---------------------------------------------------------------------------
MES_RANK_INT:                           # DATA XREF: ROM:000AEB68↓o
                addo    0x1F, 0x11, g0  # Label from official source
                call    _Scroll_Initialize
                lda     0x1000000, g9
                addo    0x1F, 0x1F, g0
                addo    0x1F, 0x11, g1
                call    clr_pattern_s
                mov     0, r15
                stis    r15, scrB_H_page
                mov     0, r15
                stis    r15, scrB_V_page
                ld      0x6480304, r3
                ldos    0xE(r3), r4
                lda     CG_DATA_START, r8
                shlo    0xA, 3, r10
loc_7DD08:                              # CODE XREF: ROM:0007DD14↓j
                stis    r4, (r8)
                addo    2, r8, r8
                cmpdeco 1, r10, r10
                bl      loc_7DD08
                ldob    gameprogram, r3 # bit 0 clear = Player 1
                ld      fa_rob0, r7
                shlo    0xA, 0xD, r15
                mulo    r3, r15, r15
                addo    r15, r7, r7
                ldob    0x1B0(r7), r6
                ldos    player_names_jpn[r6*2], g0
                ld      add_BACKUP_RAM_TO_RAM, r3
                ldob    0x3352(r3), r3  # r3 = BACKUP_RAM_TO_RAM+03352
                cmpobe  0, r3, mes_rank_not_usa
                ldos    player_names_usa[r6*2], g0
mes_rank_not_usa:                       # CODE XREF: ROM:0007DD50↑j
                call    dsp_pattern_low # Label from Fighting Vipers source
                lda     173, g0         # JP WIN, TIME, SKILL texture
                ld      add_BACKUP_RAM_TO_RAM, r3
                ldob    0x3352(r3), r3
                cmpobe  0, r3, rank_japan
                lda     174, g0         # EN WIN, TIME, SKILL texture
rank_japan:                             # CODE XREF: ROM:0007DD74↑j
                lda     0x10006BC, g9 # Label from Fighting Vipers source
                call    dsp_pattern_new
                lda     0x1000C40, g9
                lda     169, g0         # YOUR POINTS texture
                call    dsp_pattern_new
                lda     0x1000F6E, g9
                lda     171, g0         # pts. texture
                call    dsp_pattern_new
                lda     0x1000E6E, g9
                ld      total_points, g0
                call    point_dec_print
                lda     0x10011D0, g9
                shlo    3, 21, g0
                call    dsp_pattern_new
                lda     0x10013C4, g9
                lda     154, g0
                call    dsp_pattern_new
                lda     0x10014C4, g9
                lda     155, g0
                call    dsp_pattern_new
                lda     0x10015C4, g9
                lda     156, g0
                call    dsp_pattern_new
                lda     0x10013EA, g9
                lda     0xAC, g0
                call    dsp_pattern_new
                lda     0x10014EA, g9
                lda     172, g0
                call    dsp_pattern_new
                lda     0x10015EA, g9
                lda     172, g0
                call    dsp_pattern_new
                ld      add_BACKUP_RAM_TO_RAM, g0
                ld      0x3A6C(g0), g0  # g0 = BACKUP_RAM_TO_RAM+0x3A6C
                lda     0x10013E4, g9
                call    top3_dec_print
                ld      add_BACKUP_RAM_TO_RAM, g0
                ld      0x3A70(g0), g0  # g0 = BACKUP_RAM_TO_RAM+0x3A70
                lda     0x10014E4, g9
                call    top3_dec_print
                ld      add_BACKUP_RAM_TO_RAM, g0
                ld      0x3A74(g0), g0  # g0 = BACKUP_RAM_TO_RAM+0x3A74
                lda     0x10015E4, g9
                call    top3_dec_print
                b       gp_mes_ex
# =============== S U B R O U T I N E =======================================
point_dec_print:                        # CODE XREF: ROM:0007DDB8↑p
                mov     g0, r11         # Label from Fighting Vipers source
                lda     0x50E000, r10
                mov     0, r3
loc_7DE94:                              # CODE XREF: point_dec_print+24↓j
                remo    0xA, r11, g0
                divo    0xA, r11, r11
                stob    g0, (r10)
                addo    1, r10, r10
                addo    1, r3, r3
                cmpobne 0, r11, loc_7DE94
                mov     r3, r8
                mov     0, r4
loc_7DEB4:                              # CODE XREF: point_dec_print+48↓j
                ldob    0x50DFFF(r3), g0
                ldos    large_numbers_4[g0*4], r12
                addo    r12, r4, r4
                cmpdeco 1, r3, r3
                bl      loc_7DEB4
                addo    r4, r4, r4
                subo    r4, g9, g9
                mov     r8, r3
loc_7DEDC:                              # CODE XREF: point_dec_print+70↓j
                ldob    0x50DFFF(r3), g0
                ldos    large_numbers_as_models[g0*4], g0
                call    dsp_pattern_new
                cmpdeco 1, r3, r3
                bl      loc_7DEDC
                ret
# End of function point_dec_print
# =============== S U B R O U T I N E =======================================
top3_dec_print:                         # CODE XREF: ROM:0007DE44↑p
                mov     g0, r11         # Label from Fighitng Vipers source
                mov     g3, r10
                mov     g4, r9
loc_7DF08:                              # CODE XREF: top3_dec_print+30↓j
                remo    0xA, r11, g4
                divo    0xA, r11, r11
                lda     0xA7, g0
                mov     2, g3
                mov     g9, r3
                call    dsp_character
                mov     r3, g9
                subo    g3, g9, g9
                subo    g3, g9, g9
                cmpobne 0, r11, loc_7DF08
                mov     r9, g4
                mov     r10, g3
                mov     r11, g0
                ret
# End of function top3_dec_print
# ---------------------------------------------------------------------------
large_numbers_as_models:.short 157      # DATA XREF: point_dec_print+60↑r
large_numbers_4:.short 4                # DATA XREF: point_dec_print+38↑r
                .short 158              # 1
                .short 3
                .short 159              # 2
                .short 4
                .short 160              # 3
                .short 4
                .short 161              # 4
                .short 4
                .short 162              # 5
                .short 4
                .short 163              # 6
                .short 4
                .short 164              # 7
                .short 4
                .short 165              # 8
                .short 4
                .short 166              # 9
                .short 4
player_names_jpn:.short 8               # DATA XREF: char_nameplate_dsp+78↑o
                .short 9                # TAILS
                .short 4                # AMY
                .short 7                # METAL SONIC
                .short 5                # FANG
                .short 188              # BARK
                .short 6                # KNUCKLES
                .short 181              # ESPIO
                .short 180              # DR. EGGMAN
                .short 180              # DR. EGGMAN
                .short 190
                .short 180
                .short 180
                .short 180
                .short 375
                .short 204
                .short 8
                .short 8
                .short 8
                .short 8
                .short 8
                .short 8
                .short 8
                .short 8
                .short 8
                .short 8
                .short 185
                .short 186
                .short 179
                .short 7
                .short 183
                .short 189
                .short 184
                .short 182
                .short 180
                .short 180
                .short 191
                .short 180
                .short 180
                .short 180
                .short 375
                .short 204
                .short 8
                .short 8
                .short 8
                .short 8
                .short 8
                .short 8
                .short 8
                .short 8
                .short 8
                .short 8
player_names_usa:.short 8               # DATA XREF: char_nameplate_dsp+9C↑o
                .short 9                # TAILS
                .short 4                # AMY
                .short 7                # METAL SONIC
                .short 5                # FANG
                .short 188              # BARK
                .short 6                # KNUCKLES
                .short 181              # ESPIO
                .short 180              # DR. EGGMAN
                .short 180              # DR. EGGMAN
                .short 190              # BARK
                .short 180              # DR. EGGMAN
                .short 180              # DR. EGGMAN
                .short 180              # DR. EGGMAN
                .short 375              # ROBO EGG
                .short 204              # HONEY
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 185              # SONIC_I
                .short 186              # TAILS_I
                .short 179              # AMY_I
                .short 7                # METAL SONIC
                .short 183              # FANG_I
                .short 189              # BARK_I
                .short 184              # KNUCKLES_I
                .short 182              # ESPIO_I
                .short 180              # DR. EGGMAN
                .short 180              # DR. EGGMAN
                .short 191              # BEAN_I
                .short 180              # DR. EGGMAN
                .short 180              # DR. EGGMAN
                .short 180              # DR. EGGMAN
                .short 375              # ROBO EGG
                .short 204              # HONEY
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
                .short 8                # SONIC
# ---------------------------------------------------------------------------
                ret
# ---------------------------------------------------------------------------
                ret
# ---------------------------------------------------------------------------
MES_RANK_DSP:                           # DATA XREF: ROM:000AEB6C↓o
                ldob    0x500431, r3 # Label from Fighting Vipers source
                cmpobe  0, r3, loc_7E09C
                lda     0x25[r3*2], r3
                ld      CTRL_TIMER, r15
                bbs     4, r15, print_rank
                lda     0x100004E, g9
                shlo    7, r3, r15
                addo    r15, g9, g9
                mov     0xE, g0
                mov     2, g1
                call    clr_pattern_s
                b       loc_7E09C
# ---------------------------------------------------------------------------
print_rank:                             # CODE XREF: ROM:0007E05C↑j
                ld      total_points, g0 # Label from Fighting Vipers source
                lda     0x1000064, g9
                shlo    7, r3, r15
                addo    r15, g9, g9
                call    top3_dec_print
loc_7E09C:                              # CODE XREF: ROM:0007E048↑j
                b       gp_mes_ex
# =============== S U B R O U T I N E =======================================
# return
sub_7E0A0:                              # CODE XREF: ROM:0000B620↑p
                ret
# End of function sub_7E0A0
# =============== S U B R O U T I N E =======================================
sub_7E0A4:                              # CODE XREF: sub_7B380:loc_7B518↑p
                mov     0, r15
                st      r15, 0x50301C
                st      g1, 0x503020
                shlo    0xF, 1, r15
                stis    r15, 0x100A000
                shlo    0xE, 1, r15
                stis    r15, 0x100A008
                lda     0x1008000, r14
                mov     0, r15
                shlo    7, 3, r13
loc_7E0E0:                              # CODE XREF: sub_7E0A4+48↓j
                stis    r15, (r14)
                addo    2, r14, r14
                cmpdeco 1, r13, r13
                bl      loc_7E0E0
                ret
# End of function sub_7E0A4
# =============== S U B R O U T I N E =======================================
sub_7E0F4:                              # CODE XREF: sub_7B594↑p
                ld      0x50301C, r8
                ld      0x503020, r11
                cmpobe  0, r11, loc_7E180
loc_7E108:                              # CODE XREF: sub_7E0F4+88↓j
                ldis    (r11), r9
                ldis    2(r11), r10
                ldis    4(r11), r4
                ldis    6(r11), r5
                addo    8, r11, r11
                subo    1, 0, r3
loc_7E120:                              # CODE XREF: sub_7E0F4+40↓j
                movl    r4, r6
                ldis    (r11), r4
                cmpobe  r3, r4, loc_7E174
                ldis    2(r11), r5
                addo    4, r11, r11
                cmpobge r8, r4, loc_7E120
loc_7E138:                              # CODE XREF: sub_7E0F4+4C↓j
                ldis    (r11), r12
                addo    4, r11, r11
                cmpobne r3, r12, loc_7E138
                subo    4, r11, r11
                subi    r6, r4, r4
                subi    r6, r8, r12
                addi    1, r12, r12
                subi    r7, r5, r5
                muli    r5, r12, r5
                divi    r4, r5, r12
                addi    r12, r7, r5
loc_7E164:                              # CODE XREF: sub_7E0F4+7C↓j
                stos    r5, 0x1008000[r9*2]
                cmpinco r10, r9, r9
                bg      loc_7E164
loc_7E174:                              # CODE XREF: sub_7E0F4+34↑j
                addo    2, r11, r11
                ldis    (r11), r12
                cmpobne r3, r12, loc_7E108
loc_7E180:                              # CODE XREF: sub_7E0F4+10↑j
                addo    1, r8, r8
                st      r8, 0x50301C
                ret
# End of function sub_7E0F4
# ---------------------------------------------------------------------------
dword_7E190:    .long 0x970078          # DATA XREF: draw_round_over:loc_7B970↑o
                .long 0xFE000000
                .long 0xFE000005
                .long 0x14
                .long 0xB0FFFF
                .long 0xC7
                .long 0xFFE00
                .long 0x1EFE00
                .long 0xFFFF0000
                .long 0xE700C8
                .long 0xFE000000
                .long 0xFE000019
                .long 0x28
                .long 0xF8FFFF
                .long 0x10F
                .long 0x23FE00
                .long 0x32FE00
                .long 0xFFFF0000
                .long 0x12F0110
                .long 0xFE000000
                .long 0xFE00002D
                .long 0x3C
                .long 0xFFFFFFFF
dword_7E1EC:    .long 0xD70078          # DATA XREF: sub_7B380+17C↑o
                .long 0
dword_7E1F4:    .long 0x200000F
                .long 0x2000055
                .long 0x4000064
                .long 0xFFFFFFFF
dword_7E204:    .long 0x11F0070         # DATA XREF: sub_7B380+190↑o
                .long 0
                .long 0x8C
                .long 0x200009B
                .long 0x20000E1
                .long 0x40000F0
                .long 0xFFFFFFFF
# =============== S U B R O U T I N E =======================================
sub_7E220:                              # CODE XREF: game_display_cont+38↑p
                lda     0x1000082, r6
                lda     0x10000D0, r7
                mov     0, r4
                mov     1, r5
                ldob    gameprogram, r10 # bit 0 clear = Player 1
                cmpobe  2, r10, loc_7E2EC
                ld      0x0(g13), r15
                bbc     0x1B, r15, loc_7E37C
                cmpobe  0, r10, loc_7E268
                mov     r7, r15
                mov     r6, r7
                mov     r15, r6
                mov     r5, r15
                mov     r4, r5
                mov     r15, r4
loc_7E268:                              # CODE XREF: sub_7E220+2C↑j
                mov     r7, g9
                call    sub_7E3C8
                lda     0xBC(g13), g8
                mov     r5, g1
                call    sub_7E4DC
                ldob    RANDOM_MODE, r14
                cmpobe  1, r14, loc_7E2E0
                ldos    rank_mode, r14
                bbs     9, r14, loc_7E2C0
                ldos    0x5000A2, r14
                cmpobe  0, r14, loc_7E36C
                lda     off_AF1E8, g6
                ldos    0x5000A2, r14
                cmpobe  1, r14, loc_7E35C
                lda     off_AF28C, g6
                b       loc_7E35C
# ---------------------------------------------------------------------------
loc_7E2C0:                              # CODE XREF: sub_7E220+70↑j
                lda     off_AF3D4, g6
                ldos    0x5000A2, r14
                cmpobe  0, r14, loc_7E35C
                lda     off_AF478, g6
                b       loc_7E35C
# ---------------------------------------------------------------------------
loc_7E2E0:                              # CODE XREF: sub_7E220+64↑j
                lda     off_AF51C, g6
                b       loc_7E35C
# ---------------------------------------------------------------------------
loc_7E2EC:                              # CODE XREF: sub_7E220+20↑j
                ldos    0x5000A2, r14
                cmpobe  0, r14, loc_7E36C
                ldob    0x500066, r14
                cmpobe  0, r14, loc_7E31C
                mov     r7, r15
                mov     r6, r7
                mov     r15, r6
                mov     r5, r15
                mov     r4, r5
                mov     r15, r4
loc_7E31C:                              # CODE XREF: sub_7E220+E0↑j
                mov     r7, g9
                lda     off_AF330, g6
                lda     0xBC(g13), g8
                mov     r5, g1
                call    sub_7E4DC
                ldos    0x5000A2, r14
                cmpobe  0, r14, loc_7E36C
                lda     off_AF1E8, g6
                ldos    0x5000A2, r14
                cmpobe  1, r14, loc_7E35C
                lda     off_AF28C, g6
loc_7E35C:                              # CODE XREF: sub_7E220+90↑j
                mov     r6, g9
                lda     0xC0(g13), g8
                mov     r4, g1
                call    sub_7E4DC
loc_7E36C:                              # CODE XREF: sub_7E220+7C↑j
                ldos    0x90(g13), r4
                addo    1, r4, r4
                stos    r4, 0x90(g13)
                ret
# ---------------------------------------------------------------------------
loc_7E37C:                              # CODE XREF: sub_7E220+28↑j
                mov     0xC, r12
                ldob    COIN_INTERUPT_FLAGS, r14 # 0x00 = INSERT COINS
                andnot  r12, r14, r14
                stob    r14, COIN_INTERUPT_FLAGS # 0x00 = INSERT COINS
                lda     0x1000082, g9
                mov     0x15, g0
                mov     2, g1
                call    clr_pattern_s
                lda     0x10000D0, g9
                mov     0x15, g0
                mov     2, g1
                call    clr_pattern_s
                mov     0, r15
                stis    r15, 0x90(g13)
                ret
# End of function sub_7E220
# =============== S U B R O U T I N E =======================================
sub_7E3C8:                              # CODE XREF: sub_7E220+4C↑p
                lda     off_AF5C0, g6
                ldob    STAGE_ID, r14
                cmpoble 9, r14, loc_7E438
                lda     off_AEFFC, g6
                ld      add_BACKUP_RAM_TO_RAM, r15
                ldob    0x3324(r15), r14
                cmpobne 0x1A, r14, loc_7E404
                ld      0x3320(r15), r14
                bbc     1, r14, loc_7E438
loc_7E404:                              # CODE XREF: sub_7E3C8+2C↑j
                lda     off_AEF58, g6
                call    sub_7E5F4
                cmpobe  0, g0, loc_7E438
                lda     off_AF144, g6
                ld      add_BACKUP_RAM_TO_RAM, r13
                ldob    0x332D(r13), r4
                cmpobge g0, r4, loc_7E438
                lda     off_AF0A0, g6
loc_7E438:                              # CODE XREF: sub_7E3C8+10↑j
                ret
# End of function sub_7E3C8
# ---------------------------------------------------------------------------
alt_7E37C:                              # Seems to load a block at the upper right corner of the screen
                mov     12, r12
                ldob    COIN_INTERUPT_FLAGS, r14 # 0x00 = INSERT COINS
                andnot  r12, r14, r14
                stob    r14, COIN_INTERUPT_FLAGS # 0x00 = INSERT COINS
                lda     0x1000082, g9
                mov     0x15, g0
                mov     2, g1
                call    clr_pattern_s
                lda     0x10000D0, g9
                mov     0x15, g0
                mov     2, g1
                call    clr_pattern_s
                lda     0x1000082, r6
                lda     0x10000D0, r7
                ldob    0x500066, r14
                cmpobe  0, r14, loc_7E4A4
                mov     r7, r15
                mov     r6, r7
                mov     r15, r6
loc_7E4A4:                              # CODE XREF: ROM:0007E494↑j
                call    sub_7E7E4
                call    sub_7EBDC
                lda     0x50E000, g1
                mov     0x15, g2
                mov     2, g3
                mov     0, g4
                mov     r6, g9
                call    sub_7E68C
                ret
# =============== S U B R O U T I N E =======================================
sub_7E4CC:                              # CODE XREF: game_display_init+38↑p
                lda     0xBC(g13), g8
                mov     0, r15
                stis    r15, 0x90(g13)
                ret
# End of function sub_7E4CC
# =============== S U B R O U T I N E =======================================
sub_7E4DC:                              # CODE XREF: sub_7E220+58↑p
                call    sub_7E7E4
                mov     g6, r6
                ldos    0x90(g13), r3
                cmpobe  0, r3, loc_7E514
loc_7E4EC:                              # CODE XREF: sub_7E4DC+24↓j
                ld      0x0(g6), r11
                cmpobe  0, r11, loc_7E50C
                ldos    4(g6), r4
                addo    0xC, g6, g6
                cmpobe  r3, r4, loc_7E514
                cmpobg  r3, r4, loc_7E4EC
                subo    0xC, g6, g6
                b       loc_7E538
# ---------------------------------------------------------------------------
loc_7E50C:                              # CODE XREF: sub_7E4DC+14↑j
                mov     0, r15
                stis    r15, 0x90(g13)
loc_7E514:                              # CODE XREF: sub_7E4DC+C↑j
                ld      0x0(g6), r11
                cmpobne 0, r11, loc_7E520
                mov     r6, g6
loc_7E520:                              # CODE XREF: sub_7E4DC+3C↑j
                ld      0x0(g6), r11
                callx   (r11)
                ldob    0xA(g6), r3
                ld      off_7E66C[r3*4], r15
                bx      (r15)
# ---------------------------------------------------------------------------
loc_7E538:                              # CODE XREF: sub_7E4DC+2C↑j
                ld      0x0(g6), r11
                callx   (r11)
                ldob    0xA(g6), r11
                ld      off_7E67C[r11*4], r15
                bx      (r15)
# End of function sub_7E4DC
# =============== S U B R O U T I N E =======================================
sub_7E550:                              # DATA XREF: ROM:off_7E66C↓o
                ldis    0x0(g8), r4
                mov     r4, g4
                lda     0x50E000, g1
                mov     0x15, g2
                mov     2, g3
                call    sub_7E68C
                ret
# End of function sub_7E550
# =============== S U B R O U T I N E =======================================
sub_7E570:                              # DATA XREF: ROM:0007E670↓o
                ldis    6(g6), r15
                stis    r15, 0x0(g8)
loc_7E578:                              # DATA XREF: ROM:0007E674↓o
                ldis    0x0(g8), g4
                addo    1, g4, g4
                stos    g4, 0x0(g8)
                lda     0x50E000, g1
                mov     0x15, g2
                mov     2, g3
                call    sub_7E68C
                ret
# End of function sub_7E570
# =============== S U B R O U T I N E =======================================
sub_7E59C:                              # DATA XREF: ROM:0007E678↓o
                ldos    8(g6), r3
                addo    r3, r3, r3
                stos    r3, 2(g8)
loc_7E5A8:                              # DATA XREF: ROM:0007E688↓o
                ldos    8(g6), r3
                ldos    2(g8), r4
                cmpobne 0, r4, loc_7E5B8
                addo    r3, r3, r4
loc_7E5B8:                              # CODE XREF: sub_7E59C+14↑j
                subo    1, r4, r4
                stos    r4, 2(g8)
                cmpobge r4, r3, loc_7E5D4
                mov     0x15, g2
                mov     2, g3
                call    sub_7E748
                b       loc_7E5F0
# ---------------------------------------------------------------------------
loc_7E5D4:                              # CODE XREF: sub_7E59C+24↑j
                ldis    0x0(g8), r4
                mov     r4, g4
                lda     0x50E000, g1
                mov     0x15, g2
                mov     2, g3
                call    sub_7E68C
loc_7E5F0:                              # CODE XREF: sub_7E59C+34↑j
                ret
# End of function sub_7E59C
# =============== S U B R O U T I N E =======================================
sub_7E5F4:                              # CODE XREF: sub_7E3C8+44↑p
                ldob    gameprogram, r10 # bit 0 clear = Player 1
                addo    4, sp, sp
                st      g0, -4(sp)
                addo    4, sp, sp
                st      g1, -4(sp)
                call    sub_2B5C
                mov     g0, r3
                mov     g1, r4
                ld      -4(sp), g1
                subo    4, sp, sp
                ld      -4(sp), g0
                subo    4, sp, sp
                addo    r3, r4, g0
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_7E65C
                cmpobe  1, r10, loc_7E658
                mov     r3, r4
loc_7E658:                              # CODE XREF: sub_7E5F4+5C↑j
                mov     r4, g0
loc_7E65C:                              # CODE XREF: sub_7E5F4+58↑j
                ldob    0x40(g13), r13
                cmpobe  r13, g0, loc_7E668
                stob    g0, 0x40(g13)
loc_7E668:                              # CODE XREF: sub_7E5F4+6C↑j
                ret
# End of function sub_7E5F4
# ---------------------------------------------------------------------------
off_7E66C:      .long sub_7E550         # DATA XREF: sub_7E4DC+50↑r
                .long sub_7E570
                .long loc_7E578
                .long sub_7E59C
off_7E67C:      .long sub_7E550         # DATA XREF: sub_7E4DC+68↑r
                .long loc_7E578
                .long loc_7E578
                .long loc_7E5A8
# =============== S U B R O U T I N E =======================================
sub_7E68C:                              # CODE XREF: ROM:0007E4C4↑p
                shlo    7, 1, r8
                addo    g4, g4, r4
                cmpible 0, g4, loc_7E6AC
                subi    g4, 0, r3
                cmpibge r3, g2, loc_7E700
                addo    g4, g2, g2
                subo    r4, g1, g1
                b       loc_7E6BC
# ---------------------------------------------------------------------------
loc_7E6AC:                              # CODE XREF: sub_7E68C+8↑j
                cmpibge g4, g2, loc_7E700
                call    sub_7E708
                subo    g4, g2, g2
                addo    r4, g9, g9
loc_7E6BC:                              # CODE XREF: sub_7E68C+1C↑j
                mov     g3, r6
                mov     g9, r11
loc_7E6C4:                              # CODE XREF: sub_7E68C+68↓j
                mov     r11, r9
                mov     g1, r7
                mov     g2, r5
loc_7E6D0:                              # CODE XREF: sub_7E68C+58↓j
                ldos    (r7), r3
                addo    2, r7, r7
                stos    r3, (r9)
                addo    2, r9, r9
                cmpdeco 1, r5, r5
                bl      loc_7E6D0
                addo    r8, r11, r11
                addo    r8, g1, g1
                cmpdeco 1, r6, r6
                bl      loc_7E6C4
                lda     (g9)[g2*2], g9
                ret
# ---------------------------------------------------------------------------
loc_7E700:                              # CODE XREF: sub_7E68C+10↑j
                mov     g2, g4
                b       sub_7E708
# End of function sub_7E68C
# =============== S U B R O U T I N E =======================================
sub_7E708:                              # CODE XREF: sub_7E68C+24↑p
                cmpibge 0, g4, loc_7E744
                cmpibge 0, g3, loc_7E744
                shlo    7, 1, r8
                mov     g9, r9
                mov     g3, r7
                mov     0, r3
loc_7E720:                              # CODE XREF: sub_7E708+38↓j
                mov     r9, r10
                mov     g4, r12
loc_7E728:                              # CODE XREF: sub_7E708+2C↓j
                stos    r3, (r10)
                addo    2, r10, r10
                cmpdeco 1, r12, r12
                bl      loc_7E728
                addo    r8, r9, r9
                cmpdeco 1, r7, r7
                bl      loc_7E720
loc_7E744:                              # CODE XREF: sub_7E708↑j
                ret
# End of function sub_7E708
# =============== S U B R O U T I N E =======================================
sub_7E748:                              # CODE XREF: sub_7E59C+30↑p
                mov     0, r3
                mov     g2, r7
                mov     g3, r8
                mov     g9, r11
                shlo    7, 1, r10
loc_7E75C:                              # CODE XREF: sub_7E748+34↓j
                mov     r11, r9
                mov     r7, r12
loc_7E764:                              # CODE XREF: sub_7E748+28↓j
                stos    r3, (r9)
                addo    2, r9, r9
                cmpdeco 1, r12, r12
                bl      loc_7E764
                addo    r10, r11, r11
                cmpdeco 1, r8, r8
                bl      loc_7E75C
                ret
# End of function sub_7E748
# =============== S U B R O U T I N E =======================================
sub_7E784:                              # CODE XREF: ROM:0007E914↓p
                lda     texture_palette_offsets, r3
                ld      0x0(r3)[g1*4], g1
                ldos    (g1), r4
                ldl     4(g1), r6
                addo    0xC, g1, r8
                subo    r7, g2, r10
                shlo    7, 1, r5
                mov     g5, r9
loc_7E7AC:                              # CODE XREF: sub_7E784+54↓j
                mov     r9, r11
                mov     r7, r12
loc_7E7B4:                              # CODE XREF: sub_7E784+48↓j
                ldis    (r8), r3
                addo    2, r8, r8
                addo    r4, r3, r3
                stos    r3, (r11)
                addo    2, r11, r11
                cmpdeco 1, r12, r12
                bl      loc_7E7B4
                addo    r5, r9, r9
                cmpdeco 1, r6, r6
                bl      loc_7E7AC
                lda     (g5)[r7*2], g5
                ret
# End of function sub_7E784
# =============== S U B R O U T I N E =======================================
sub_7E7E4:                              # CODE XREF: ROM:loc_7E4A4↑p
                lda     0x50E000, r3
                mov     0, r4
                mov     r4, r5
                movl    r4, r6
                mov     2, r8
loc_7E7FC:                              # CODE XREF: sub_7E7E4+40↓j
                stq     r4, (r3)
                stq     r4, 0x10(r3)
                stq     r4, 0x20(r3)
                stq     r4, 0x30(r3)
                stq     r4, 0x40(r3)
                stq     r4, 0x50(r3)
                stq     r4, 0x60(r3)
                stq     r4, 0x70(r3)
                lda     0x80(r3), r3
                cmpdeco 1, r8, r8
                bl      loc_7E7FC
                ret
# End of function sub_7E7E4
# =============== S U B R O U T I N E =======================================
sub_7E82C:                              # CODE XREF: ROM:0007E9D0↓p
                lda     texture_palette_offsets, r3
                ld      0x0(r3)[g1*4], g1
                ldis    (g1), r11
                ldl     4(g1), r4
                addi    0xC, g1, g1
                mulo    g4, g3, r3
                addo    r3, r3, r3
                addo    r3, g1, g1
                shlo    7, 1, r8
                mov     g5, r6
                mov     r4, r10
loc_7E860:                              # CODE XREF: sub_7E82C+68↓j
                mov     r6, r9
                mov     g1, r7
                mov     g3, r12
loc_7E86C:                              # CODE XREF: sub_7E82C+58↓j
                ldos    (r7), r3
                addo    2, r7, r7
                addo    r11, r3, r3
                stos    r3, (r9)
                addo    2, r9, r9
                cmpdeco 1, r12, r12
                bl      loc_7E86C
                addo    r8, r6, r6
                lda     (g1)[r5*2], g1
                cmpdeco 1, r10, r10
                bl      loc_7E860
                lda     (g5)[g3*2], g5
                ret
# End of function sub_7E82C
# ---------------------------------------------------------------------------
                shlo    0xF, 1, r5      # unreachable code
                mov     0, r7
                lda     texture_palette_offsets, r3
                ld      0x0(r3)[r7*4], r7
loc_7E8B8:                              # CODE XREF: ROM:0007E8E8↓j
                ldob    (g0), r4
                cmpobe  0, r4, loc_7E8EC
                addo    1, g0, g0
                ldos    -0x80(r7)[r4*4], r14
                ldos    -0x7E(r7)[r4*4], r15
                addo    r14, r5, r14
                stos    r14, 0x0(g5)
                addo    r15, r5, r15
                stos    r15, 0x80(g5)
                addo    2, g5, g5
                b       loc_7E8B8
# ---------------------------------------------------------------------------
loc_7E8EC:                              # CODE XREF: ROM:0007E8BC↑j
                ret
# ---------------------------------------------------------------------------
loc_7E8F0:                              # DATA XREF: ROM:off_AEF58↓o
                ld      add_BACKUP_RAM_TO_RAM, r13
                ldob    0x3352(r13), r4 # r4 = BACKUP_RAM_TO_RAM+0x3352
                cmpobne 0, r4, loc_7E91C
                lda     0x50E00A, g5
                addo    0x1F, 3, g1
                mov     0x15, g2
                call    sub_7E784
                ret
# ---------------------------------------------------------------------------
loc_7E91C:                              # CODE XREF: ROM:0007E900↑j
                lda     0x50E000, g5
                addo    0x1F, 0xE, g1
                mov     0x15, g2
                call    sub_7E784
                ret
# ---------------------------------------------------------------------------
loc_7E934:                              # DATA XREF: ROM:000AEF7C↓o
                lda     0x50E00A, g5
                addo    0x1F, 8, g1
                mov     0x15, g2
                call    sub_7E784
                ret
# ---------------------------------------------------------------------------
loc_7E94C:                              # DATA XREF: ROM:off_AF0A0↓o
                lda     0x50E004, g5
                addo    0x1F, 7, g1
                mov     0x15, g2
                call    sub_7E784
                ret
# ---------------------------------------------------------------------------
loc_7E964:                              # DATA XREF: ROM:000AF020↓o
                lda     0x50E00C, g5
                addo    0x1F, 6, g1
                mov     0x15, g2
                call    sub_7E784
                ret
# ---------------------------------------------------------------------------
loc_7E97C:                              # DATA XREF: ROM:off_AEFFC↓o
                lda     0x50E004, g5
                addo    0x1F, 9, g1
                mov     0x15, g2
                call    sub_7E784
                ret
# ---------------------------------------------------------------------------
loc_7E994:                              # DATA XREF: ROM:000AEFA0↓o
                mov     g1, r8
                addo    0x1F, 4, g1
                call    sub_7E5F4
                cmpobg  2, g0, loc_7E9A8
                addo    0x1F, 5, g1
loc_7E9A8:                              # CODE XREF: ROM:0007E9A0↑j
                lda     0x50E006, g5
                mov     0x15, g2
                call    sub_7E784
                divo    0xA, g0, r4
                remo    0xA, g0, r5
                cmpobe  0, r4, loc_7E9D4
                mov     r4, g4
                addo    0x1F, 0xD, g1
                mov     1, g3
                call    sub_7E82C
loc_7E9D4:                              # CODE XREF: ROM:0007E9C0↑j
                mov     1, g3
                mov     r5, g4
                addo    0x1F, 0xD, g1
                call    sub_7E82C
                ld      add_BACKUP_RAM_TO_RAM, r13
                ldob    0x332D(r13), r11 # r11 = BACKUP_RAM_TO_RAM+0x332D
                cmpobe  1, r11, loc_7EA38
                addo    0x1F, 0xD, g1
                mov     1, g3
                mov     0xA, g4
                call    sub_7E82C
                mov     r11, g4
                divo    0xA, g4, r4
                remo    0xA, g4, r5
                cmpobe  0, r4, loc_7EA28
                mov     r4, g4
                mov     1, g3
                addo    0x1F, 0xD, g1
                call    sub_7E82C
loc_7EA28:                              # CODE XREF: ROM:0007EA14↑j
                mov     1, g3
                mov     r5, g4
                addo    0x1F, 0xD, g1
                call    sub_7E82C
loc_7EA38:                              # CODE XREF: ROM:0007E9F4↑j
                mov     g9, r11
                mov     g5, g9
                addo    4, sp, sp
                st      g0, -4(sp)
                addo    4, sp, sp
                st      g1, -4(sp)
                addo    4, sp, sp
                st      g2, -4(sp)
                addo    4, sp, sp
                st      g9, -4(sp)
                call    sub_3060
                mov     g0, r5
                mov     g1, r6
                mov     g2, r9
                mov     g9, r10
                ld      -4(sp), g9
                subo    4, sp, sp
                ld      -4(sp), g2
                subo    4, sp, sp
                ld      -4(sp), g1
                subo    4, sp, sp
                ld      -4(sp), g0
                subo    4, sp, sp
                ldob    0x61(g13), r3
                cmpobe  0, r8, loc_7EAC0
                ldob    0x62(g13), r3
loc_7EAC0:                              # CODE XREF: ROM:0007EAB8↑j
                cmpobne 1, r3, loc_7EB20
                ld      add_BACKUP_RAM_TO_RAM, r15
                ld      0x3320(r15), r14
                bbc     0, r14, loc_7EADC
                cmpobe  0, r8, loc_7EAF4
loc_7EADC:                              # CODE XREF: ROM:0007EAD4↑j
                mov     r9, r15
                mov     r5, r9
                mov     r15, r5
                mov     r10, r15
                mov     r6, r10
                mov     r15, r6
loc_7EAF4:                              # CODE XREF: ROM:0007EAD8↑j
                cmpobe  0, r9, loc_7EB20
                addo    2, g9, g9
                lda     aCoin_0, g0     # "COIN"
                call    s_print_mes
                mov     r9, g0
                call    s_print_dec_left
                addo    0x1F, 0x10, g0
                call    s_print_char
                mov     r10, g0
                call    s_print_dec_char
loc_7EB20:                              # CODE XREF: ROM:loc_7EAC0↑j
                mov     g9, g5
                mov     r11, g9
                ret
# ---------------------------------------------------------------------------
loc_7EB2C:                              # DATA XREF: ROM:off_AF28C↓o
                ld      add_BACKUP_RAM_TO_RAM, r13
                ldob    0x3352(r13), r4
                cmpobne 0, r4, loc_7EB8C
                lda     0x50E00C, g5
                mov     2, g3
                ldos    0x5000A2, r3
                divo    0xA, r3, r4
                remo    0xA, r3, r5
                cmpobe  0, r4, loc_7EB6C
                mov     r4, g4
                mov     0x15, g1
                call    sub_7E82C
loc_7EB6C:                              # CODE XREF: ROM:0007EB5C↑j
                mov     2, g3
                mov     r5, g4
                mov     0x15, g1
                call    sub_7E82C
                addo    0x1F, 0xC, g1
                mov     0x15, g2
                call    sub_7E784
                ret
# ---------------------------------------------------------------------------
loc_7EB8C:                              # CODE XREF: ROM:0007EB3C↑j
                lda     0x50E006, g5
                mov     1, g3
                ldos    0x5000A2, r3
                divo    0xA, r3, r4
                remo    0xA, r3, r5
                cmpobe  0, r4, loc_7EBB8
                mov     r4, g4
                addo    0x1F, 0xD, g1
                call    sub_7E82C
loc_7EBB8:                              # CODE XREF: ROM:0007EBA8↑j
                mov     1, g3
                mov     r5, g4
                addo    0x1F, 0xD, g1
                call    sub_7E82C
                addo    2, g5, g5
                addo    0x1F, 0xF, g1
                mov     0x15, g2
                call    sub_7E784
                ret
# =============== S U B R O U T I N E =======================================
sub_7EBDC:                              # CODE XREF: ROM:0007E4A8↑p
                lda     0x50E00E, g5
                lda     0x21, g1
                mov     0x15, g2
                call    sub_7E784
                ret
# End of function sub_7EBDC
# =============== S U B R O U T I N E =======================================
sub_7EBF4:                              # DATA XREF: ROM:off_AF330↓o
                lda     0x50E00A, g5
                lda     0x20, g1
                mov     0x15, g2
                call    sub_7E784
                ret
# End of function sub_7EBF4
# =============== S U B R O U T I N E =======================================
sub_7EC0C:                              # DATA XREF: ROM:off_AF3D4↓o
                lda     0x50E00A, g5
                lda     0x2A, g1
                mov     0x15, g2
                call    sub_7E784
                ret
# End of function sub_7EC0C
# =============== S U B R O U T I N E =======================================
sub_7EC24:                              # DATA XREF: ROM:off_AF51C↓o
                lda     0x50E00A, g5
                lda     0x29, g1
                mov     0x15, g2
                call    sub_7E784
                ret
# End of function sub_7EC24
# =============== S U B R O U T I N E =======================================
_uk_draw_please_wait:                   # DATA XREF: ROM:off_AF5C0↓o
                addo    4, sp, sp
                st      g9, -4(sp)
                lda     0x50E006, g9
                lda     aPleaseWait, g0 # "PLEASE WAIT"
                call    s_print_mes
                mov     g9, g5
                ld      -4(sp), g9
                subo    4, sp, sp
                ret
# End of function _uk_draw_please_wait
# ---------------------------------------------------------------------------
                ret                     # unreachable code
# ---------------------------------------------------------------------------
                ret                     # unreachable code
# =============== S U B R O U T I N E =======================================
# return
sub_7EC78:                              # CODE XREF: camera_init+123C↑p
                ret
# End of function sub_7EC78
# ---------------------------------------------------------------------------
                ret
# =============== S U B R O U T I N E =======================================
# return
sub_7EC80:                              # CODE XREF: camera_init+E94↑p
                ret
# End of function sub_7EC80
# ---------------------------------------------------------------------------
                ret                     # unreachable code
# ---------------------------------------------------------------------------
                ret                     # unreachable code
# ---------------------------------------------------------------------------
                ret                     # unreachable code
# ---------------------------------------------------------------------------
                ret                     # unreachable code
# =============== S U B R O U T I N E =======================================
game_disp_lamps:                        # CODE XREF: game_display_init+34↑p
                mov     0, r3
                stob    r3, 0x7B(g13)   # mod_fa_game_disp+0x7B
                subo    1, 0, r4
                mov     r4, r5
                st      r3, 0x8C(g13)   # mod_fa_game_disp+0x8C
                movl    r4, r6
                stq     r4, 0x7C(g13)   # mod_fa_game_disp+0x7C
                ret
# End of function game_disp_lamps
# =============== S U B R O U T I N E =======================================
load_player_splash:                     # CODE XREF: game_display_cont:loc_79498↑p
                ld      fa_rob0, g7
                ld      fa_rob1, g8
                ldob    0x7B(g13), r8
                ldob    0x8C(g13), r9
                ld      0x0(g13), r10
                ldob    0x8D(g13), r11
                cmpo    0, r11
                subo    1, r11, r15     # r15=FFFFFFFF wat
                be      loc_7ECE4
                stos    r15, 0x8D(g13)
loc_7ECE4:                              # CODE XREF: load_player_splash+28↑j
                ldob    0x8E(g13), r12
                cmpo    0, r12
                subo    1, r12, r15     # r15=FFFFFFFF wat
                be      loc_7ECF8
                stos    r15, 0x8E(g13)
loc_7ECF8:                              # CODE XREF: load_player_splash+3C↑j
                bbc     9, r10, loc_7ED24
                clrbit  9, r10, r10
                lda     0xFF, r5
                lda     billboard_data_called_init, r4
                lda     loc_7ED14, r7
loc_7ED14:                              # DATA XREF: load_player_splash+58↑o
                ldob    (r4), r3
                cmpobe  r3, r5, loc_7ED24
                lda     1(r4), r4
                bal     write_billboard_data
loc_7ED24:                              # CODE XREF: load_player_splash:loc_7ECF8↑j
                bbc     7, r10, loc_7ED50
                clrbit  7, r10, r10
                lda     0xFF, r5
                lda     billboard_data_pre_round, r4
                lda     loc_7ED40, r7
loc_7ED40:                              # DATA XREF: load_player_splash+84↑o
                ldob    (r4), r3
                cmpobe  r3, r5, loc_7ED50
                lda     1(r4), r4
                bal     write_billboard_data
loc_7ED50:                              # CODE XREF: load_player_splash:loc_7ED24↑j
                bbc     6, r10, loc_7ED7C
                clrbit  6, r10, r10
                lda     0xFF, r5
                lda     billboard_data_post_round, r4
                lda     loc_7ED6C, r7
loc_7ED6C:                              # DATA XREF: load_player_splash+B0↑o
                ldob    (r4), r3
                cmpobe  r3, r5, loc_7ED7C
                lda     1(r4), r4
                bal     write_billboard_data
loc_7ED7C:                              # CODE XREF: load_player_splash:loc_7ED50↑j
                bbc     8, r10, loc_7EDB4
                ld      select0_flag, r5
                ld      select1_flag, r6
                or      r5, r6, r4
                bbc     0, r4, loc_7EDB4
                clrbit  8, r10, r10
                bbc     0, r5, loc_7EDA8
                lda     0xA1, r3
                bal     sub_7F0C0
loc_7EDA8:                              # CODE XREF: load_player_splash+E8↑j
                bbc     0, r6, loc_7EDB4
                lda     0xA9, r3
                bal     sub_7F0C0
loc_7EDB4:                              # CODE XREF: load_player_splash:loc_7ED7C↑j
                bbc     4, r10, loc_7EDF0
                ldob    winner, r5
                ldob    gameprogram, r6 # bit 0 clear = Player 1
                clrbit  4, r10, r10
                lda     0x92, r3
                cmpobne 0, r5, loc_7EDDC
                cmpobne 1, r6, loc_7EDEC
                b       loc_7EDF0
# ---------------------------------------------------------------------------
loc_7EDDC:                              # CODE XREF: load_player_splash+11C↑j
                cmpobne 1, r5, loc_7EDF0
                lda     0x9A, r3
                cmpobne 0, r6, loc_7EDEC
                b       loc_7EDF0
# ---------------------------------------------------------------------------
loc_7EDEC:                              # CODE XREF: load_player_splash+120↑j
                bal     sub_7F0C0
loc_7EDF0:                              # CODE XREF: load_player_splash:loc_7EDB4↑j
                bbc     5, r10, loc_7EE10
                clrbit  5, r10, r10
                ld      select0_flag, r6
                lda     0x93, r3
                bbc     2, r6, loc_7EE0C
                lda     0x9B, r3
loc_7EE0C:                              # CODE XREF: load_player_splash+150↑j
                bal     sub_7F0C0
loc_7EE10:                              # CODE XREF: load_player_splash:loc_7EDF0↑j
                bbc     3, r10, loc_7EEB8
                ldos    0x5000A2, r4
                ldob    gameprogram, r5 # bit 0 clear = Player 1
                ldob    0x500066, r6
                mov     0x1F, r3
                bal     sub_7F0C0
                lda     0x3F, r3
                bal     sub_7F0C0
                lda     0x5F, r3
                bal     sub_7F0C0
                lda     0x7F, r3
                bal     sub_7F0C0
                cmpobe  1, r5, loc_7EE7C
                cmpobe  0, r4, loc_7EE7C
                cmpobe  0, r5, loc_7EE5C
                cmpobne 0, r6, loc_7EE7C
loc_7EE5C:                              # CODE XREF: load_player_splash+1A0↑j
                mov     r4, r13
                divo    0xA, r13, r14
                cmpobe  0, r14, loc_7EE74
                addo    0x1F, 1, r3
                addo    r3, r14, r3
                bal     sub_7F0C0
loc_7EE74:                              # CODE XREF: load_player_splash+1B0↑j
                remo    0xA, r13, r3
                bal     sub_7F0C0
loc_7EE7C:                              # CODE XREF: load_player_splash+198↑j
                cmpobe  0, r5, loc_7EEB4
                cmpobe  0, r4, loc_7EEB4
                cmpobe  1, r5, loc_7EE8C
                cmpobne 1, r6, loc_7EEB4
loc_7EE8C:                              # CODE XREF: load_player_splash+1D0↑j
                mov     r4, r13
                divo    0xA, r13, r14
                cmpobe  0, r14, loc_7EEA4
                shlo    5, 3, r3
                addo    r3, r14, r3
                bal     sub_7F0C0
loc_7EEA4:                              # CODE XREF: load_player_splash+1E0↑j
                remo    0xA, r13, r3
                shlo    6, 1, r15
                addo    r15, r3, r3
                bal     sub_7F0C0
loc_7EEB4:                              # CODE XREF: load_player_splash:loc_7EE7C↑j
                clrbit  3, r10, r10
loc_7EEB8:                              # CODE XREF: load_player_splash:loc_7EE10↑j
                ldos    0x1F70(g7), r5
                mov     0, r15
                ldob    gameprogram, r4 # bit 0 clear = Player 1
                cmpo    0, r5
                stos    r15, 0x1F70(g7)
                be      loc_7EF34
                cmpobe  1, r4, loc_7EF34
                lda     0x97, r3
                bal     sub_7F0C0
                shlo    4, 9, r3
                bal     sub_7F0C0
                setbit  2, r10, r10
                b       loc_7EF28
# ---------------------------------------------------------------------------
                mov     0x1F, r3
                bal     sub_7F0C0
                lda     0x3F, r3
                bal     sub_7F0C0
                divo    0xA, r5, r14
                addo    0x1F, 1, r3
                cmpo    0, r14
                addo    r3, r14, r3
                be      loc_7EF20
                bal     sub_7F0C0
loc_7EF20:                              # CODE XREF: load_player_splash+264↑j
                remo    0xA, r5, r3
                bal     sub_7F0C0
loc_7EF28:                              # CODE XREF: load_player_splash+240↑j
                clrbit  3, r10, r10
                mov     0x10, r11
                stob    r11, 0x8D(g13)
loc_7EF34:                              # CODE XREF: load_player_splash+224↑j
                ldos    8048(g8), r5
                mov     0, r15
                ldob    gameprogram, r4 # bit 0 clear = Player 1
                cmpo    0, r5
                stos    r15, 0x1F70(g8)
                be      loc_7EFB8
                cmpobe  0, r4, loc_7EFB8
                lda     0x9F, r3
                bal     sub_7F0C0
                shlo    3, 0x13, r3
                bal     sub_7F0C0
                setbit  1, r10, r10
                b       loc_7EFAC
# ---------------------------------------------------------------------------
                lda     0x5F, r3
                bal     sub_7F0C0
                lda     0x7F, r3
                bal     sub_7F0C0
                divo    0xA, r5, r14
                shlo    5, 3, r3
                cmpo    0, r14
                addo    r3, r14, r3
                be      loc_7EF9C
                bal     sub_7F0C0
loc_7EF9C:                              # CODE XREF: load_player_splash+2E0↑j
                remo    0xA, r5, r14
                shlo    6, 1, r3
                addo    r3, r14, r3
                bal     sub_7F0C0
loc_7EFAC:                              # CODE XREF: load_player_splash+2BC↑j
                clrbit  3, r10, r10
                mov     0x10, r12
                stob    r12, 0x8E(g13)
loc_7EFB8:                              # CODE XREF: load_player_splash+2A0↑j
                ldos    0x5000A2, r4
                ldob    gameprogram, r5 # bit 0 clear = Player 1
                ldob    0x500066, r6
                cmpobl  0, r11, loc_7F024
                bbc     2, r10, loc_7F024
                clrbit  2, r10, r10
                lda     0x97, r3
                bal     sub_7F0C0
                mov     0x1F, r3
                bal     sub_7F0C0
                lda     0x3F, r3
                bal     sub_7F0C0
                cmpobe  1, r5, loc_7F024
                cmpobe  0, r4, loc_7F024
                cmpobe  0, r5, loc_7F004
                cmpobne 0, r6, loc_7F024
loc_7F004:                              # CODE XREF: load_player_splash+348↑j
                mov     r4, r13
                divo    0xA, r13, r14
                cmpobe  0, r14, loc_7F01C
                addo    0x1F, 1, r3
                addo    r3, r14, r3
                bal     sub_7F0C0
loc_7F01C:                              # CODE XREF: load_player_splash+358↑j
                remo    0xA, r13, r3
                bal     sub_7F0C0
loc_7F024:                              # CODE XREF: load_player_splash+31C↑j
                cmpobl  0, r12, handle_lamps
                bbc     1, r10, handle_lamps
                clrbit  1, r10, r10
                lda     0x9F, r3
                bal     sub_7F0C0
                lda     0x5F, r3
                bal     sub_7F0C0
                lda     0x7F, r3
                bal     sub_7F0C0
                cmpobe  0, r5, handle_lamps
                cmpobe  0, r4, handle_lamps
                cmpobe  1, r5, loc_7F058
                cmpobne 1, r6, handle_lamps
loc_7F058:                              # CODE XREF: load_player_splash+39C↑j
                mov     r4, r13
                divo    0xA, r13, r14
                cmpobe  0, r14, loc_7F070
                shlo    5, 3, r3
                addo    r3, r14, r3
                bal     sub_7F0C0
loc_7F070:                              # CODE XREF: load_player_splash+3AC↑j
                remo    0xA, r13, r3
                shlo    6, 1, r15
                addo    r15, r3, r3
                bal     sub_7F0C0
handle_lamps:                           # CODE XREF: load_player_splash:loc_7F024↑j
                cmpobe  r8, r9, write_lamp_data
                ldob    0x7C(g13)[r9], r3 # g13 = mod_fa_game_disp_add
                addo    1, r9, r9
                and     0xF, r9, r9
                stob    r3, IO_BILLBOARD
write_lamp_data:                        # CODE XREF: load_player_splash:handle_lamps↑j
                stob    r8, 0x7B(g13)   # mod_fa_game_disp+0x7B
                stob    r9, 0x8C(g13)   # g13 = mod_fa_game_disp_add, r9=8
                st      r10, 0x0(g13)   # 0xC2000000 to mod_fa_game_disp_add
                ret
# End of function load_player_splash
# =============== S U B R O U T I N E =======================================
write_billboard_data:                   # CODE XREF: load_player_splash+6C↑p
                stob    r3, 0x7C(g13)[r8]
                addo    1, r8, r8
                and     0xF, r8, r8
                bx      (r7)
# End of function write_billboard_data
# =============== S U B R O U T I N E =======================================
sub_7F0C0:                              # CODE XREF: load_player_splash+F0↑p
                stob    r3, 0x7C(g13)[r8]
                addo    1, r8, r8
                and     0xF, r8, r8
                bx      (g14)
# End of function sub_7F0C0
# ---------------------------------------------------------------------------
billboard_data_pre_round:.long 0x7F5F3F1F
                .byte 0xFF
billboard_data_post_round:.long 0xFF8F9F97
billboard_data_called_init:.long 0x7F5F3F1F
                .long 0xFF8F9F97
                .fill 3, 1, 0
# =============== S U B R O U T I N E =======================================
# Inits player bodies
sub_7F0E8:                              # CODE XREF: ROM:0000720C↑p
                ld      fa_rob0, r3
                ld      fa_rob1, r7
                lda     flt_7F198, r11
                ldob    0x1B1(r3), r4
                remo    0x1A, r4, r4
                mulo    0x18, r4, r4
                addo    r4, r11, r12
                ldob    0x1B1(r7), r4
                remo    0x1A, r4, r4
                mulo    0x18, r4, r4
                addo    r4, r11, r13
                lda     0x1F88(r3), r3
                lda     0x1F88(r7), r7
                shlo    2, 0x19, r15
                ldt     0x0(r12), r4
                stt     r4, 0x30(r3)
                stt     r4, 0x4C(r3)
                ldt     0xC(r12), r4
                stt     r4, 0x3C(r3)
                ldt     0x0(r13), r4
                stt     r4, 0x30(r7)
                stt     r4, 0x4C(r7)
                ldt     0xC(r13), r4
                stt     r4, 0x3C(r7)
                addo    r15, r3, r3
                addo    r15, r7, r7
                ldt     0x0(r12), r4
                stt     r4, 0x30(r3)
                stt     r4, 0x4C(r3)
                ldt     0xC(r12), r4
                stt     r4, 0x3C(r3)
                ldt     0x0(r13), r4
                stt     r4, 0x30(r7)
                stt     r4, 0x4C(r7)
                ldt     0xC(r13), r4
                stt     r4, 0x3C(r7)
                ret
# End of function sub_7F0E8
# ---------------------------------------------------------------------------
                .long 0
                .long 0
flt_7F198:      .float 0.99000001       # DATA XREF: sub_7F0E8+10↑o
                .float 0.99000001
                .float 0.99000001
                .float 0.2
                .float 0.15000001
                .float 0.2
                .float 0.995
                .float 0.995
                .float 0.995
                .float 0.19
                .float 0.14
                .float 0.19
                .float 0.995
                .float 0.995
                .float 0.995
                .float 0.19
                .float 0.14
                .float 0.19
                .long 0
                .long 0
                .long 0
                .float 3.0
                .float 3.0
                .float 3.0
                .float 0.99000001
                .float 0.99000001
                .float 0.99000001
                .float 0.2
                .float 0.16
                .float 0.2
                .float 0.99000001
                .float 0.99000001
                .float 0.99000001
                .float 0.2
                .float 0.15000001
                .float 0.2
                .float 0.98500001
                .float 0.98500001
                .float 0.98500001
                .float 0.30000001
                .float 0.18000001
                .float 0.30000001
                .float 0.98500001
                .float 0.98500001
                .float 0.98500001
                .float 0.30000001
                .float 0.18000001
                .float 0.30000001
                .float 0.995
                .float 0.995
                .float 0.995
                .float 0.15000001
                .float 0.15000001
                .float 0.15000001
                .float 0.995
                .float 0.995
                .float 0.995
                .float 0.15000001
                .float 0.15000001
                .float 0.15000001
                .float 0.98000002
                .float 0.98000002
                .float 0.98000002
                .float 0.2
                .float 0.2
                .float 0.2
                .long 0
                .long 0
                .long 0
                .float 3.0
                .float 3.0
                .float 3.0
                .long 0
                .long 0
                .long 0
                .float 3.0
                .float 3.0
                .float 3.0
                .float 0.98000002
                .float 0.98000002
                .float 0.98000002
                .float 0.2
                .float 0.2
                .float 0.2
                .float 0.98000002
                .float 0.98000002
                .float 0.98000002
                .float 0.2
                .float 0.2
                .float 0.2
                .float 0.995
                .float 0.995
                .float 0.995
                .float 0.19
                .float 0.14
                .float 0.19
                .float 0.99000001
                .float 0.99000001
                .float 0.99000001
                .float 0.2
                .float 0.15000001
                .float 0.2
                .float 0.98000002
                .float 0.98000002
                .float 0.98000002
                .float 0.2
                .float 0.2
                .float 0.2
                .float 0.98000002
                .float 0.98000002
                .float 0.98000002
                .float 0.2
                .float 0.2
                .float 0.2
                .float 0.98000002
                .float 0.98000002
                .float 0.98000002
                .float 0.2
                .float 0.2
                .float 0.2
                .float 0.98000002
                .float 0.98000002
                .float 0.98000002
                .float 0.2
                .float 0.2
                .float 0.2
                .float 0.98000002
                .float 0.98000002
                .float 0.98000002
                .float 0.2
                .float 0.2
                .float 0.2
                .float 0.98000002
                .float 0.98000002
                .float 0.98000002
                .float 0.2
                .float 0.2
                .float 0.2
                .float 0.98000002
                .float 0.98000002
                .float 0.98000002
                .float 0.2
                .float 0.2
                .float 0.2
                .float 0.98000002
                .float 0.98000002
                .float 0.98000002
                .float 0.2
                .float 0.2
                .float 0.2
                .float 0.98000002
                .float 0.98000002
                .float 0.98000002
                .float 0.2
                .float 0.2
                .float 0.2
# =============== S U B R O U T I N E =======================================
sub_7F408:                              # CODE XREF: CONTINUE_DSP-4B78↑p
                call    sub_89BF8
                stt     g0, 0x24(g3)
                ret
# End of function sub_7F408
# =============== S U B R O U T I N E =======================================
dented_cnt:                             # CODE XREF: calc_unit_mat+2C4↑p
                ldt     0x24(g3), g0    # Label from official source
                ld      debug_flag, r7
                bbc     2, r7, loc_7F428
                bbs     5, r7, loc_7F468
loc_7F428:                              # CODE XREF: dented_cnt+C↑j
                ld      0x219C(g7), r7
                cmpi    0, r7
                bl      loc_7F468
                ldt     0x30(g3), g0
# ---------------------------------------------------------------------------
                .long 0x68042A90        # cmpr    +0.0,g0
# ---------------------------------------------------------------------------
                bge     loc_7F45C
                lda     0x3B23D70A, r8
                subr    r8, g0, g0
                mov     g0, g1
                mov     g0, g2
                stt     g0, 0x30(g3)
loc_7F45C:                              # CODE XREF: dented_cnt+2C↑j
                ldt     0x3C(g3), g4
                call    pendulum_3axis_cnt
                stt     g0, 0x24(g3)
loc_7F468:                              # CODE XREF: dented_cnt+10↑j
                ret
# End of function dented_cnt
# =============== S U B R O U T I N E =======================================
sub_7F46C:                              # CODE XREF: play_motion+AC4↑p
                lda     0x1F88(g7), g3
                ldt     3(g4), g0
                or      g0, g1, r4
                or      r4, g2, r4
                cmpo    0, r4
                bne     loc_7F48C
                ldt     0x24(g3), g0
loc_7F48C:                              # CODE XREF: sub_7F46C+18↑j
                ldib    0xF(g4), r3
                subo    1, 0, r15
                cmpi    r15, r3
                ldob    0x10(g4), r5
                bne     loc_7F4C0
                ldob    4(g7), r3
                not     r3, r3
                and     1, r3, r3
                ld      fa_rob0[r3*4], r4
                ldob    0x822(r4), r3
                cmpobge 0xA, r3, loc_7F4C0
                mov     0xA, r3
loc_7F4C0:                              # CODE XREF: sub_7F46C+30↑j
                cvtir   r3, r3
                ld      float_5, r15
                mulr    r15, r3, g4
                cmpo    0, r5
                mov     g4, g5
                mov     g4, g6
                alterbit 0x1F, g4, g4
                be      loc_7F4F8
                cmpo    1, r5
                alterbit 0x1F, g5, g5
                be      loc_7F4F8
                cmpo    2, r5
                alterbit 0x1F, g6, g6
loc_7F4F8:                              # CODE XREF: sub_7F46C+74↑j
                call    sub_89BF8
                ldt     0x4C(g3), r4
                stt     r4, 0x30(g3)
                ret
# End of function sub_7F46C
# =============== S U B R O U T I N E =======================================
sub_7F508:                              # CODE XREF: play_motion+AE0↑p
                lda     0x1FEC(g7), g3
                ldt     3(g4), g0
                or      g0, g1, r4
                or      r4, g2, r4
                cmpo    0, r4
                mov     g0, r4
                mov     g1, g0
                mov     r4, g1
                mov     g0, r4
                mov     0, g0
                mov     r4, g2
                bne     loc_7F540
                ldt     0x24(g3), g0
loc_7F540:                              # CODE XREF: sub_7F508+30↑j
                ldib    0xF(g4), r3
                subo    1, 0, r15
                cmpi    r15, r3
                ldob    0x10(g4), r5
                bne     loc_7F574
                ldob    4(g7), r3
                not     r3, r3
                and     1, r3, r3
                ld      fa_rob0[r3*4], r4
                ldob    0x822(r4), r3
                cmpobge 0xF, r3, loc_7F574
                mov     0xF, r3
loc_7F574:                              # CODE XREF: sub_7F508+48↑j
                cvtir   r3, r3
                ld      float_7, r15
                mulr    r15, r3, g4
                cmpo    0, r5
                mov     g4, g5
                mov     g4, g6
                alterbit 0x1F, g5, g5
                be      loc_7F5AC
                cmpo    1, r5
                alterbit 0x1F, g6, g6
                be      loc_7F5AC
                cmpo    2, r5
                alterbit 0x1F, g4, g4
loc_7F5AC:                              # CODE XREF: sub_7F508+8C↑j
                call    sub_89BF8
                ldt     0x4C(g3), r4
                stt     r4, 0x30(g3)
                ret
# End of function sub_7F508
# =============== S U B R O U T I N E =======================================
sub_7F5BC:                              # CODE XREF: play_motion:loc_1C8CC↑p
                ldob    3(g4), r4
                st      r4, 0x219C(g7)
                ret
# End of function sub_7F5BC
# =============== S U B R O U T I N E =======================================
sub_7F5CC:                              # CODE XREF: camera_init+14DC↑p
                ld      debug_flag, r7
                bbc     2, r7, loc_7F5DC
                bbs     5, r7, loc_7F5F0
loc_7F5DC:                              # CODE XREF: sub_7F5CC+8↑j
                ld      0x219C(g7), r7
                subi    1, r7, r7
                st      r7, 0x219C(g7)
loc_7F5F0:                              # CODE XREF: sub_7F5CC+C↑j
                ret
# End of function sub_7F5CC
# =============== S U B R O U T I N E =======================================
sub_7F5F4:                              # CODE XREF: play_motion:loc_1C8C0↑p
                ldob    4(g4), r11
                cvtir   r11, r7
                ldt     5(g4), r4
                ldt     0x11(g4), r8
                subr    r4, r8, r8
                subr    r5, r9, r9
                subr    r6, r10, r10
                divr    r7, r8, r8
                divr    r7, r9, r9
                divr    r7, r10, r10
                lda     0x20F0(g7), r3
                ldob    3(g4), r7
                mulo    0x1C, r7, r15
                st      r11, displacement(r3)[r15*1]
# End of function sub_7F5F4
                stt     r4, prcb(r3)[r15*1]
                stt     r8, check_word1(r3)[r15*1]
                ret
# =============== S U B R O U T I N E =======================================
scale_parts_cnt:                        # CODE XREF: calc_unit_mat+2D0↑p
                lda     0x20F0(g7), r3  # Label from official source
                mulo    0x1C, g3, r15
                ld      displacement(r3)[r15*1], r11
                cmpi    0, r11
                movt    0, g0
                bge     loc_7F6A8
                ldt     4(r3)[r15*1], g0
                ld      debug_flag, r7
                bbc     2, r7, loc_7F680
                bbs     5, r7, loc_7F6A8
loc_7F680:                              # CODE XREF: scale_parts_cnt+30↑j
                subo    1, r11, r11
                st      r11, displacement(r3)[r15*1]
                ldt     0x10(r3)[r15*1], r8
                addr    r8, g0, g0
                addr    r9, g1, g1
                addr    r10, g2, g2
                stt     g0, 4(r3)[r15*1]
loc_7F6A8:                              # CODE XREF: scale_parts_cnt+1C↑j
                ret
# End of function scale_parts_cnt
# =============== S U B R O U T I N E =======================================
scale_something:                        # CODE XREF: ROM:00007210↑p
                ld      fa_rob0, r3
                ld      fa_rob1, r7
                lda     0x2758(r3), r3
                lda     0x2758(r7), r7
                lda     flt_7F198, r11
                ldob    0x1B1(r3), r4
                remo    0x1A, r4, r4
                mulo    0x18, r4, r4
                addo    r4, r11, r12
                ldob    0x1B1(r7), r4
                remo    0x1A, r4, r4
                mulo    0x18, r4, r4
                addo    r4, r11, r13
                ldt     0x0(r12), r4
                stt     r4, 0x30(r3)
                stt     r4, 0x4C(r3)
                ldt     0xC(r12), r4
                stt     r4, 0x3C(r3)
                ldt     0x0(r13), r4
                stt     r4, 0x30(r7)
                stt     r4, 0x4C(r7)
                ldt     0xC(r13), r4
                stt     r4, 0x3C(r7)
                ld      player_model_y_scale, r4
                st      r4, 0x64(r3)    # P1_PARTS+0x64 =r4
                st      r4, 0x64(r7)
                subo    1, 0, r4
                st      r4, 0x6C(r3)
                st      r4, 0x6C(r7)
                ret
# End of function scale_something
# =============== S U B R O U T I N E =======================================
write_scale:                            # CODE XREF: CONTINUE_DSP-4B34↑p
                call    sub_89BF8
                stt     g0, 0x24(g3)
                ld      player_model_y_scale, r4
                st      r4, 0x68(g3)
                st      r4, 0x64(g3)
                subo    1, 0, r4
                st      r4, 0x6C(g3)
                ret
# End of function write_scale
# =============== S U B R O U T I N E =======================================
sub_7F760:                              # CODE XREF: play_motion+A1C↑p
                lda     0x2758(g7), g3
                ld      3(g4), r4
                lda     0x4479C000, r15
                cmpr    r15, r4
                be      loc_7F788
                st      r4, 0x64(g3)
                shlo    6, 3, r15
                st      r15, 0x6C(g3)
loc_7F788:                              # CODE XREF: sub_7F760+18↑j
                ldt     7(g4), g0
                or      g0, g1, r4
                or      r4, g2, r4
                cmpo    0, r4
                bne     loc_7F7A0
                ldt     0x24(g3), g0
loc_7F7A0:                              # CODE XREF: sub_7F760+38↑j
                ldib    0x13(g4), r3
                subo    1, 0, r15
                cmpi    r15, r3
                bne     loc_7F7D0
                ldob    4(g7), r3
                not     r3, r3
                and     1, r3, r3
                ld      fa_rob0[r3*4], r4
                ldob    0x822(r4), r3
                cmpobge 0x14, r3, loc_7F7D0
                mov     0x14, r3
loc_7F7D0:                              # CODE XREF: sub_7F760+4C↑j
                cvtir   r3, r3
                ld      float_neg_7, r15
                lda     0xBB83126F, r4
                mulr    r4, r3, g4
                mov     g4, g5
                mov     g4, g6
                lda     0x2758(g7), g3
                call    sub_89BF8
                ldt     0x4C(g3), r4
                stt     r4, 0x30(g3)
                mov     0, r15
                st      r15, 0x2A98(g7)
                mov     1, r15
                st      r15, 0x2A9C(g7)
                ret
# End of function sub_7F760
# =============== S U B R O U T I N E =======================================
hammered_cnt:                           # CODE XREF: camera_init+14C0↑p
                lda     0x2758(g7), g3  # Label from official source
                ldt     0x24(g3), g0
                ld      debug_flag, r7
                bbc     2, r7, loc_7F83C
                bbs     5, r7, loc_7F890
loc_7F83C:                              # CODE XREF: hammered_cnt+14↑j
                call    sub_7F894
                lda     0x5010, r13
                ld      0x1A4(g7), r14
                and     r13, r14, r3
                cmpobe  0, r3, loc_7F860
                movt    0, r4
                stt     r4, 0xC(g3)
                stt     r4, 0x18(g3)
loc_7F860:                              # CODE XREF: hammered_cnt+30↑j
                ldt     0x30(g3), g0
# ---------------------------------------------------------------------------
                .long 0x68042A90        # cmpr    +0.0,g0
# ---------------------------------------------------------------------------
                bge     loc_7F884
                lda     0x3A03126F, r8
                subr    r8, g0, g0
                mov     g0, g1
                mov     g0, g2
                stt     g0, 0x30(g3)
loc_7F884:                              # CODE XREF: hammered_cnt+48↑j
                ldt     0x3C(g3), g4
                call    pendulum_3axis_cnt
                stt     g0, 0x24(g3)
loc_7F890:                              # CODE XREF: hammered_cnt+18↑j
                ret
# End of function hammered_cnt
# =============== S U B R O U T I N E =======================================
sub_7F894:                              # CODE XREF: hammered_cnt:loc_7F83C↑p
                ld      0x7EC(g7), r15
                bbc     0x1D, r15, loc_7F8AC
                ld      0x0(g7), r15
                bbs     0x1D, r15, loc_7F8AC
                call    sub_7FB28
                b       loc_7FB20
# ---------------------------------------------------------------------------
loc_7F8AC:                              # CODE XREF: sub_7F894+4↑j
                ld      0x6C(g3), r4
                cmpibge 0, r4, loc_7FB20
                ld      0x2A9C(g7), r9
                ldob    mode, r3
                lda     mode9, r7
                cmpo    r3, r7
                bne     loc_7F954
                ld      INTERUPT_FLAGS_MOMENTARY, r3
                ldob    4(g7), r7
                ldob    gameprogram, r11 # bit 0 clear = Player 1
                cmpo    2, r11
                be      loc_7F8F8
                cmpo    r7, r11
                bne     loc_7F954
loc_7F8F8:                              # CODE XREF: sub_7F894+58↑j
                shlo    3, r7, r7
                lda     loc_F700, r15
                shlo    r7, r15, r15
                and     r15, r3, r8
                cmpo    0, r8
                ldl     0x2A98(g7), r8
                mov     0, r3
                be      loc_7F944
                lda     0x41000000, r15
                cvtir   r9, r10
                divr    r10, r15, r10
                cvtri   r10, r3
                addo    1, r8, r8
                st      r8, 0x2A98(g7)
                mov     0, r9
loc_7F944:                              # CODE XREF: sub_7F894+88↑j
                addo    1, r9, r9
                st      r9, 0x2A9C(g7)
                subi    r3, r4, r4
loc_7F954:                              # CODE XREF: sub_7F894+3C↑j
                subi    1, r4, r4
                st      r4, 0x6C(g3)
                cmpi    0, r4
                bl      loc_7FB20
                ld      0x1A4(g7), r14
                bbc     0xC, r14, loc_7F994
                bbs     4, r14, loc_7F994
                bbs     0, r14, loc_7F994
                mov     0, r15
                stib    r15, 0x1B2(g7)
                mov     0, r15
                st      r15, 0x19C(g7)
                ld      0x1A4(g7), r15
                clrbit  0xC, r15, r15
                st      r15, 0x1A4(g7)
                b       loc_7F9BC
# ---------------------------------------------------------------------------
loc_7F994:                              # CODE XREF: sub_7F894+D4↑j
                shlo    9, 7, r15
                and     r14, r15, r15
                cmpobne 0, r15, loc_7F9BC
                lda     dword_4010+1, r15
                and     r14, r15, r15
                cmpobe  0, r15, loc_7F9BC
                mov     1, r15
                st      r15, 0x6C(g3)
                b       loc_7FB20
# ---------------------------------------------------------------------------
loc_7F9BC:                              # CODE XREF: sub_7F894+FC↑j
                ldob    also_mode, r15
                lda     mode8, r14
                cmpobe  r14, r15, loc_7F9DC
                lda     mode9, r14
                cmpobne r14, r15, loc_7F9FC
loc_7F9DC:                              # CODE XREF: sub_7F894+138↑j
                ldob    also_sub_mode, r15
                lda     start_ip_add+2, r14
                cmpobe  r14, r15, loc_7FB20
                lda     start_ip_add+3, r14
                cmpobe  r14, r15, loc_7FB20
loc_7F9FC:                              # CODE XREF: sub_7F894+144↑j
                mov     0, r15
                st      r15, 0x6C(g3)
                ld      0x0(g7), r15
                clrbit  0x1D, r15, r15
                st      r15, 0x0(g7)
                ld      0x1A0(g7), g6
                ldos    displacement(g6), g0
                addo    4, sp, sp
                st      r3, -4(sp)
                addo    0x10, sp, sp
                stq     r4, -0x10(sp)
                addo    0x10, sp, sp
                stq     r8, -0x10(sp)
                addo    0x10, sp, sp
                stq     r12, -0x10(sp)
                addo    0x10, sp, sp
                stq     g0, -0x10(sp)
                addo    0x10, sp, sp
                stq     g4, -0x10(sp)
                addo    0x10, sp, sp
                stq     g8, -0x10(sp)
                addo    4, sp, sp
                st      g12, -4(sp)
                addo    4, sp, sp
                st      g13, -4(sp)
                addo    4, sp, sp
                st      g14, -4(sp)
                call    set_motion
                call    set_kamae_ram   # Set Stance Ram
                ld      -4(sp), g14
                subo    4, sp, sp
                ld      -4(sp), g13
                subo    4, sp, sp
                ld      -4(sp), g12
                subo    4, sp, sp
                ldq     -0x10(sp), g8
                subo    0x10, sp, sp
                ldq     -0x10(sp), g4
                subo    0x10, sp, sp
                ldq     -0x10(sp), g0
                subo    0x10, sp, sp
                ldq     -0x10(sp), r12
                subo    0x10, sp, sp
                ldq     -0x10(sp), r8
                subo    0x10, sp, sp
                ldq     -0x10(sp), r4
                subo    0x10, sp, sp
                ld      -4(sp), r3
                subo    4, sp, sp
                shlo    0x18, 1, r15
                st      r15, 0x198(g7)
                call    sub_7FB28
loc_7FB20:                              # CODE XREF: sub_7F894+14↑j
                ret
# End of function sub_7F894
# ---------------------------------------------------------------------------
                ret
# =============== S U B R O U T I N E =======================================
sub_7FB28:                              # CODE XREF: sub_7F894+10↑p
                ld      player_model_y_scale, r4
                st      r4, 0x64(g3)
                lda     0xBF000000, g0
                mov     0, g1
                mov     0, g2
                lda     0x3C23D70A, g4
                mov     0, g5
                mov     0, g6
                call    sub_89BF8
                ldt     0x4C(g3), r4
                stt     r4, 0x30(g3)
                subo    1, 0, r15
                st      r15, 0x6C(g3)
                ret
# End of function sub_7FB28
# ---------------------------------------------------------------------------
float_5:        .float 0.0049999999     # DATA XREF: sub_7F46C+58↑r
float_7:        .float 0.0070000002     # DATA XREF: sub_7F508+70↑r
float_neg_7:    .float -0.0070000002    # DATA XREF: sub_7F760+74↑r
# =============== S U B R O U T I N E =======================================
tpd_move_init:                          # CODE XREF: main_loop+4C↑p
                lda     0x5019BC, r3 # Label from official source
                st      r3, 0x5019B8
                mov     0, r12
                st      r12, 0x5019B0
                st      r12, 0x5019B4
                mov     0, r4
                mov     r4, r5
                stl     r4, (r3)
                ret
# End of function tpd_move_init
# =============== S U B R O U T I N E =======================================
move_tpd_req:                           # CODE XREF: send_st01_sea_thd+40↑p
                cmpobe  0, g0, loc_7FC18 # Label from official source
                lda     0x501A3C, r11
                ld      0x5019B8, r10
                cmpobge r10, r11, loc_7FC18 # Why
                stos    g3, 0x0(r10)
                st      g0, 4(r10)
                stos    g1, 8(r10)
                stos    g2, 10(r10)
                ld      0x5019B0, r14
                addi    1, r14, r15
                st      r15, 0x5019B0
                ldos    (g0), r8
                ldos    2(g0), r9
                ld      0x5019B4, r11
                lda     (GEO_PROGRAM_START+0x1000)(r11), g0
                addo    r9, r11, r11
                st      r11, 0x5019B4
                addo    0x10, r10, r10
                st      r10, 0x5019B8
loc_7FC18:                              # CODE XREF: move_tpd_req↑j
                ret                     # return
# End of function move_tpd_req
# =============== S U B R O U T I N E =======================================
move_tpd_send:                          # CODE XREF: camera_init+50C↑p
                ld      0x5019B0, r8 # Label from official source
                cmpobe  0, r8, loc_7FCA8
                st      g14, mmode
                lda     0x404, g14
                st      g14, 0x40(g10)
                ld      mmode, g14
                lda     GEO_PROGRAM_START+0x1000, r12
                st      r12, (g10)[g12*1]
                ld      0x5019B4, r10
                st      r10, (g10)[g12*1]
                lda     0x5019BC, g1
loc_7FC60:                              # CODE XREF: move_tpd_send+64↓j
                ld      4(g1), r9
                cmpobe  0, r9, loc_7FC84
                ldos    0x0(g1), r3
                ld      off_7FCAC[r3*4], r4
                callx   (r4)
                addo    0x10, g1, g1
                cmpdeco 1, r8, r8
                bl      loc_7FC60
loc_7FC84:                              # CODE XREF: move_tpd_send+48↑j
                st      g14, mmode
                lda     off_1010, g14
                st      g14, 0x100(g10)
                ld      mmode, g14
                st      r3, (g10)[g12*1]
                call    tpd_move_init
loc_7FCA8:                              # CODE XREF: move_tpd_send+8↑j
                ret
# End of function move_tpd_send
# ---------------------------------------------------------------------------
off_7FCAC:      .long tpd_move          # DATA XREF: move_tpd_send+50↑r
                .long transmap_change
# ---------------------------------------------------------------------------
tpd_move:                               # DATA XREF: ROM:off_7FCAC↑o
                lda     0xFFF, r3       # Label from official source
                ld      4(g1), r9
                ldos    8(g1), r4
                ldos    0xA(g1), r5
                ldos    (r9), r11
                shro    1, r11, r10
                addo    4, r9, r9
loc_7FCD0:                              # CODE XREF: ROM:0007FCFC↓j
                ldis    0x0(r9), r12
                ldis    2(r9), r13
                ldis    4(r9), r14
                ldis    6(r9), r15
                addi    r12, r4, r12
                addi    r13, r5, r13
                addi    r14, r4, r14
                addi    r15, r5, r15
                stq     r12, (g10)[g12*1]
                addo    8, r9, r9
                cmpdeco 1, r10, r10
                bl      loc_7FCD0
                bbc     0, r11, loc_7FD18
                ldis    0x0(r9), r12
                ldis    2(r9), r13
                addi    r4, r12, r12
                addi    r5, r13, r13
# ---------------------------------------------------------------------------
                .long 0x9A669C1C        # stl     r12,(g10)[g12*1]
# ---------------------------------------------------------------------------
loc_7FD18:                              # CODE XREF: ROM:0007FD00↑j
                ret
# ---------------------------------------------------------------------------
transmap_change:                        # DATA XREF: ROM:0007FCB0↑o
                ld      4(g1), r9       # Label from official source
                ldos    8(g1), r5
                ldos    (r9), r10
                addo    4, r9, r9
loc_7FD2C:                              # CODE XREF: ROM:0007FD44↓j
                ldos    0x0(r9), r4
                ldos    4(r9), r6
                ldos    6(r9), r7
                stq     r4, (g10)[g12*1]
                addo    8, r9, r9
                cmpdeco 1, r10, r10
                bl      loc_7FD2C
                ret
# =============== S U B R O U T I N E =======================================
ending_movie_int:                       # CODE XREF: ROM:loc_FF60↑p
                ld      fa_camera, r7   # Label from official source
                lda     displacement, r15
                stib    r15, 0x40(r7)
                xor     r4, r4, r4
                mov     r4, r5
                lda     0xC0A00000, r6
                stt     r4, 0x18(r7)
                mov     0, r15
                stis    r15, 0x24(r7)
                shlo    0xF, 1, r15
                stis    r15, 0x26(r7)
                mov     0, r15
                stis    r15, 0x28(r7)
                lda     0xF400, r15
                stis    r15, VECTER_X
                shlo    0xC, 0xF, r15
                stis    r15, VECTER_Y
                lda     0x3F000000, r15
                st      r15, BRIGHT
                lda     displacement, r15
                st      r15, 0x506810
                lda     0x3F000000, r15
                st      r15, 0x506814
                lda     displacement, r15
                st      r15, 0x506818
                shlo    0xB, 1, r15
                stis    r15, 0x50681C
                shlo    0xB, 0x1D, r15
                stis    r15, 0x50681E
                mov     0, r15
                stis    r15, 0x50680C
                ld      0x506804, r15
                clrbit  1, r15, r15
                st      r15, 0x506804
                ld      mod_fa_obj0, r3
                lda     dword_B4690, r15
                st      r15, 0x40(r3)   # mod_fa_obj0_add+0x40
                mov     0, r15
                st      r15, 0x506800
# End of function ending_movie_int
# =============== S U B R O U T I N E =======================================
ending_movie_cont:                      # CODE XREF: ROM:0000FFDC↑p
                ld      debug_flag, r15 # Label from official source
                bbs     5, r15, loc_80638 # if debug_flag bit 5 set, return
                ld      0x506800, r3
                ldos    0x50680C, r14
                cmpobe  4, r14, em_sound4
                ldos    0x50680C, r14
                cmpobe  5, r14, em_sound5
                b       em_sound_ex
# ---------------------------------------------------------------------------
em_sound4:                              # CODE XREF: ending_movie_cont+1C↑j
                ld      0x506800, r3 # Label from official source
                mov     3, r4
                ldos    word_B4404[r4*2], r4
                subo    r4, r3, r3
                cmpobe  0, r3, loc_7FE94
                cmpobe  0xA, r3, loc_7FEA8
                b       em_sound_ex
# ---------------------------------------------------------------------------
loc_7FE94:                              # CODE XREF: ending_movie_cont+48↑j
                lda     0xAE124F, g0    # sd_US03_59_04
                call    check_same_sound
                call    sound_request_u
                b       em_sound_ex
# ---------------------------------------------------------------------------
loc_7FEA8:                              # CODE XREF: ending_movie_cont+4C↑j
                lda     0xAE1250, g0    # sd_US04_11_01
                call    check_same_sound
                call    sound_request_u
                b       em_sound_ex
# ---------------------------------------------------------------------------
em_sound5:                              # CODE XREF: ending_movie_cont+28↑j
                ld      0x506800, r3 # Label from official source
                mov     4, r4
                ldos    word_B4404[r4*2], r4
                subo    r4, r3, r3
                shlo    6, 3, r13
                cmpobne r13, r3, em_sound_ex
                lda     0xAE133D, g0    # sd_bomb_1
                call    check_same_sound
                call    sound_request_u
em_sound_ex:                            # CODE XREF: ending_movie_cont+2C↑j
                ld      0x506800, r3 # Label from official source
                mov     4, r4
                ldos    word_B4404[r4*2], r4
                subo    r4, r3, r3
                cmpobe  2, r3, loc_7FF6C
                ldos    0x50680C, r14
                cmpobne 5, r14, em_rob_ex
                ld      0x506804, r15
                bbc     1, r15, em_rob_ex
                ld      fa_camera, r10
                ldob    winner, r14
                cmpobe  1, r14, loc_7FF4C
                ld      fa_rob0, r7
                ld      0x0(r10), r15
                clrbit  1, r15, r15
                st      r15, 0x0(r10)
                b       loc_7FF60
# ---------------------------------------------------------------------------
loc_7FF4C:                              # CODE XREF: ending_movie_cont+F0↑j
                ld      fa_rob1, r7
                ld      0x0(r10), r15
                clrbit  2, r15, r15
                st      r15, 0x0(r10)
loc_7FF60:                              # CODE XREF: ending_movie_cont+108↑j
                lda     0x1AC, r15
                st      r15, 0x198(r7)
                b       em_rob_ex
# ---------------------------------------------------------------------------
loc_7FF6C:                              # CODE XREF: ending_movie_cont+C4↑j
                ld      fa_camera, r10
                ldob    winner, r14
                cmpobe  1, r14, loc_7FF98
                ld      fa_rob0, r7
                ld      0x0(r10), r15
                setbit  1, r15, r15
                st      r15, 0x0(r10)
                b       loc_7FFAC
# ---------------------------------------------------------------------------
loc_7FF98:                              # CODE XREF: ending_movie_cont+13C↑j
                ld      fa_rob1, r7
                ld      0x0(r10), r15
                setbit  2, r15, r15
                st      r15, 0x0(r10)
loc_7FFAC:                              # CODE XREF: ending_movie_cont+154↑j
                lda     displacement, r4
                lda     displacement, r5
                lda     displacement, r6
                stt     r4, 0x18(r7)
                mov     0, r15
                stis    r15, 0x26(r7)
                ld      0x0(r7), r15
                setbit  0x11, r15, r15
                st      r15, 0x0(r7)
em_rob_ex:                              # CODE XREF: ending_movie_cont+D0↑j
                ldos    0x50680C, r14 # Label from official source
                cmpobne 1, r14, em_rocket_ex
                ld      0x506804, r15
                bbc     1, r15, loc_8002C
                ld      mod_fa_burni, r7 # Cloning cutscene
                lda     0x8C(r7), r7
loc_80000:                              # DATA XREF: variable_diff_init+190↑o
                lda     flt_B4494, r15
loc_80008:                              # DATA XREF: RAM2BASE:00280558↓o
                st      r15, 4(r7)
                addo    4, sp, sp
                st      g13, -4(sp)
                mov     r7, g13
                call    sub_69EC0
                ld      -4(sp), g13
                subo    4, sp, sp
loc_8002C:                              # CODE XREF: ending_movie_cont+1B0↑j
                ld      mod_fa_burni, r7 # Cloning cutscene
                lda     0x8C(r7), r7
                addo    4, sp, sp
                st      g13, -4(sp)
                mov     r7, g13
                call    sub_69F60
                ld      -4(sp), g13
                subo    4, sp, sp
                ldt     0x5C(r7), r4
                ldt     movie_flags, r8
                subr    r4, r8, r8
                subr    r5, r9, r9
                subr    r6, r10, r10
                notbit  0x1F, r8, r8
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                stt     r4, movie_flags
                st      r11, 0x5004E0
                st      r12, 0x5004E4
em_rocket_ex:                           # CODE XREF: ending_movie_cont+1A4↑j
                ldos    0x50680C, r14 # Label from official source
                cmpobe  4, r14, em_deathegg2_ex
                ld      0x506800, r3
                xor     r4, r4, r4
                lda     0x3F000000, r5
                mov     r4, r6
                cvtir   r3, r7
                lda     0xBBA3D70A, r8
                mulr    r7, r8, r7
                addr    r5, r7, r5
                ldos    0x50680C, r14
                cmpobe  3, r14, loc_8019C
                lda     0xFF, r8
                lda     loc_FF00, r9
                lda     0xFF0000, r10
                addo    4, sp, sp
                st      g0, -4(sp)
                call    rand            # Random value stored to g0
                and     r8, g0, r8
                and     r9, g0, r9
                and     r10, g0, r10
                ld      -4(sp), g0
                subo    4, sp, sp
                shro    8, r9, r9
                shro    0x10, r10, r10
                cvtir   r8, r8
                cvtir   r9, r9
                cvtir   r10, r10
                lda     0x39D1B717, r11
                lda     0xBD4CCCCD, r12
                mulr    r8, r11, r8
                mulr    r9, r11, r9
                mulr    r10, r11, r10
                addr    r8, r12, r8
                addr    r9, r12, r9
                addr    r10, r12, r10
                addr    r4, r8, r4
                addr    r5, r9, r5
                addr    r6, r10, r6
loc_8019C:                              # CODE XREF: ending_movie_cont+2D4↑j
                stt     r4, 0x506810
em_deathegg2_ex:                        # CODE XREF: ending_movie_cont+29C↑j
                ldos    0x50680C, r14 # Label from official source
                cmpobe  3, r14, em_scroll3
                ldos    0x50680C, r14
                cmpobe  4, r14, em_scroll4
                ldos    0x50680C, r14
                cmpobe  5, r14, _uk_draw_bg_for_ending
                b       em_scroll_ex
# ---------------------------------------------------------------------------
em_scroll3:                             # CODE XREF: ending_movie_cont+36C↑j
                ld      0x506804, r15 # Label from official source
                bbc     1, r15, em_scroll_ex
                lda     0xFFFF, g0
                mov     0, g1
                lda     CG_DATA_START, g2
                call    change_bg_color # Adds 0x4000 to g1 for color code
                call    bg_col_set
                b       em_scroll_ex
# ---------------------------------------------------------------------------
em_scroll4:                             # CODE XREF: ending_movie_cont+378↑j
                ld      0x506800, r3 # Label from official source
                bbs     0, r3, em_scroll4_light
                mov     0, g0
                b       em_scroll4_go
# ---------------------------------------------------------------------------
em_scroll4_light:                       # CODE XREF: ending_movie_cont+3C0↑j
                lda     0xFFFF, g0      # Label from official source
em_scroll4_go:                          # CODE XREF: ending_movie_cont+3C8↑j
                mov     0, g1           # Label from official source
                lda     CG_DATA_START, g2
                call    change_bg_color # Adds 0x4000 to g1 for color code
                call    bg_col_set
                b       em_scroll_ex
# ---------------------------------------------------------------------------
em_scroll5:                             # CODE XREF: ending_movie_cont+384↑j
_uk_draw_bg_for_ending:                 # Label from official source
                ld      0x506804, r15
                bbc     1, r15, em_scroll_ex
                mov     0, g0
                mov     0, g1
                lda     CG_DATA_START, g2
                call    change_bg_color # Adds 0x4000 to g1 for color code
                call    bg_col_set
                shlo    0xF, 1, r15
                stis    r15, scrB_H_page
                shlo    0xE, 1, r15
                stis    r15, scrB_V_page
                lda     0x1006000, g9
                lda     390, g0         # Outer space texture
                call    dsp_pattern_low
                lda     0x100607C, g9
                lda     390, g0         # Outer space texture
                call    dsp_pattern_low
                lda     0x1004000, g9
                lda     390, g0         # Outer space texture
                call    dsp_pattern_low
                lda     0x100407C, g9
                lda     390, g0         # Outer space texture
                call    dsp_pattern_low
                lda     0x1004000, g9
                lda     497, g0         # Earth in the distance top left corner
                call    dsp_pattern_low
                b       em_scroll_ex
# ---------------------------------------------------------------------------
em_scroll_ex:                           # CODE XREF: ending_movie_cont+388↑j
                ldos    0x50680C, r14 # Label from official source
                cmpobe  2, r14, loc_802E4
                ldos    0x50680C, r14
                cmpobe  3, r14, loc_8033C
                ldos    0x50680C, r14
                cmpobe  4, r14, loc_80384
                b       em_bright_ex
# ---------------------------------------------------------------------------
loc_802E4:                              # CODE XREF: ending_movie_cont+484↑j
                ld      0x506804, r15
                bbc     1, r15, loc_80308
                shlo    0xE, 1, r15
                stis    r15, VECTER_X
                mov     0, r15
                stis    r15, VECTER_Y
loc_80308:                              # CODE XREF: ending_movie_cont+4AC↑j
                ld      0x506800, r3
                mov     1, r4
                ldos    word_B4404[r4*2], r4
                subo    r4, r3, r3
                cvtir   r3, r3
                lda     0x3DA00000, r4
                mulr    r3, r4, r4
                st      r4, BRIGHT
                b       em_bright_ex
# ---------------------------------------------------------------------------
loc_8033C:                              # CODE XREF: ending_movie_cont+490↑j
                ld      0x506804, r15
                bbc     1, r15, em_bright_ex
                lda     displacement, r15
                st      r15, BRIGHT
                mov     0, r15
                stib    r15, RED
                mov     0, r15
                stib    r15, GREEN
                mov     0, r15
                stib    r15, BLUE
                call    chg_pol_color_req
                b       em_bright_ex
# ---------------------------------------------------------------------------
loc_80384:                              # CODE XREF: ending_movie_cont+49C↑j
                ld      0x506804, r15
                bbc     1, r15, em_bright_ex
                mov     0, r15
                stis    r15, VECTER_X
                mov     0, r15
                stis    r15, VECTER_Y
                lda     0x3F800000, r15
                st      r15, BRIGHT
                shlo    7, 1, r15
                stib    r15, RED
                shlo    7, 1, r15
                stib    r15, GREEN
                shlo    7, 1, r15
                stib    r15, BLUE
                call    chg_pol_color_req
em_bright_ex:                           # CODE XREF: ending_movie_cont+4A0↑j
                ldos    0x50680C, r14 # Label from official source
                cmpobe  0, r14, loc_80408
                ldos    0x50680C, r14
                cmpobe  1, r14, loc_8043C
                ldos    0x50680C, r14
                cmpobe  5, r14, loc_804B8
                b       em_camera_ex
# ---------------------------------------------------------------------------
loc_80408:                              # CODE XREF: ending_movie_cont+5A8↑j
                ld      0x506800, r3
                addo    0x1F, 1, r13
                cmpobg  r13, r3, em_camera_ex
                ld      fa_camera, r7
                ldos    0x26(r7), r4
                shlo    9, 1, r5
                subo    r5, r4, r4
                stos    r4, 0x26(r7)
                mov     r4, r3
                bal     scr_b_cam_ang
                b       em_camera_ex
# ---------------------------------------------------------------------------
loc_8043C:                              # CODE XREF: ending_movie_cont+5B4↑j
                ld      0x506804, r15
                bbc     1, r15, loc_80480
                ld      fa_camera, r7
                lda     0x3B4(r7), r7
                lda     dword_B4414, r15
                st      r15, 4(r7)
                addo    4, sp, sp
                st      g13, -4(sp)
                mov     r7, g13
                call    sub_69EC0
                ld      -4(sp), g13
                subo    4, sp, sp
loc_80480:                              # CODE XREF: ending_movie_cont+604↑j
                ld      fa_camera, r7
                lda     0x3B4(r7), r8
                addo    4, sp, sp
                st      g13, -4(sp)
                mov     r8, g13
                call    sub_69F60
                ld      -4(sp), g13
                subo    4, sp, sp
                ldt     0x5C(r8), r4
                stt     r4, 0x18(r7)
                b       em_camera_ex
# ---------------------------------------------------------------------------
loc_804B8:                              # CODE XREF: ending_movie_cont+5C0↑j
                ld      0x506804, r15
                bbc     1, r15, loc_804FC
                ld      fa_camera, r7
                lda     0x3B4(r7), r7
                lda     flt_B4434, r15
                st      r15, 4(r7)
                addo    4, sp, sp
                st      g13, -4(sp)
                mov     r7, g13
                call    sub_69EC0
                ld      -4(sp), g13
                subo    4, sp, sp
loc_804FC:                              # CODE XREF: ending_movie_cont+680↑j
                ld      fa_camera, r7
                lda     0x3B4(r7), r8
                addo    4, sp, sp
                st      g13, -4(sp)
                mov     r8, g13
                call    sub_69F60
                ld      -4(sp), g13
                subo    4, sp, sp
                ldt     0x5C(r8), r4
                stt     r4, 0x18(r7)
                lda     displacement, r8
                mov     r8, r9
                mov     r8, r10
                subr    r4, r8, r12
                subr    r6, r10, r13
                addo    4, sp, sp
                st      g0, -4(sp)
                ld      fa_camera, g0
                notbit  0x1F, r12, r12
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x26(g0)
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                subr    r5, r9, r13
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                stos    r14, 0x24(g0)
                ld      -4(sp), g0
                subo    4, sp, sp
                ldos    0x26(r7), r3
                lda     0x38E, r13
                ld      0x506800, r14
                cmpobg  r13, r14, loc_805D8
                xor     r3, r3, r3
loc_805D8:                              # CODE XREF: ending_movie_cont+790↑j
                bal     scr_b_cam_ang
em_camera_ex:                           # CODE XREF: ending_movie_cont+5C4↑j
                ld      0x506804, r15 # Label from official source
                clrbit  1, r15, r15
                st      r15, 0x506804
                ld      0x506800, r3
                addo    1, r3, r3
                st      r3, 0x506800
                ldos    0x50680C, r5
                ldos    word_B4404[r5*2], r4
                cmpobne r3, r4, loc_80638 # return
                addo    1, r5, r5
                stos    r5, 0x50680C
                ld      0x506804, r15
                setbit  1, r15, r15
                st      r15, 0x506804
loc_80638:                              # CODE XREF: ending_movie_cont+8↑j
                ret                     # return
# End of function ending_movie_cont
# =============== S U B R O U T I N E =======================================
ending_movie_disp:                      # CODE XREF: ROM:0002255C↑p
                lda     win_down, g0    # Label from official source
                call    set_window      # g0 = two shorts
                ld      0x506800, r3
                ldos    0x50680C, r14
                cmpobne 1, r14, emd_rocket_ex
                ldt     movie_flags, r4
                ld      0x5004E0, r7
                ld      0x5004E4, r8
                shlo    0xE, 1, r10
                addo    r8, r10, r8
                and     7, r3, r10
                ld      metal_rocket_rear_exhaust_anim[r10*4], r10
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x3C23D70A, r15
                st      r15, (g11)[g12*1]
                lda     0x3C23D70A, r15
                st      r15, (g11)[g12*1]
                lda     0x3C23D70A, r15
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                mov     3, g0
loc_80700:                              # DATA XREF: MAIN_DATA:024CDFE5↓o
                call    set_mmode
                mov     0, g1
                lda     230, g0         # Lunar Fox
                call    set_obj
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                lda     0x410F78D5, r15
                st      r15, (g11)[g12*1]
                lda     0x403851EC, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     231, g0         # Lunar Fox Cockpit
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                mov     1, g0
                call    set_mmode
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x41200000, r15
                st      r15, (g11)[g12*1]
                lda     0xC1200000, r15
                st      r15, (g11)[g12*1]
                lda     0xC1200000, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     0xBF12CC2F, r15
                st      r15, (g11)[g12*1]
                lda     0x3FE58423, r15
                st      r15, (g11)[g12*1]
                lda     0xBEA981D6, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     (r10), g0
                call    set_obj
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     0x3F12CC2F, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                lda     0x3F7E42C6, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     (r10), g0
                call    set_obj
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     0x3F12CC2F, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                lda     0xBF7E42C6, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     (r10), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
emd_rocket_ex:                          # CODE XREF: ending_movie_disp+1C↑j
                ldos    0x50680C, r14 # Label from official source
                cmpobne 5, r14, emd_rocket2_ex
                shlo    0xE, 1, r4
                shlo    0xF, 1, r6
                ld      0x506800, r3
                and     7, r3, r5
                ld      metal_rocket_rear_exhaust_anim[r5*4], r5
                addo    4, sp, sp
                st      g7, -4(sp)
                ldob    winner, r14
                cmpobe  1, r14, loc_808A8
                ld      fa_rob0, g7
                b       loc_808B0
# ---------------------------------------------------------------------------
loc_808A8:                              # CODE XREF: ending_movie_disp+25C↑j
                ld      fa_rob1, g7
loc_808B0:                              # CODE XREF: ending_movie_disp+268↑j
                lda     displacement, r8
                lda     displacement, r9
                lda     displacement, r10
                stt     r8, 0x18(g7)
                mov     0, r15
                stis    r15, 0x26(g7)
                call    rob_disp
                ld      -4(sp), g7
                subo    4, sp, sp
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     0xBE0F5C29, r15
                st      r15, (g11)[g12*1]
                lda     0xBECCCCCD, r15
                st      r15, (g11)[g12*1]
                lda     0xC1233333, r15
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                mov     3, g0
                call    set_mmode
                mov     0, g1
                lda     230, g0         # Lunar Fox Jets
                call    set_obj
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                lda     0x410F78D5, r15
                st      r15, (g11)[g12*1]
                lda     0x403851EC, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     231, g0         # Lunar Fox Cockpit
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                mov     1, g0
                call    set_mmode
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x41200000, r15
                st      r15, (g11)[g12*1]
                lda     0xC1200000, r15
                st      r15, (g11)[g12*1]
                lda     0xC1200000, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     0xBF12CC2F, r15
                st      r15, (g11)[g12*1]
                lda     0x3FE58423, r15
                st      r15, (g11)[g12*1]
                lda     0xBEA981D6, r15
                st      r15, (g11)[g12*1]
loc_80A10:                              # DATA XREF: ROM:000827F2↓o
                mov     0, g1
                lda     (r5), g0
                call    set_obj
loc_80A1C:                              # DATA XREF: ROM:0008954D↓o
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     0x3F12CC2F, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                lda     0x3F7E42C6, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     (r5), g0
                call    set_obj
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                lda     0x3F12CC2F, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                lda     0xBF7E42C6, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     (r5), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
emd_rocket2_ex:                         # CODE XREF: ending_movie_disp+228↑j
                ldos    0x50680C, r14 # Label from official source
                cmpoble 4, r14, emd_deathegg2_ex
                ldt     0x506810, r4
                ldos    0x50681C, r7
                ldos    0x50681E, r8
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                mov     0, g1
                lda     3545, g0        # Death Egg 2 model
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
emd_deathegg2_ex:                       # CODE XREF: ending_movie_disp+46C↑j
                ldos    0x50680C, r14 # Label from official source
                cmpobne 3, r14, emd_ring_ex
                ld      0x506800, r3
                mov     2, r4
                ldos    word_B4404[r4*2], r4
                subo    r4, r3, r3
                cvtir   r3, r4
                lda     0x3DCCCCCD, r5
                lda     0x3F800000, r6
                mulr    r4, r5, r5
                addr    r5, r6, r9
                lda     0xBF000000, r5
                lda     0x41200000, r6
                mulr    r4, r5, r5
                addr    r5, r6, r10
                ldt     0x506810, r4
                ldos    0x50681C, r7
                ldos    0x50681E, r8
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                mov     0, g1
                lda     5079, g0        # Death Egg Explosion Ring Frame 1
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                mov     0, g1
                lda     5079, g0        # Death Egg Explosion Ring Frame 1
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
emd_ring_ex:                            # CODE XREF: ending_movie_disp+4EC↑j
                ldos    0x50680C, r14 # Label from official source
                cmpobne 4, r14, emd_cra_ex
                ld      0x506800, r3
                mov     3, r4
                ldos    word_B4404[r4*2], r4
                subo    r4, r3, r3
                shro    2, r3, r4
                lda     0x3F, r5
                and     r5, r4, r4
                ldos    death_egg_exploding_anim[r4*2], r4
                lda     0x3F333333, r5
                shlo    0xC, 5, r6
                ldt     0x506810, r8
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                mov     0, g1
                lda     (r4), g0
                call    set_obj
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                mov     0, g1
                lda     (r4), g0
                call    set_obj
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                mov     0, g1
                lda     (r4), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
emd_cra_ex:                             # CODE XREF: ending_movie_disp+614↑j
                ldos    0x50680C, r14 # Label from official source
                cmpobne 4, r14, emd_blast_ex
                ld      0x506800, r3
                mov     3, r4
                ldos    word_B4404[r4*2], r4
                subo    r4, r3, r3
                lda     0x96, r4
                shlo    7, 0x1F, r5
                mulo    r3, r4, r4
                addo    r4, r5, r4
                lda     0x10802121, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0x41700000, r5
                mulr    r4, r5, r4
                lda     0x3FA66666, r5
                shlo    0xC, 3, r6
                mulo    r3, r6, r7
                ldt     0x506810, r8
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                subi    r7, 0, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     854, g0         # Death Egg Explosion Fire Frame 1
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                mov     0, g1
                lda     855, g0         # Death Egg Explosion Fire Frame 2
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                subi    r7, 0, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     856, g0         # Death Egg Explosion Fire Frame 3
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                mov     0, g1
                lda     857, g0         # Death Egg Explosion Fire Frame 4
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
emd_blast_ex:                           # CODE XREF: ending_movie_disp+704↑j
                ret                     # Label from official source
# End of function ending_movie_disp
# =============== S U B R O U T I N E =======================================
scr_b_cam_ang:                          # CODE XREF: ending_movie_cont+5F4↑p
                shlo    0xF, 1, r15     # Label from official source
                stis    r15, scrB_H_page
                lda     0x1008800, r6
                shlo    6, 1, r4
                divo    r4, r3, r3
                shlo    9, 1, r5
loc_80F70:                              # CODE XREF: scr_b_cam_ang+2C↓j
                stos    r3, (r6)
                addo    2, r6, r6
                cmpdeco 1, r5, r5
                bl      loc_80F70
                bx      (g14)
# End of function scr_b_cam_ang
# ---------------------------------------------------------------------------
loc_80F84:                              # DATA XREF: ROM:000B469C↓o
                stq     g0, AUDIO_3
                st      g14, 0x50EFE8
                lda     ENDING_INT_1, g0
                bal     break_point_display
                ldq     AUDIO_3, g0
                ld      0x50EFE8, g14
                lda     loc_80FBC, r15
                st      r15, 0xC(g6)
loc_80FBC:                              # DATA XREF: ROM:00080FB0↑o
                stq     g0, AUDIO_3
                st      g14, 0x50EFE8
                lda     ENDING_CONT_1, g0
                bal     break_point_display
                ldq     AUDIO_3, g0
                ld      0x50EFE8, g14
                lda     0x1000A14, g9
                ldis    frame_counter, g0
                balx    debug_disp_int, r14
# ---------------------------------------------------------------------------
aEndingCont:    .asciz "ending_cont"
# ---------------------------------------------------------------------------
                ret
# ---------------------------------------------------------------------------
loc_81010:                              # DATA XREF: ROM:000B46A0↓o
                lda     0x1000A94, g9
                ldis    frame_counter, g0
                balx    debug_disp_int, r14
# ---------------------------------------------------------------------------
aEndingDsp_0:   .asciz "ending_dsp"
                .byte 0
# ---------------------------------------------------------------------------
                ret
# =============== S U B R O U T I N E =======================================
sub_81038:                              # CODE XREF: ADV_MOVIE_INT+20↑p
                ld      fa_rob0, r3
                ld      fa_rob1, r7
                mov     0, r11
                stos    r11, 0x2080(r3)
                stos    r11, 0x2080(r7)
                stos    r11, 0x2082(r3)
                stos    r11, 0x2082(r7)
                stos    r11, 0x206C(r3)
                stos    r11, 0x206C(r7)
                st      r11, 0x2070(r3)
                st      r11, 0x2070(r7)
                lda     character_spin_mot_objects, r11
                addo    0x1F, 1, r15
                ldob    0x1B0(r3), r4
                mulo    r15, r4, r6
                addo    r6, r11, r12
                ldob    0x1B0(r7), r4
                mulo    r15, r4, r6
                addo    r6, r11, r13
                ldos    0x0(r12), r4
                stos    r4, 0x2084(r3)
                ldos    2(r12), r4
                stos    r4, 0x2086(r3)
                ldos    0x0(r13), r4
                stos    r4, 0x2084(r7)
                ldos    2(r13), r4
                stos    r4, 0x2086(r7)
                ld      4(r12), r4
                st      r4, 0x20EC(r3)
                ld      4(r13), r4
                st      r4, 0x20EC(r7)
                lda     0x2088(r3), r3
                lda     0x2088(r7), r7
                ldt     8(r12), r4
                stt     r4, 0x30(r3)
                ldt     8(r13), r4
                stt     r4, 0x30(r7)
                ldt     0x14(r12), r4
                stt     r4, 0x3C(r3)
                ldt     0x14(r13), r4
                stt     r4, 0x3C(r7)
                ret
# End of function sub_81038
# ---------------------------------------------------------------------------
                .long 0
                .long 0
                .long 0
character_spin_mot_objects:.short 385   # DATA XREF: sub_81038+54↑o
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 407              # Tails spindash non-ball
                .short 412              # Tails spindash ball
                .float  0.875
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 360              # Knuckles spindash non-ball
                .short 359              # Knuckles spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 1175             # Espio spin non-blur
                .short 1174             # Espio spin blur
                .float  1.7
                .float  0.99900001
                .float  0.99900001
                .float  0.99900001
                .float  0.1
                .float  0.1
                .float  0.2
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 3750             # Super Sonic spindash non-ball
                .short 3749             # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .short 385              # Sonic spindash non-ball
                .short 196              # Sonic spindash ball
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  6.2545526e-36
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  9.9695158e-36
                .float  0.875
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  6.2545526e-36
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  6.2545526e-36
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  6.2545526e-36
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  6.2545526e-36
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  2.4642781e-35
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.7681543e-35
                .float  1.7
                .float  0.99900001
                .float  0.99900001
                .float  0.99900001
                .float  0.1
                .float  0.1
                .float  0.2
                .float  6.2545526e-36
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  6.2545526e-36
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  6.2545526e-36
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  6.2545526e-36
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  6.2545526e-36
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  4.0689746e-30
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
                .float  1.8000297e-38
                .float  1.0
                .float  0.98000002
                .float  0.98000002
                .float  0.98000002
                .float  0.003
                .float  0.003
                .float  0.003
# =============== S U B R O U T I N E =======================================
spin_attack_cnt:                        # CODE XREF: camera_init:loc_205B0↑p
                lda     0x2088(g7), g3  # Label from official source
                ldt     0x24(g3), g0
                ld      debug_flag, r7
                bbc     2, r7, loc_817D4
                bbs     5, r7, loc_81844
loc_817D4:                              # CODE XREF: spin_attack_cnt+14↑j
                ldos    0x206C(g7), r3
                ldos    0x206E(g7), r4
                ldos    0x2080(g7), r6
                addo    r3, r4, r4
                addo    r4, r6, r6
                stos    r4, 0x206E(g7)
                stos    r6, 0x2080(g7)
                shlo    2, r6, r6
                stos    r6, 0x2082(g7)
                ld      0x2070(g7), r3
                cmpdeci 0, r3, r3
                st      r3, 0x2070(g7)
                bl      loc_81834
                mov     0, r15
                stis    r15, 0x206C(g7)
loc_81834:                              # CODE XREF: spin_attack_cnt+6C↑j
                ldt     0x30(g3), g0
                ldt     0x3C(g3), g4
                call    pendulum_3axis_cnt
                stt     g0, 0x24(g3)
loc_81844:                              # CODE XREF: spin_attack_cnt+18↑j
                ret
# End of function spin_attack_cnt
# =============== S U B R O U T I N E =======================================
spin_attack_cnt_nml_dsp:                # CODE XREF: rob_disp+1B8↑p
                ld      player_model_y_scale, r4 # Label from official source
                addr    r4, g0, r8
                addr    r4, g1, r9
                addr    r4, g2, r10
                stt     r8, 0x2074(g7)
                lda     0xFFFFE000, r4
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      frame_counter, r7
                bbs     0, r7, loc_818E4
                ldos    0x2080(g7), r3
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                shlo    0xF, 1, r4
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ldos    0x2084(g7), r4
                mov     0, g1
                lda     (r4), g0
                call    set_obj
                b       loc_81910
# ---------------------------------------------------------------------------
loc_818E4:                              # CODE XREF: spin_attack_cnt_nml_dsp+54↑j
                ldos    0x2082(g7), r3
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ldos    0x2086(g7), r4
                mov     0, g1
                lda     (r4), g0
                call    set_obj
loc_81910:                              # CODE XREF: spin_attack_cnt_nml_dsp+98↑j
                ret
# End of function spin_attack_cnt_nml_dsp
# =============== S U B R O U T I N E =======================================
spin_attack_cnt_esp_dsp:                # CODE XREF: rob_disp:sp_atk_dsp_esp↑p
                ld      0x509508, r14 # Label from official source
                lda     0x2F005E5E, r15
                st      r15, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                cvtri   r8, r8
                cvtri   r10, r10
                lda     0x3FC00000, r3
                lda     0x12802525, r15
                st      r15, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      player_model_y_scale, r5
                lda     0x12802525, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                stt     r4, 0x2074(g7)
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                mov     0, r4
                ld      0x20EC(g7), r5
                setbit  0x1F, r5, r5
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      frame_counter, r7
                bbs     0, r7, loc_81A18
                ldos    0x2080(g7), r3
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ldos    0x2084(g7), r4
                mov     0, g1
                lda     (r4), g0
                call    set_obj
                b       loc_81A44
# ---------------------------------------------------------------------------
loc_81A18:                              # CODE XREF: spin_attack_cnt_esp_dsp+D0↑j
                ldos    0x2082(g7), r3
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ldos    0x2086(g7), r4
                mov     0, g1
                lda     (r4), g0
                call    set_obj
loc_81A44:                              # CODE XREF: spin_attack_cnt_esp_dsp+100↑j
                ret
# End of function spin_attack_cnt_esp_dsp
# =============== S U B R O U T I N E =======================================
sub_81A48:                              # CODE XREF: play_motion+B04↑p
                ldob    3(g4), r4
                cmpo    1, r4
                be      loc_81ABC
                cmpo    2, r4
                be      loc_81AEC
                mov     1, r15
                st      r15, 0x2068(g7)
                mov     0, r4
                stos    r4, 0x2080(g7)
                stos    r4, 0x2082(g7)
                call    sub_81AFC
                ldos    4(g4), r4
                stos    r4, 0x206E(g7)
                ldos    6(g4), r4
                stos    r4, 0x206C(g7)
                ldob    8(g4), r4
                st      r4, 0x2070(g7)
                lda     0x2088(g7), g3
                movt    0, g0
                ldt     9(g4), g4
                call    sub_89BF8
                b       loc_81AF8
# ---------------------------------------------------------------------------
loc_81ABC:                              # CODE XREF: sub_81A48+8↑j
                ldos    6(g4), r4
                stos    r4, 0x206C(g7)
                ldob    8(g4), r4
                st      r4, 0x2070(g7)
                lda     0x2088(g7), g3
                ldt     0x24(g3), g0
                ldt     9(g4), g4
                call    sub_89BF8
                b       loc_81AF8
# ---------------------------------------------------------------------------
loc_81AEC:                              # CODE XREF: sub_81A48+10↑j
                mov     0, r15
                st      r15, 0x2068(g7)
loc_81AF8:                              # CODE XREF: sub_81A48+70↑j
                ret
# End of function sub_81A48
# =============== S U B R O U T I N E =======================================
sub_81AFC:                              # CODE XREF: ROM:00007218↑p
                ld      fa_rob0, r3
                ld      fa_rob1, r7
                movt    0, r4
                mov     0, r8
                lda     sub_81CD8, r9
                lda     0x323, r10
                st      r4, 0x2740(r3)  # P1_PARTS+0x2740
                st      r4, 0x2740(r7)  # P2_PARTS+0x2740
                lda     0x21A0(r3), r3
                lda     0x21A0(r7), r7
                shlo    3, 9, r14
                mov     0, r11
loc_81B48:                              # CODE XREF: sub_81AFC+80↓j
                stl     r8, 0x0(r3)
                stl     r8, 0x0(r7)
                stt     r4, 8(r3)
                stt     r4, 8(r7)
                stt     r4, 0x14(r3)
                stt     r4, 0x14(r7)
                stt     r4, 0x20(r3)
                stt     r4, 0x20(r7)
                stt     r4, 0x38(r3)
                stt     r4, 0x38(r7)
                addo    r14, r3, r3
                addo    r14, r7, r7
                cmpinco 0x13, r11, r11
                bg      loc_81B48
                ret
# End of function sub_81AFC
# =============== S U B R O U T I N E =======================================
spin_smoke_cnt:                         # CODE XREF: camera_init:loc_205C0↑p
                lda     0x21A0(g7), g3  # Label from official source
                ld      0x2740(g7), r3
                mov     0, r11
                addo    0x1F, 1, r13
                shlo    3, 9, r14
                mov     0, r4
                ld      0x20EC(g7), r5
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                notbit  0x1F, r4, r15
                st      r15, (g11)[g12*1]
                notbit  0x1F, r5, r15
                st      r15, (g11)[g12*1]
                notbit  0x1F, r4, r15
                st      r15, (g11)[g12*1]
loc_81BDC:                              # CODE XREF: spin_smoke_cnt+138↓j
                bbc     r11, r3, loc_81CB4
                ld      0x0(g3), r4
                cmpi    r13, r4
                clrbit  r11, r3, r3
                ble     loc_81CB4
                setbit  r11, r3, r3
                ld      4(g3), r4
                callx   (r4)
                ldt     0x20(g3), r4
                ldt     0x14(g3), r8
                addr    r4, r8, r8
                addr    r5, r9, r9
                addr    r6, r10, r10
                stt     r8, 0x14(g3)
                ldt     8(g3), r4
                addr    r4, r8, r4
                addr    r5, r9, r5
                addr    r6, r10, r6
                stt     r4, 8(g3)
                ld      0x0(g3), r4
                divo    0x19, r4, r4
                lda     0x323, r7
                addo    r4, r7, r7
                stos    r7, 0x44(g3)
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ldt     8(g3), r4
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x8001010, r15
                st      r15, (g11)[g12*1]
                ldt     0x2C(g3), r4
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ldos    0x44(g3), r7
                mov     0, g1
                lda     (r7), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ld      0x0(g3), r4
                addo    1, r4, r4
                st      r4, 0x0(g3)
loc_81CB4:                              # CODE XREF: spin_smoke_cnt:loc_81BDC↑j
                addo    r14, g3, g3
                cmpinco 0x13, r11, r11
                bg      loc_81BDC
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                st      r3, 0x2740(g7)
                ret
# End of function spin_smoke_cnt
# =============== S U B R O U T I N E =======================================
sub_81CD8:                              # DATA XREF: sub_81AFC+18↑o
                ldt     0x14(g3), r4
                lda     0xBD75C28F, r14
                mulr    r14, r4, r4
                mulr    r14, r5, r5
                mulr    r14, r6, r6
                ldt     0x38(g3), r8
                addr    r4, r8, r4
                addr    r5, r9, r5
                addr    r6, r10, r6
                stt     r4, 0x20(g3)
                ld      0x0(g3), r7
                cvtir   r7, r7
                lda     0x40C00000, r15
                divr    r15, r7, r7
                lda     0x3FC00000, r8
                lda     0x3FC00000, r9
                lda     0x3FC00000, r10
                addr    r7, r8, r8
                addr    r7, r9, r9
                addr    r7, r10, r10
                stt     r8, 0x2C(g3)
                ret
# End of function sub_81CD8
# =============== S U B R O U T I N E =======================================
sub_81D44:                              # DATA XREF: sub_81F2C+B8↓o
                ldt     0x14(g3), r4
                lda     0xBD4CCCCD, r14
                mulr    r14, r4, r4
                mulr    r14, r5, r5
                mulr    r14, r6, r6
                ldt     0x38(g3), r8
                addr    r4, r8, r4
                addr    r5, r9, r5
                addr    r6, r10, r6
                stt     r4, 0x20(g3)
                ld      0x0(g3), r7
                cvtir   r7, r7
                lda     0x40C00000, r15
                divr    r15, r7, r7
                lda     0x3F99999A, r8
                lda     0x3F99999A, r9
                lda     0x3F99999A, r10
                addr    r7, r8, r8
                addr    r7, r9, r9
                addr    r7, r10, r10
                stt     r8, 0x2C(g3)
                ret
# End of function sub_81D44
# =============== S U B R O U T I N E =======================================
sub_81DB0:                              # DATA XREF: sub_81FF4+B8↓o
                ldt     0x14(g3), r4
                lda     0xBD23D70A, r14
                mulr    r14, r4, r4
                mulr    r14, r5, r5
                mulr    r14, r6, r6
                ldt     0x38(g3), r8
                addr    r4, r8, r4
                addr    r5, r9, r5
                addr    r6, r10, r6
                stt     r4, 0x20(g3)
                ld      0x0(g3), r7
                cvtir   r7, r7
                lda     0x40C00000, r15
                divr    r15, r7, r7
                lda     0x3F800000, r8
                lda     0x3F800000, r9
                lda     0x3F800000, r10
                addr    r7, r8, r8
                addr    r7, r9, r9
                addr    r7, r10, r10
                stt     r8, 0x2C(g3)
                ret
# End of function sub_81DB0
# =============== S U B R O U T I N E =======================================
spin_smoke_trg:                         # CODE XREF: camera_init+1490↑p
# FUNCTION CHUNK AT 000820BC SIZE 0000000C BYTES
                ld      0x2740(g7), r3  # Label from official source
                mov     0, r11
loc_81E28:                              # CODE XREF: spin_smoke_trg+2A4↓j
                bbs     r11, r3, loc_820BC
                setbit  r11, r3, r3
                st      r3, 0x2740(g7)
                shlo    3, 9, r15
                mulo    r15, r11, r4
                lda     0x21A0(g7), r3
                addo    r4, r3, r3
                ld      frame_counter, r7
                mov     0, r15
                st      r15, 0x0(r3)
                and     3, r7, r7
                ld      off_820C8[r7*4], r4
                bx      (r4)
# End of function spin_smoke_trg
# =============== S U B R O U T I N E =======================================
sub_81E6C:                              # DATA XREF: ROM:off_820C8↓o
                movt    0, r4
                stt     r4, 0x20(r3)
                ldt     0x1F4(g7), r4
                stt     r4, 8(r3)
                movl    0, r4
                lda     0xBE4CCCCD, r6
                ldos    0x26(g7), r7
                movl    0, r8
                lda     0xBB03126F, r10
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x14(r3)
                stt     r8, 0x38(r3)
                lda     sub_81CD8, r15
                st      r15, 4(r3)
                b       loc_820C4
# End of function sub_81E6C
# =============== S U B R O U T I N E =======================================
sub_81F2C:                              # DATA XREF: ROM:000820CC↓o
                movt    0, r4
                stt     r4, 0x20(r3)
                ldt     0x1F4(g7), r4
                stt     r4, 8(r3)
                mov     0, r4
                lda     0x3CA3D70A, r5
                lda     0xBE4CCCCD, r6
                ldos    0x26(g7), r7
                movl    0, r8
                lda     0xBB03126F, r10
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x14(r3)
                stt     r8, 0x38(r3)
                lda     sub_81D44, r15
                st      r15, 4(r3)
                b       loc_820C4
# End of function sub_81F2C
# =============== S U B R O U T I N E =======================================
sub_81FF4:                              # DATA XREF: ROM:000820D0↓o
                movt    0, r4
                stt     r4, 0x20(r3)
                ldt     0x1F4(g7), r4
                stt     r4, 8(r3)
                mov     0, r4
                lda     0x3D23D70A, r5
                lda     0xBE4CCCCD, r6
                ldos    0x26(g7), r7
                movl    0, r8
                lda     0xBB03126F, r10
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x14(r3)
                stt     r8, 0x38(r3)
                lda     sub_81DB0, r15
                st      r15, 4(r3)
                b       loc_820C4
# End of function sub_81FF4
# ---------------------------------------------------------------------------
# START OF FUNCTION CHUNK FOR spin_smoke_trg
loc_820BC:                              # CODE XREF: spin_smoke_trg:loc_81E28↑j
                cmpinco 0x13, r11, r11
                bg      loc_81E28
loc_820C4:                              # CODE XREF: sub_81E6C+BC↑j
                ret
# END OF FUNCTION CHUNK FOR spin_smoke_trg
# ---------------------------------------------------------------------------
off_820C8:      .long sub_81E6C         # DATA XREF: spin_smoke_trg+44↑r
                .long sub_81F2C
                .long sub_81FF4
                .long sub_81E6C
SONIC_MOVES:    .byte 0xE               # DATA XREF: ROM:MOVESET_ARRAY↑o
                .short 1
                .long byte_821C0
                .byte 0xE
                .short 2
                .long byte_823FA
                .byte 0xE
                .short 3
                .long byte_8264D
                .byte 0xE
                .short 5
                .long byte_8258A
                .byte 0xE
                .short 6
                .long byte_826C1
                .byte 0xE
                .short 7
                .long byte_8271B
                .byte 0xE
                .short 0
                .long byte_828D4
                .byte 0xE
                .short 0x201
                .long byte_82906
                .byte 0xE
                .short 0x202
                .long byte_82917
                .byte 0xE
                .short 0x401
                .long byte_82971
                .byte 0xE
                .short 0x402
                .long byte_82979
                .byte 0xE
                .short 0x101
                .long byte_8298A
                .byte 0xE
                .short 0x102
                .long byte_829DA
                .byte 0xE
                .short 0x301
                .long byte_829EB
                .byte 0xE
                .short 0x302
                .long byte_82A69
                .byte 0xE
                .short 0x205
                .long byte_82906
                .byte 0xE
                .short 0x206
                .long byte_82917
                .byte 0xE
                .short 0x405
                .long byte_82971
                .byte 0xE
                .short 0x406
                .long byte_82979
                .byte 0xE
                .short 0x105
                .long byte_8298A
                .byte 0xE
                .short 0x106
                .long byte_829DA
                .byte 0xE
                .short 0x305
                .long byte_829EB
                .byte 0xE
                .short 0x306
                .long byte_82A69
                .byte 0xE
                .short 0x203
                .long byte_82906
                .byte 0xE
                .short 0x403
                .long byte_82971
                .byte 0xE
                .short 0x103
                .long byte_8298A
                .byte 0xE
                .short 0x303
                .long byte_82A41
                .byte 0xE
                .short 0x207
                .long byte_82906
                .byte 0xE
                .short 0x407
                .long byte_82971
                .byte 0xE
                .short 0x107
                .long byte_8298A
                .byte 0xE
                .short 0x307
                .long byte_82AB1
                .byte 0xE
                .short 0x607
                .long byte_82AD0
                .byte 0xE
                .short 0x300
                .long byte_82AC9
                .byte 0x10
byte_821C0:     .byte 0x27              # DATA XREF: ROM:000820DB↑o
                .long byte_821D0
                .byte 8
                .byte 0x1D
                .byte 5
                .byte 0xDB
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_821D0:     .byte 0xF               # DATA XREF: ROM:000821C1↑o
                .long byte_8221F
                .byte 8
                .byte 0x1E
                .byte 0xF
                .byte 0xE7
                .byte 0x21
                .byte 8
                .byte 0
                .byte 7
                .byte 0
                .byte 5
                .byte 9
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0xF
                .long byte_821FC
                .byte 0x1B
                .byte 0x66
                .byte 0x66
                .byte 0x26
                .byte 0x40
                .byte 0x34
                .byte 5
                .byte 5
                .byte 0x18
                .byte 1
                .byte 0
                .byte 0xC
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_821FC:     .byte 0xF               # DATA XREF: ROM:000821E8↑o
                .long byte_8220C
                .byte 0x2A
                .byte 0xE
                .byte 5
                .byte 0xE0
                .byte 0
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8220C:     .byte 0xF               # DATA XREF: ROM:000821FD↑o
                .long byte_8221F
                .byte 0x1A
                .byte 0
                .byte 0
                .byte 0x40
                .byte 0x40
                .byte 5
                .byte 0x1B
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8221F:     .byte 0x27              # DATA XREF: ROM:000821D1↑o
                .long byte_8222F
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 5
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8222F:     .byte 0x27              # DATA XREF: ROM:00082220↑o
                .long byte_82244
                .byte 7
                .byte 0
byte_82236:     .byte 0xD               # DATA XREF: ROM:000825A9↓o
                .byte 0x3C
                .byte 0x23
                .byte 8
                .byte 0
                .byte 5
                .byte 0xB2
                .byte 1
                .byte 0
                .byte 0
                .long 0
byte_82244:     .byte 0x28              # DATA XREF: ROM:00082230↑o
                .long byte_82251
                .byte 0xBF
                .byte 0x22
                .byte 8
                .byte 0
                .long byte_822BF
byte_82251:     .byte 0xF               # DATA XREF: ROM:00082245↑o
                .long byte_82270
                .byte 1
                .byte 0
                .byte 1
                .byte 4
                .byte 0x1A
                .byte 1
                .byte 0x10
                .byte 1
                .byte 1
                .byte 0x10
                .byte 0
                .byte 1
                .byte 0x10
                .byte 2
                .byte 1
                .byte 0
                .byte 2
                .byte 5
                .byte 0
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82270:     .byte 0xF               # DATA XREF: ROM:00082252↑o
                .long byte_82283
                .byte 4
                .byte 8
                .byte 0
                .byte 0
                .byte 1
                .byte 5
                .byte 0xE4
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82283:     .byte 0xF               # DATA XREF: ROM:00082271↑o
                .long byte_822BA
                .byte 1
                .byte 0x10
                .byte 1
                .byte 0xD
                .long byte_82299
                .byte 5
                .byte 0x92
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82299:     .byte 0xE               # DATA XREF: ROM:0008228C↑o
                .byte 1
                .byte 0
                .long byte_822A5
                .byte 0x36
                .long byte_82299
byte_822A5:     .byte 0xF               # DATA XREF: ROM:0008229C↑o
                .long byte_822B9
                .byte 2
                .byte 5
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0xE6
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_822B9:     .byte 0x10              # DATA XREF: ROM:000822A6↑o
byte_822BA:     .byte 0x11              # DATA XREF: ROM:00082284↑o
                .long byte_822BF
byte_822BF:     .byte 0xF               # DATA XREF: ROM:0008224D↑o
                .long byte_822DF
                .byte 4
                .byte 8
                .byte 0
                .byte 0x10
                .byte 0
                .byte 4
                .byte 0x10
                .byte 1
                .byte 0
                .byte 0
                .byte 1
                .byte 0x10
                .byte 0
                .byte 0xD
                .byte 0xEF
                .byte 0x22
                .byte 8
                .byte 0
                .byte 5
                .byte 0xBF
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_822DF:     .byte 0xF               # DATA XREF: ROM:000822C0↑o
                .long SNC_PUNCH00_DATA
                .byte 2                 # opponent face
                .byte 4
                .byte 5
                .byte 0x1B
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0xE
                .byte 1
                .byte 0
                .long byte_822FB
                .byte 0x36
                .byte 0xEF
                .byte 0x22
                .byte 8
                .byte 0
byte_822FB:     .byte 0x12              # DATA XREF: ROM:000822F2↑o
                .byte 8
                .byte 8
                .byte 0xA
                .byte 0x1D
                .byte 8
                .byte 8
                .byte 0x14
                .byte 0xD
                .byte 0x11
                .byte 0x23
                .byte 8
                .byte 0
                .byte 5
                .byte 0x58
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82311:     .byte 0xE               # DATA XREF: ROM:00082319↓o
                .byte 1
                .byte 0
                .long byte_8231D
                .byte 0x36
                .long byte_82311
byte_8231D:     .byte 0x12              # DATA XREF: ROM:00082314↑o
                .byte 8
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 8
                .byte 8
                .byte 0
                .byte 5
                .byte 0x58
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
SNC_PUNCH00_DATA:.byte 0xD              # DATA XREF: ROM:000822E0↑o
                .long byte_8233C
                .byte 5
                .short 0xF9             # SNC_PUNCH00
                .byte 0
                .byte 0x26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8233C:     .byte 0xE               # DATA XREF: ROM:0008232F↑o
                .byte 1
                .byte 0
                .long byte_82367
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_82356
                .byte 0xE
                .byte 7
                .byte 0
                .long byte_8238C
                .byte 0x36
                .long byte_8233C
byte_82356:     .byte 0x12              # DATA XREF: ROM:00082346↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0x23
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82367:     .byte 0x12              # DATA XREF: ROM:0008233F↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_82379
                .byte 5
                .byte 0xFB
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82379:     .byte 0xE               # DATA XREF: ROM:0008236C↑o
                .byte 1
                .byte 0
                .long byte_8239D
                .byte 0xE
                .byte 7
                .byte 0
                .long byte_8238C
                .byte 0x36
                .long byte_82379
byte_8238C:     .byte 0x12              # DATA XREF: ROM:0008234D↑o
                .byte 0xA
                .byte 8
                .byte 8
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 8
                .byte 5
                .byte 0xAC
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xAB
                .byte 0
                .byte 0
                .byte 0
byte_8239D:     .byte 0x12              # DATA XREF: ROM:0008237C↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_823AF
                .byte 5
                .byte 0xFD
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_823AF:     .byte 0xE               # DATA XREF: ROM:000823A2↑o
                .byte 1
                .byte 0
                .long byte_823BB
                .byte 0x36
                .long byte_823AF
byte_823BB:     .byte 0x12              # DATA XREF: ROM:000823B2↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_823CD
                .byte 5
                .byte 0xFB
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_823CD:     .byte 0xE               # DATA XREF: ROM:000823C0↑o
                .byte 1
                .byte 0
                .long byte_823D9
                .byte 0x36
                .long byte_823CD
byte_823D9:     .byte 0xF               # DATA XREF: ROM:000823D0↑o
                .long byte_823ED
                .byte 2
                .byte 4
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0xB0
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_823ED:     .byte 0x12              # DATA XREF: ROM:000823DA↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0xFE
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_823FA:     .byte 0x27              # DATA XREF: ROM:000820E2↑o
                .long byte_8240A
                .byte 8
                .byte 0x1D
                .byte 5
                .long 0xDB
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8240A:     .byte 0xF               # DATA XREF: ROM:000823FB↑o
                .long byte_82459
                .byte 8
                .byte 0x1E
                .byte 0xF
                .long byte_82421
                .byte 7
                .byte 0
                .byte 5
                .byte 9
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82421:     .byte 0xF               # DATA XREF: ROM:00082412↑o
                .long byte_82436
                .byte 0x1B
                .byte 0x66
                .byte 0x66
                .byte 0x26
                .byte 0x40
                .byte 0x34
                .byte 5
                .byte 5
                .byte 0x20
                .byte 0
                .byte 0
                .byte 0xC
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82436:     .byte 0xF               # DATA XREF: ROM:00082422↑o
                .long byte_82446
                .byte 0x2A
                .byte 0xE
                .byte 5
                .byte 0x2E
                .byte 0
                .byte 0
                .byte 0x26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82446:     .byte 0xF               # DATA XREF: ROM:00082437↑o
                .long byte_82459
                .byte 0x1A
                .byte 0
                .byte 0
                .byte 0x40
                .byte 0x40
                .byte 5
                .byte 0x1B
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82459:     .byte 0x27              # DATA XREF: ROM:0008240B↑o
                .long byte_82475
                .byte 7
                .byte 5
                .byte 0xF
                .long byte_82475
                .byte 4
                .byte 6
                .byte 2
                .byte 4
                .byte 1
                .byte 0
                .byte 0
                .byte 5
                .byte 0x2E
                .byte 0
                .byte 0
                .byte 0x26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82475:     .byte 0x27              # DATA XREF: ROM:0008245A↑o
                .long byte_82485
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 2
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82485:     .byte 0x27              # DATA XREF: ROM:00082476↑o
                .long byte_82495
                .byte 7
                .byte 0
byte_8248C:     .byte 5                 # DATA XREF: ROM:000826E0↓o
                .byte 0xFF
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82495:     .byte 0x28              # DATA XREF: ROM:00082486↑o
                .long byte_824A2
                .long byte_82519
                .long byte_8253D
byte_824A2:     .byte 0xF               # DATA XREF: ROM:00082496↑o
                .long byte_824BB
                .byte 4
                .byte 0x10
                .byte 0
                .byte 0
                .byte 1
                .byte 1
                .byte 0
                .byte 0
                .byte 1
                .byte 0
                .byte 1
                .byte 5
                .byte 0x35
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_824BB:     .byte 0x20              # DATA XREF: ROM:000824A3↑o
                .byte 1
                .byte 0xF
                .long byte_82512
                .byte 1
                .byte 0x10
                .byte 1
                .byte 0xD
                .long byte_824D3
                .byte 5
                .byte 0xEF
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_824D3:     .byte 0xE               # DATA XREF: ROM:000824C6↑o
                .byte 2
                .byte 0
                .long byte_824DF
                .byte 0x36
                .long byte_824D3
byte_824DF:     .byte 0x12              # DATA XREF: ROM:000824D6↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_824F5
                .byte 5
                .byte 0xF1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_824F5:     .byte 0xE               # DATA XREF: ROM:000824E8↑o
                .byte 2
                .byte 0
                .long byte_82501
                .byte 0x36
                .long byte_824F5
byte_82501:     .byte 0x12              # DATA XREF: ROM:000824F8↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0xF3
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82512:     .byte 0x20              # DATA XREF: ROM:000824BE↑o
                .byte 0
                .byte 0x11
                .long byte_8253D
byte_82519:     .byte 0xF               # DATA XREF: ROM:0008249A↑o
                .long byte_8252A
                .byte 1
                .byte 0x10
                .byte 2
                .byte 5
                .byte 0xAF
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8252A:     .byte 0xF               # DATA XREF: ROM:0008251A↑o
                .long byte_8253D
                .byte 0x3D
                .byte 1
                .byte 1
                .byte 0
                .byte 2
                .byte 5
                .byte 0xC2
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8253D:     .byte 0xD               # DATA XREF: ROM:0008249E↑o
                .long byte_8254B
                .byte 5
                .byte 0xF0
                .byte 0
                .byte 0
                .byte 0x26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8254B:     .byte 0xE               # DATA XREF: ROM:0008253E↑o
                .byte 2
                .byte 0
                .long byte_82557
                .byte 0x36
                .long byte_8254B
byte_82557:     .byte 0x12              # DATA XREF: ROM:0008254E↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_8256D
                .byte 5
                .byte 0xF2
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8256D:     .byte 0xE               # DATA XREF: ROM:00082560↑o
                .byte 2
                .byte 0
                .long byte_82579
                .byte 0x36
                .long byte_8256D
byte_82579:     .byte 0x12              # DATA XREF: ROM:00082570↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0xF4
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8258A:     .byte 0x27              # DATA XREF: ROM:000820F0↑o
                .long byte_8264C
                .byte 0xB
                .byte 0x1D
                .byte 0x27
                .long byte_825A1
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 5
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_825A1:     .byte 0x27              # DATA XREF: ROM:00082592↑o
                .long byte_825AD
                .byte 7
                .byte 0
                .byte 0x11
                .long byte_82236
byte_825AD:     .byte 0xF               # DATA XREF: ROM:000825A2↑o
                .long byte_825CC
                .byte 1
                .byte 0
                .byte 1
                .byte 4
                .byte 0x1A
                .byte 1
                .byte 0x10
                .byte 1
                .byte 1
                .byte 0x10
                .byte 0
                .byte 1
                .byte 0x10
                .byte 2
                .byte 1
                .byte 0
                .byte 2
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xBD
                .byte 1
                .byte 0
                .byte 0
byte_825CC:     .byte 0xF               # DATA XREF: ROM:000825AE↑o
                .long byte_82629
                .byte 1
                .byte 0x10
                .byte 0
                .byte 0xF
                .long byte_825E7
                .byte 0x21
                .byte 4
                .byte 0
                .byte 0
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xBB
                .byte 1
                .byte 0
                .byte 0
byte_825E7:     .byte 0xF               # DATA XREF: ROM:000825D5↑o
                .long byte_825FA
                .byte 0x21
                .byte 0x10
                .byte 0
                .byte 0
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xC0
                .byte 1
                .byte 0
                .byte 0
byte_825FA:     .byte 0xF               # DATA XREF: ROM:000825E8↑o
                .long byte_8260D
                .byte 0x21
                .byte 0x80
                .byte 0
                .byte 0
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xE4
                .byte 1
                .byte 0
                .byte 0
byte_8260D:     .byte 0xF               # DATA XREF: ROM:000825FB↑o
                .long byte_82620
                .byte 0x21
                .byte 0
                .byte 4
                .byte 0
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xEC
                .byte 1
                .byte 0
                .byte 0
byte_82620:     .byte 5                 # DATA XREF: ROM:0008260E↑o
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .short 0x118
                .byte 0
                .byte 0
byte_82629:     .byte 0x27              # DATA XREF: ROM:000825CD↑o
                .long byte_8263E
                .byte 0x35
                .byte 5
                .byte 0xD
                .long byte_8233C
                .byte 5
                .byte 0xF9
                .byte 0
                .byte 0
                .byte 0
                .short 0
                .byte 0
                .byte 0
byte_8263E:     .byte 0xF               # DATA XREF: ROM:0008262A↑o
                .long byte_8264C
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .short 0x118
                .byte 0
                .byte 0
byte_8264C:     .byte 0x10              # DATA XREF: ROM:0008258B↑o
byte_8264D:     .byte 0x27              # DATA XREF: ROM:000820E9↑o
                .long byte_826C0
                .byte 0xB
                .byte 0x1D
                .byte 0x27
                .long byte_82664
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 5
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82664:     .byte 0x27              # DATA XREF: ROM:00082655↑o
                .long byte_82670
                .byte 7
                .byte 0
                .byte 0x11
                .long byte_82236
byte_82670:     .byte 0x28              # DATA XREF: ROM:00082665↑o
                .long byte_8267D
                .long byte_8269E
                .long byte_826AF
byte_8267D:     .byte 0xF               # DATA XREF: ROM:00082671↑o
                .long byte_8269E
                .byte 8
                .byte 0x12
                .byte 1
                .byte 0
                .byte 1
                .byte 4
                .byte 0x1A
                .byte 1
                .byte 0x10
                .byte 1
                .byte 1
                .byte 0x10
                .byte 0
                .byte 1
                .byte 0x10
                .byte 2
                .byte 1
                .byte 0
                .byte 2
                .byte 5
                .byte 0xCB
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8269E:     .byte 0xF               # DATA XREF: ROM:00082675↑o
                .long byte_826AF
                .byte 1
                .byte 0
                .byte 2
                .byte 5
                .byte 0xC8
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_826AF:     .byte 0xF               # DATA XREF: ROM:00082679↑o
                .long byte_826C0
                .byte 1
                .byte 0x10
                .byte 0
                .byte 5
                .byte 9
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_826C0:     .byte 0x10              # DATA XREF: ROM:0008264E↑o
byte_826C1:     .byte 0x27              # DATA XREF: ROM:000820F7↑o
                .long byte_8271A
                .byte 0xB
                .byte 0x1D
                .byte 0x27
                .long byte_826D8
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 2
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_826D8:     .byte 0x27              # DATA XREF: ROM:000826C9↑o
                .long byte_826E4
                .byte 7
                .byte 0
                .byte 0x11
                .long byte_8248C
byte_826E4:     .byte 0x28              # DATA XREF: ROM:000826D9↑o
                .long byte_826F1
                .long byte_826F1
                .long byte_826F1
byte_826F1:     .byte 0xF               # DATA XREF: ROM:000826E5↑o
                .long byte_8270C
                .byte 4
                .byte 8
                .byte 0
                .byte 0x10
                .byte 0
                .byte 4
                .byte 0x10
                .byte 1
                .byte 0
                .byte 0
                .byte 1
                .byte 0x10
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0x20
                .byte 0
                .byte 0
                .byte 0
byte_8270C:     .byte 0xF               # DATA XREF: ROM:000826F2↑o
                .long byte_8271A
                .byte 5
                .byte 0xEE
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8271A:     .byte 0x10              # DATA XREF: ROM:000826C2↑o
byte_8271B:     .byte 0x27              # DATA XREF: ROM:000820FE↑o
                .long byte_828D3
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_82739
                .byte 8
                .byte 0x1E
                .byte 0xF
                .long byte_82739
                .byte 7
                .byte 0
                .byte 5
                .byte 9
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82739:     .byte 0xF               # DATA XREF: ROM:00082723↑o
                .long byte_82763
                .byte 2
                .byte 8
                .byte 0xF
                .long byte_82755
                .byte 0x29
                .byte 8
                .byte 0xD
                .long byte_8278D
                .byte 5
                .byte 0x27
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82755:     .byte 0xD               # DATA XREF: ROM:00082741↑o
                .long byte_8278D
                .byte 5
                .byte 0x28
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82763:     .byte 0xF               # DATA XREF: ROM:0008273A↑o
                .long byte_82889
                .byte 2
                .byte 9
                .byte 0xF
                .long byte_8277F
                .byte 0x29
                .byte 8
                .byte 0xD
                .long byte_8278D
                .byte 5
                .byte 0x25
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8277F:     .byte 0xD               # DATA XREF: ROM:0008276B↑o
                .long byte_8278D
                .byte 5
                .byte 0x26
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8278D:     .byte 0xE               # DATA XREF: ROM:00082748↑o
                .byte 1
                .byte 0
                .long byte_827A7
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_827D5
                .byte 0xE
                .byte 7
                .byte 0
                .long byte_827EB
                .byte 0x36
                .long byte_8278D
byte_827A7:     .byte 0xF               # DATA XREF: ROM:00082790↑o
                .long byte_827C4
                .byte 2
                .byte 5
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0x10
                .byte 0xD
                .long byte_829A4
                .byte 5
                .byte 0xE0
                .byte 0
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_827C4:     .byte 0x12              # DATA XREF: ROM:000827A8↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0x10
                .byte 5
                .byte 0xCF
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_827D5:     .byte 0x12              # DATA XREF: ROM:00082797↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0x10
                .byte 0xD
                .long byte_82931
                .byte 5
                .byte 0xE5
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_827EB:     .byte 0xF               # DATA XREF: ROM:0008279E↑o
                .long byte_82808
                .byte 2
                .byte 8
                .long loc_80A10+2
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0xA
                .byte 0xD
                .long byte_8283B
                .byte 5
                .byte 0x27
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82808:     .byte 0xF               # DATA XREF: ROM:000827EC↑o
                .long byte_82825
                .byte 2
                .byte 9
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0xA
                .byte 0xD
                .long byte_8283B
                .byte 5
                .byte 0x25
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82825:     .byte 0x12              # DATA XREF: ROM:00082809↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0xA
                .byte 0xD
                .long byte_8283B
                .byte 5
                .byte 0x25
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8283B:     .byte 0xE               # DATA XREF: ROM:000827FB↑o
                .byte 1
                .byte 0
                .long byte_82855
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_827D5
                .byte 0xE
                .byte 7
                .byte 0
                .long byte_82855
                .byte 0x36
                .long byte_8283B
byte_82855:     .byte 0xF               # DATA XREF: ROM:0008283E↑o
                .long byte_82872
                .byte 2
                .byte 5
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0x10
                .byte 0xD
                .long byte_829A4
                .byte 5
                .byte 0xE0
                .byte 0
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82872:     .byte 0xF               # DATA XREF: ROM:00082856↑o
                .byte 0x88
                .byte 0x28
                .byte 8
                .byte 0
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0xA
                .byte 5
                .byte 0xCF
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0x10
byte_82889:     .byte 0xF               # DATA XREF: ROM:00082764↑o
                .long byte_8289B
                .byte 0x34
                .byte 1
                .byte 0xA
                .byte 6
                .byte 5
                .byte 0xAB
                .byte 0
                .byte 0
                .byte 0xC
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8289B:     .byte 0x27              # DATA XREF: ROM:0008288A↑o
                .long byte_828B0
                .byte 7
                .byte 0
                .byte 0xD
                .long byte_8233C
                .byte 5
                .byte 0xB2
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_828B0:     .byte 0xF               # DATA XREF: ROM:0008289C↑o
                .long byte_828C5
                .byte 0x29
                .byte 8
                .byte 0xD
                .long byte_8278D
                .byte 5
                .byte 0x25
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_828C5:     .byte 0xD               # DATA XREF: ROM:000828B1↑o
                .long byte_8278D
                .byte 5
                .byte 0x26
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_828D3:     .byte 0x10              # DATA XREF: ROM:0008271C↑o
byte_828D4:     .byte 0x27              # DATA XREF: ROM:00082105↑o
                .long byte_82905
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_828F0
                .byte 0
                .byte 0
                .byte 1
                .byte 4
                .byte 0x18
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 1
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0x16
byte_828F0:     .byte 0xF               # DATA XREF: ROM:000828DC↑o
                .long byte_82905
                .byte 0
                .byte 0
                .byte 2
                .byte 4
                .byte 0xC
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 2
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0xF
byte_82905:     .byte 0x10              # DATA XREF: ROM:000828D5↑o
byte_82906:     .byte 0x27              # DATA XREF: ROM:0008210C↑o
                .long byte_82916
                .byte 0xB
                .byte 0x1D
                .byte 5
                .byte 0xD4
                .byte 0
                .byte 0xC
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82916:     .byte 0x10              # DATA XREF: ROM:00082907↑o
byte_82917:     .byte 0x27              # DATA XREF: ROM:00082113↑o
                .long byte_82970
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_82970
                .byte 0xD
                .long byte_82931
                .byte 5
                .byte 0xE5
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82931:     .byte 0xE               # DATA XREF: ROM:000827DE↑o
                .byte 2
                .byte 0
                .long byte_8293D
                .byte 0x36
                .long byte_82931
byte_8293D:     .byte 0x12              # DATA XREF: ROM:00082934↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_82953
                .byte 5
                .byte 0xE6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82953:     .byte 0xE               # DATA XREF: ROM:00082946↑o
                .byte 2
                .byte 0
                .long byte_8295F
                .byte 0x36
                .long byte_82953
byte_8295F:     .byte 0x12              # DATA XREF: ROM:00082956↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0xE8
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82970:     .byte 0x10              # DATA XREF: ROM:00082918↑o
byte_82971:     .byte 0x27              # DATA XREF: ROM:0008211A↑o
                .long byte_82978
                .byte 0xB
                .byte 0x1D
byte_82978:     .byte 0x10              # DATA XREF: ROM:00082972↑o
byte_82979:     .byte 0x27              # DATA XREF: ROM:00082121↑o
                .long byte_82989
                .byte 0xB
                .byte 0x1D
                .byte 5
                .byte 0xD3
                .byte 0
                .byte 0xC
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82989:     .byte 0x10              # DATA XREF: ROM:0008297A↑o
byte_8298A:     .byte 0x27              # DATA XREF: ROM:00082128↑o
                .long byte_829D9
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_829D9
                .byte 0xD
                .long byte_829A4
                .byte 5
                .byte 0xE0
                .byte 0
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_829A4:     .byte 0xE               # DATA XREF: ROM:000827B7↑o
                .byte 1
                .byte 0
                .long byte_829B0
                .byte 0x36
                .long byte_829A4
byte_829B0:     .byte 0xF               # DATA XREF: ROM:000829A7↑o
                .long byte_829D9
                .byte 0x2A
                .byte 0xE
                .byte 1
                .byte 0
                .byte 1
                .byte 4
                .byte 0x10
                .byte 1
                .byte 0x10
                .byte 1
                .byte 1
                .byte 0x10
                .byte 0
                .byte 1
                .byte 0x10
                .byte 2
                .byte 1
                .byte 0
                .byte 2
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0xCF
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_829D9:     .byte 0x10              # DATA XREF: ROM:0008298B↑o
byte_829DA:     .byte 0x27              # DATA XREF: ROM:0008212F↑o
                .long byte_829EA
                .byte 0xB
                .byte 0x1D
                .byte 5
                .byte 0xD5
                .byte 1
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_829EA:     .byte 0x10              # DATA XREF: ROM:000829DB↑o
byte_829EB:     .byte 0x27              # DATA XREF: ROM:00082136↑o
                .long byte_82A40
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_82A07
                .byte 0x38
                .byte 0xC
                .byte 0xD
                .long byte_829A4
                .byte 5
                .byte 0x74
                .byte 0
                .byte 0x40
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82A07:     .byte 0xF               # DATA XREF: ROM:000829F3↑o
                .long byte_82A1C
                .byte 0x38
                .byte 0xA
                .byte 0xD
                .long byte_829A4
                .byte 5
                .byte 0x74
                .byte 0
                .byte 0x40
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82A1C:     .byte 0xF               # DATA XREF: ROM:00082A08↑o
                .long byte_82A40
                .byte 0xD
                .long byte_829A4
                .byte 0x13
                .long byte_82A34
                .byte 0
                .byte 0xDB
                .byte 1
                .byte 0x80
                .byte 0x8C
                .byte 0x18
                .byte 0xC5
                .byte 0xF9
                .byte 8
byte_82A34:     .byte 0x16              # DATA XREF: ROM:00082A27↑o
                .byte 1
                .byte 0
                .byte 5
                .byte 0xDB
                .byte 1
                .byte 0
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82A40:     .byte 0x10              # DATA XREF: ROM:000829EC↑o
byte_82A41:     .byte 0x27              # DATA XREF: ROM:00082191↑o
                .long byte_82A68
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_82A68
                .byte 0x13
                .long byte_82A5C
                .byte 0
                .byte 0
                .byte 4
                .byte 2
                .byte 0x80
                .byte 0x8C
                .byte 0xF0
                .byte 0xC4
                .byte 0xF9
                .byte 8
byte_82A5C:     .byte 0x16              # DATA XREF: ROM:00082A4E↑o
                .byte 1
                .byte 0
                .byte 5
                .byte 4
                .byte 2
                .byte 0
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82A68:     .byte 0x10              # DATA XREF: ROM:00082A42↑o
byte_82A69:     .byte 0x27              # DATA XREF: ROM:0008213D↑o
                .long byte_82AB0
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_82A80
                .byte 0x38
                .byte 0xC
                .byte 5
                .byte 0xD5
                .byte 1
                .byte 0x40
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82A80:     .byte 0xF               # DATA XREF: ROM:00082A71↑o
                .long byte_82A90
                .byte 0x38
                .byte 0xA
                .byte 5
                .byte 0xD5
                .byte 1
                .byte 0x40
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82A90:     .byte 0xF               # DATA XREF: ROM:00082A81↑o
                .long byte_82AB0
                .byte 0x13
                .long byte_82AA4
                .byte 0
                .byte 0
                .byte 0x5A
                .byte 1
                .byte 0x80
                .byte 0x8C
                .byte 0xA8
                .byte 0xC4
                .byte 0xF9
                .byte 8
byte_82AA4:     .byte 0x16              # DATA XREF: ROM:00082A96↑o
                .byte 1
                .byte 0
                .byte 5
                .byte 0x5A
                .byte 1
                .byte 0
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82AB0:     .byte 0x10              # DATA XREF: ROM:00082A6A↑o
byte_82AB1:     .byte 0x27              # DATA XREF: ROM:000821AD↑o
                .long byte_82AC8
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_82AC8
                .byte 0x39
                .byte 0xA
                .byte 5
                .byte 0xED
                .byte 0x40
                .byte 0x80
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82AC8:     .byte 0x10              # DATA XREF: ROM:00082AB2↑o
byte_82AC9:     .byte 0x39              # DATA XREF: ROM:000821BB↑o
                .byte 0x14
                .byte 0x39
                .byte 0x15
                .byte 0x37
                .byte 0x1E
                .byte 0x10
byte_82AD0:     .byte 0x27              # DATA XREF: ROM:000821B4↑o
                .long byte_82B3C
                .byte 7
                .byte 0
                .byte 0xF
                .long byte_82AEF
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0x20
                .byte 2
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 5
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82AEF:     .byte 0xF               # DATA XREF: ROM:00082AD8↑o
                .long byte_82B07
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0x20
                .byte 1
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 6
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82B07:     .byte 0xF               # DATA XREF: ROM:00082AF0↑o
                .long byte_82B1F
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0
                .byte 2
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 1
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82B1F:     .byte 0xF               # DATA XREF: ROM:00082B08↑o
                .long byte_82B37
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0
                .byte 1
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 2
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82B37:     .byte 0x11              # DATA XREF: ROM:00082B20↑o
                .long byte_82B9C
byte_82B3C:     .byte 0xF               # DATA XREF: ROM:00082AD1↑o
                .long byte_82B54
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0x20
                .byte 2
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 6
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82B54:     .byte 0xF               # DATA XREF: ROM:00082B3D↑o
                .long byte_82B6C
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0x20
                .byte 1
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 5
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82B6C:     .byte 0xF               # DATA XREF: ROM:00082B55↑o
                .long byte_82B84
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0
                .byte 2
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 2
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82B84:     .byte 0xF               # DATA XREF: ROM:00082B6D↑o
                .long byte_82B9C
                .short 0xE08
                .byte 1
                .byte 0
                .byte 1
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 1
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82B9C:     .byte 0xF               # DATA XREF: ROM:00082B38↑o
                .long byte_82BB4
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0x20
                .byte 0
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 4
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82BB4:     .byte 0xF               # DATA XREF: ROM:00082B9D↑o
                .long byte_82BC9
                .byte 8
                .byte 0xE
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 0
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82BC9:     .byte 0x10              # DATA XREF: ROM:00082BB5↑o
                .byte 0
                .byte 0
TAILS_MOVES:    .byte 0xE               # DATA XREF: ROM:0001EFB0↑o
                .short 1
                .long byte_82CB4
                .byte 0xE
                .short 2
                .long byte_82E58
                .byte 0xE
                .short 3
                .long byte_83098
                .byte 0xE
                .short 5
                .long byte_82FD7
                .byte 0xE
                .short 6
                .long byte_832BA
                .byte 0xE
                .short 7
                .long byte_83314
                .byte 0xE
                .short 0
                .long byte_834D9
                .byte 0xE
                .short 0x201
                .long byte_8350B
                .byte 0xE
                .short 0x202
                .long byte_8351C
                .byte 0xE
                .short 0x401
                .long byte_83576
                .byte 0xE
                .short 0x402
                .long byte_8357E
                .byte 0xE
                .short 0x101
                .long byte_8358F
                .byte 0xE
                .short 0x102
                .long byte_835A5
                .byte 0xE
                .short 0x301
                .long byte_835B6
                .byte 0xE
                .short 0x302
                .long byte_83625
                .byte 0xE
                .short 0x205
                .long byte_8350B
                .byte 0xE
                .short 0x206
                .long byte_8351C
                .byte 0xE
                .short 0x405
                .long byte_83576
                .byte 0xE
                .short 0x406
                .long byte_8357E
                .byte 0xE
                .short 0x105
                .long byte_8358F
                .byte 0xE
                .short 0x106
                .long byte_835A5
                .byte 0xE
                .short 0x305
                .long byte_835B6
                .byte 0xE
                .short 0x306
                .long byte_83625
                .byte 0xE
                .short 0x203
                .long byte_8350B
                .byte 0xE
                .short 0x403
                .long byte_83576
                .byte 0xE
                .short 0x103
                .long byte_8358F
                .byte 0xE
                .short 0x303
                .long byte_835FD
                .byte 0xE
                .short 0x207
                .long byte_8350B
                .byte 0xE
                .short 0x407
                .long byte_83576
                .byte 0xE
                .short 0x107
                .long byte_8358F
                .byte 0xE
                .short 0x307
                .long byte_8366D
                .byte 0xE
                .short 0x607
                .long byte_8368C
                .byte 0xE
                .short 0x300
                .long byte_83685
                .byte 0x10
byte_82CB4:     .byte 0x27              # DATA XREF: ROM:00082BCF↑o
                .long byte_82CC4
                .byte 8
                .byte 0x1D
                .byte 5
                .byte 0xDB
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82CC4:     .byte 0xF               # DATA XREF: ROM:00082CB5↑o
                .long byte_82D13
                .byte 8
                .byte 0x1E
                .byte 0xF
                .long byte_82CDB
                .byte 7
                .byte 0
                .byte 5
                .byte 9
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82CDB:     .byte 0xF               # DATA XREF: ROM:00082CCC↑o
                .long byte_82CF0
                .byte 0x1B
                .byte 0x66
                .byte 0x66
                .byte 0x26
                .byte 0x40
                .byte 0x34
                .byte 5
                .byte 5
                .byte 0xD2
                .byte 1
                .byte 0
                .byte 0xC
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82CF0:     .byte 0xF               # DATA XREF: ROM:00082CDC↑o
                .long byte_82D00
                .byte 0x2A
                .byte 0xE
                .byte 5
                .byte 0xE0
                .byte 0
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82D00:     .byte 0xF               # DATA XREF: ROM:00082CF1↑o
                .long byte_82D13
                .byte 0x1A
                .byte 0
                .byte 0
                .byte 0x40
                .byte 0x40
                .byte 5
                .byte 0xDD
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82D13:     .byte 0x27              # DATA XREF: ROM:00082CC5↑o
                .long byte_82D23
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 4
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82D23:     .byte 0x27              # DATA XREF: ROM:00082D14↑o
                .long byte_82D38
                .byte 7
                .byte 0
byte_82D2A:     .byte 0xD               # DATA XREF: ROM:00082FF6↓o
                .long byte_82DEA
                .byte 5
                .byte 0xB2
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82D38:     .byte 0x28              # DATA XREF: ROM:00082D24↑o
                .long byte_82D45
                .long byte_82D8D
                .long byte_82D8D
byte_82D45:     .byte 0xF               # DATA XREF: ROM:00082D39↑o
                .long byte_82D64
                .byte 1
                .byte 0
                .byte 1
                .byte 4
                .byte 0x1A
                .byte 1
                .byte 0x10
                .byte 1
                .byte 1
                .byte 0x10
                .byte 0
                .byte 1
                .byte 0x10
                .byte 2
                .byte 1
                .byte 0
                .byte 2
                .byte 5
                .byte 0xCA
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82D64:     .byte 0xF               # DATA XREF: ROM:00082D46↑o
                .long byte_82D77
                .byte 4
                .byte 8
                .byte 0
                .byte 0
                .byte 1
                .byte 5
                .byte 0xE4
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82D77:     .byte 0xF               # DATA XREF: ROM:00082D65↑o
                .long byte_82D88
                .byte 1
                .byte 0x10
                .byte 1
                .byte 5
                .byte 1
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82D88:     .byte 0x11              # DATA XREF: ROM:00082D78↑o
                .long byte_82D8D
byte_82D8D:     .byte 0xF               # DATA XREF: ROM:00082D3D↑o
                .long byte_82DDC
                .byte 2
                .byte 4
                .byte 5
                .byte 0xDD
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82D9D:     .byte 0xE               # DATA XREF: ROM:00082DA5↓o
                .byte 1
                .byte 0
                .long byte_82DA9
                .byte 0x36
                .long byte_82D9D
byte_82DA9:     .byte 0x12              # DATA XREF: ROM:00082DA0↑o
                .byte 8
                .byte 8
                .byte 0xA
                .byte 0x1D
                .byte 8
                .byte 8
                .byte 0x14
                .byte 0xD
                .long byte_82DBF
                .byte 5
                .byte 0x59
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82DBF:     .byte 0xE               # DATA XREF: ROM:00082DB2↑o
                .byte 1
                .byte 0
                .long byte_82DCB
                .byte 0x36
                .long byte_82DBF
byte_82DCB:     .byte 0x12              # DATA XREF: ROM:00082DC2↑o
                .byte 8
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 8
                .byte 8
                .byte 0
                .byte 5
                .byte 0x59
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82DDC:     .byte 0xD               # DATA XREF: ROM:00082D8E↑o
                .long byte_82DEA
                .byte 5
                .byte 0xF9
                .byte 0
                .byte 0
                .byte 0x26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82DEA:     .byte 0xE               # DATA XREF: ROM:00082D2B↑o
                .byte 1
                .byte 0
                .byte 0x15
                .byte 0x2E
                .byte 8
                .byte 0
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_82E04
                .byte 0xE
                .byte 7
                .byte 0
                .long byte_82E3A
                .byte 0x36
                .long byte_82DEA
byte_82E04:     .byte 0x12              # DATA XREF: ROM:00082DF4↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0x23
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_82E27
                .byte 5
                .byte 0xFA
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82E27:     .byte 0xE               # DATA XREF: ROM:00082E1A↑o
                .byte 1
                .byte 0
                .long byte_82E4B
                .byte 0xE
                .byte 7
                .byte 0
                .long byte_82E3A
                .byte 0x36
                .long byte_82E27
byte_82E3A:     .byte 0x12              # DATA XREF: ROM:00082DFB↑o
                .byte 0xA
                .byte 8
                .byte 8
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 8
                .byte 5
                .byte 0xAC
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xAB
                .byte 0
                .byte 0
                .byte 0
byte_82E4B:     .byte 0x12              # DATA XREF: ROM:00082E2A↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0xC9
                .byte 1
                .byte 0
                .byte 0x26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82E58:     .byte 0x27              # DATA XREF: ROM:00082BD6↑o
                .long byte_82E68
                .byte 8
                .byte 0x1D
                .byte 5
                .byte 0xDB
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82E68:     .byte 0xF               # DATA XREF: ROM:00082E59↑o
                .long byte_82EB7
                .byte 8
                .byte 0x1E
                .byte 0xF
                .long byte_82E7F
                .byte 7
                .byte 0
                .byte 5
                .byte 9
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82E7F:     .byte 0xF               # DATA XREF: ROM:00082E70↑o
                .long byte_82E94
                .byte 0x1B
                .byte 0x66
                .byte 0x66
                .byte 0x26
                .byte 0x40
                .byte 0x34
                .byte 5
                .byte 5
                .byte 0x20
                .byte 0
                .byte 0
                .byte 0xC
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82E94:     .byte 0xF               # DATA XREF: ROM:00082E80↑o
                .long byte_82EA4
                .byte 0x2A
                .byte 0xE
                .byte 5
                .byte 0x2E
                .byte 0
                .byte 0
                .byte 0x26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82EA4:     .byte 0xF               # DATA XREF: ROM:00082E95↑o
                .long byte_82EB7
                .byte 0x1A
                .byte 0
                .byte 0
                .byte 0x40
                .byte 0x40
                .byte 5
                .byte 0x1F
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82EB7:     .byte 0x27              # DATA XREF: ROM:00082E69↑o
                .long byte_82ED3
                .byte 7
                .byte 5
                .byte 0xF
                .long byte_82ED3
                .byte 4
                .byte 6
                .byte 2
                .byte 4
                .byte 1
                .byte 0
                .byte 0
                .byte 5
                .byte 0x2E
                .byte 0
                .byte 0
                .byte 0x26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82ED3:     .byte 0x27              # DATA XREF: ROM:00082EB8↑o
                .long byte_82EE3
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 0xD0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82EE3:     .byte 0x27              # DATA XREF: ROM:00082ED4↑o
                .long byte_82EF3
                .byte 7
                .byte 0
byte_82EEA:     .byte 5                 # DATA XREF: ROM:000832D9↓o
                .byte 0xFF
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82EF3:     .byte 0x28              # DATA XREF: ROM:00082EE4↑o
                .byte 0
                .byte 0x2F
                .byte 8
                .byte 0
                .byte 0x77
                .byte 0x2F
                .byte 8
                .byte 0
                .long byte_82F8A
                .byte 0xF
                .long byte_82F19
                .byte 4
                .byte 0x10
                .byte 0
                .byte 0
                .byte 1
                .byte 1
                .byte 0
                .byte 0
                .byte 1
                .byte 0
                .byte 1
                .byte 5
                .byte 0x35
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82F19:     .byte 0x20              # DATA XREF: ROM:00082F01↑o
                .byte 1
                .byte 0xF
                .long byte_82F70
                .byte 1
                .byte 0x10
                .byte 1
                .byte 0xD
                .long byte_82F31
                .byte 5
                .byte 0x36
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82F31:     .byte 0xE               # DATA XREF: ROM:00082F24↑o
                .byte 2
                .byte 0
                .long byte_82F3D
                .byte 0x36
                .long byte_82F31
byte_82F3D:     .byte 0x12              # DATA XREF: ROM:00082F34↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_82F53
                .byte 5
                .byte 0x37
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82F53:     .byte 0xE               # DATA XREF: ROM:00082F46↑o
                .byte 2
                .byte 0
                .long byte_82F5F
                .byte 0x36
                .long byte_82F53
byte_82F5F:     .byte 0x12              # DATA XREF: ROM:00082F56↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0x38
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82F70:     .byte 0x20              # DATA XREF: ROM:00082F1C↑o
                .byte 0
                .byte 0x11
                .long byte_82F8A
                .byte 0xF
                .long byte_82F8A
                .byte 0x3D
                .byte 1
                .byte 1
                .byte 0
                .byte 2
                .byte 5
                .byte 0xC5
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82F8A:     .byte 0xD               # DATA XREF: ROM:00082EFC↑o
                .long byte_82F98
                .byte 5
                .byte 0xF0
                .byte 0
                .byte 0
                .byte 0x26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82F98:     .byte 0xE               # DATA XREF: ROM:00082F8B↑o
                .byte 2
                .byte 0
                .long byte_82FA4
                .byte 0x36
                .long byte_82F98
byte_82FA4:     .byte 0x12              # DATA XREF: ROM:00082F9B↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_82FBA
                .byte 5
                .byte 0xF2
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82FBA:     .byte 0xE               # DATA XREF: ROM:00082FAD↑o
                .byte 2
                .byte 0
                .long byte_82FC6
                .byte 0x36
                .long byte_82FBA
byte_82FC6:     .byte 0x12              # DATA XREF: ROM:00082FBD↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0xF4
                .byte 0
                .byte 0
                .short 0
                .byte 0
                .byte 0
                .byte 0
byte_82FD7:     .byte 0x27              # DATA XREF: ROM:00082BE4↑o
                .long byte_83097
                .byte 0xB
                .byte 0x1D, 0x27
                .long byte_82FEE
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 4
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_82FEE:     .byte 0x27              # DATA XREF: ROM:00082FDF↑o
                .long byte_82FFA
                .byte 7
                .byte 0
                .byte 0x11
                .long byte_82D2A
byte_82FFA:     .byte 0xF               # DATA XREF: ROM:00082FEF↑o
                .long byte_83017
                .byte 4
                .byte 0x10
                .byte 1
                .byte 0
                .byte 1
                .byte 3
                .byte 0
                .byte 2
                .byte 0xFF
                .byte 1
                .byte 0
                .byte 2
                .byte 1
                .byte 0
                .byte 0
                .byte 5
                .byte 0x97
                .byte 1
                .byte 4
                .byte 0x29
                .byte 0xEF
                .byte 1
                .byte 0
                .byte 0
byte_83017:     .byte 0xF               # DATA XREF: ROM:00082FFB↑o
                .long byte_83074
                .byte 1
                .byte 0x10
                .byte 0
                .byte 0xF
                .long byte_83032
                .byte 0x21
                .byte 4
                .byte 0
                .byte 0
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xBB
                .byte 1
                .byte 0
                .byte 0
byte_83032:     .byte 0xF               # DATA XREF: ROM:00083020↑o
                .long byte_83045
                .byte 0x21
                .byte 0x10
                .byte 0
                .byte 0
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xC0
                .byte 1
                .byte 0
                .byte 0
byte_83045:     .byte 0xF               # DATA XREF: ROM:00083033↑o
                .long byte_83058
                .byte 0x21
                .byte 0x80
                .byte 0
                .byte 0
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xE4
                .byte 1
                .byte 0
                .byte 0
byte_83058:     .byte 0xF               # DATA XREF: ROM:00083046↑o
                .long byte_8306B
                .byte 0x21
                .byte 0
                .byte 4
                .byte 0
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xEC
                .byte 1
                .byte 0
                .byte 0
byte_8306B:     .byte 5                 # DATA XREF: ROM:00083059↑o
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xD2
                .byte 1
                .byte 0
                .byte 0
byte_83074:     .byte 0x27              # DATA XREF: ROM:00083018↑o
                .long byte_83089
                .byte 0x35
                .byte 5
                .byte 0xD
                .long byte_82DEA
                .byte 5
                .byte 0xF9
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83089:     .byte 0xF               # DATA XREF: ROM:00083075↑o
                .long byte_83097
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xD2
                .byte 1
                .byte 0
                .byte 0
byte_83097:     .byte 0x10              # DATA XREF: ROM:00082FD8↑o
byte_83098:     .byte 0x27              # DATA XREF: ROM:00082BDD↑o
                .long byte_832B9
                .byte 0xB
                .byte 0x1D
                .byte 0x27
                .long byte_830AF
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 4
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_830AF:     .byte 0x27              # DATA XREF: ROM:000830A0↑o
                .long byte_830BB
                .byte 7
                .byte 0
                .byte 0x11
                .long byte_82D2A
byte_830BB:     .byte 0x28              # DATA XREF: ROM:000830B0↑o
                .long byte_830D9
                .long byte_830C8
                .long byte_830D9
byte_830C8:     .byte 0xF               # DATA XREF: ROM:000830C0↑o
                .long byte_830D9
                .byte 1
                .byte 0
                .byte 2
                .byte 5
                .byte 0xC8
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_830D9:     .byte 0xF               # DATA XREF: ROM:000830BC↑o
                .long byte_830EA
                .byte 1
                .byte 0x10
                .byte 0
                .byte 5
                .byte 9
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_830EA:     .byte 0xD               # DATA XREF: ROM:000830DA↑o
                .long byte_830F8
                .byte 5
                .byte 0x8C
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_830F8:     .byte 0xE               # DATA XREF: ROM:000830EB↑o
                .byte 1
                .byte 0
                .long byte_83112
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_83128
                .byte 0xE
                .byte 3
                .byte 0
                .long byte_8313E
                .byte 0x36
                .long byte_830F8
byte_83112:     .byte 0x12              # DATA XREF: ROM:000830FB↑o
                .byte 0xA
                .byte 8
                .byte 0xEC
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_8314F
                .byte 5
                .byte 0x8D
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83128:     .byte 0x12              # DATA XREF: ROM:00083102↑o
                .byte 0xA
                .byte 8
                .byte 0xEC
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_8314F
                .byte 5
                .byte 0x8E
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8313E:     .byte 0x12              # DATA XREF: ROM:00083109↑o
                .byte 0xA
                .byte 8
                .byte 0xEC
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0x8F
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8314F:     .byte 0xE               # DATA XREF: ROM:0008311B↑o
                .byte 1
                .byte 0
                .long byte_83169
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_8317F
                .byte 0xE
                .byte 3
                .byte 0
                .long byte_83195
                .byte 0x36
                .long byte_8314F
byte_83169:     .byte 0x12              # DATA XREF: ROM:00083152↑o
                .byte 0xA
                .byte 8
                .byte 0xEC
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_831A6
                .byte 5
                .byte 0x8D
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8317F:     .byte 0x12              # DATA XREF: ROM:00083159↑o
                .byte 0xA
                .byte 8
                .byte 0xEC
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_831A6
                .byte 5
                .byte 0x8E
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83195:     .byte 0x12              # DATA XREF: ROM:00083160↑o
                .byte 0xA
                .byte 8
                .byte 0xEC
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0x8F
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_831A6:     .byte 0xE               # DATA XREF: ROM:00083172↑o
                .byte 1
                .byte 0
                .long byte_831C0
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_831D6
                .byte 0xE
                .byte 3
                .byte 0
                .long byte_831EC
                .byte 0x36
                .long byte_831A6
byte_831C0:     .byte 0x12              # DATA XREF: ROM:000831A9↑o
                .byte 0xA
                .byte 8
                .byte 0xEC
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_831FD
                .byte 5
                .byte 0x8D
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_831D6:     .byte 0x12              # DATA XREF: ROM:000831B0↑o
                .byte 0xA
                .byte 8
                .byte 0xEC
                .byte 0x1D
                .byte 0xA
                .short 8
                .byte 0xD
                .long byte_831FD
                .byte 5
                .byte 0x8E
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_831EC:     .byte 0x12              # DATA XREF: ROM:000831B7↑o
                .byte 0xA
                .byte 8
                .byte 0xF6
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0x8F
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_831FD:     .byte 0xE               # DATA XREF: ROM:000831C9↑o
                .byte 1
                .byte 0
                .long byte_83217
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_83235
                .byte 0xE
                .byte 3
                .byte 0
                .long byte_83253
                .byte 0x36
                .long byte_831FD
byte_83217:     .byte 0xF               # DATA XREF: ROM:00083200↑o
                .long byte_83234
                .byte 8
                .byte 0x12
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0xEC
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_8326C
                .byte 5
                .byte 0x8D
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83234:     .byte 0x10              # DATA XREF: ROM:00083218↑o
byte_83235:     .byte 0xF               # DATA XREF: ROM:00083207↑o
                .long byte_83252
                .byte 8
                .byte 0x12
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0xEC
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_8326C
                .byte 5
                .byte 0x8E
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83252:     .byte 0x10              # DATA XREF: ROM:00083236↑o
byte_83253:     .byte 0xF               # DATA XREF: ROM:0008320E↑o
                .long byte_8326B
                .byte 8
                .byte 0x12
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0xF6
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0x8F
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8326B:     .byte 0x10              # DATA XREF: ROM:00083254↑o
byte_8326C:     .byte 0xE               # DATA XREF: ROM:00083227↑o
                .byte 1
                .byte 0
                .long byte_83286
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_83297
                .byte 0xE
                .byte 3
                .byte 0
                .long byte_832A8
                .byte 0x36
                .long byte_8326C
byte_83286:     .byte 0x12              # DATA XREF: ROM:0008326F↑o
                .byte 0xA
                .byte 8
                .byte 0xEC
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0x8D
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83297:     .byte 0x12              # DATA XREF: ROM:00083276↑o
                .byte 0xA
                .byte 8
                .byte 0xEC
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0x8E
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_832A8:     .byte 0x12              # DATA XREF: ROM:0008327D↑o
                .byte 0xA
                .byte 8
                .byte 0xF6
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0x8F
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_832B9:     .byte 0x10              # DATA XREF: ROM:00083099↑o
byte_832BA:     .byte 0x27              # DATA XREF: ROM:00082BEB↑o
                .long byte_83313
                .byte 0xB
                .byte 0x1D
                .byte 0x27
                .long byte_832D1
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 0xD0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_832D1:     .byte 0x27              # DATA XREF: ROM:000832C2↑o
                .long byte_832DD
                .byte 7
                .byte 0
                .byte 0x11
                .long byte_82EEA
byte_832DD:     .byte 0x28              # DATA XREF: ROM:000832D2↑o
                .long byte_832EA
                .long byte_832EA
                .long byte_832EA
byte_832EA:     .byte 0xF               # DATA XREF: ROM:000832DE↑o
                .long byte_83305
                .byte 4
                .byte 8
                .byte 0
                .byte 0x10
                .byte 0
                .byte 4
                .byte 0x10
                .byte 1
                .byte 0
                .byte 0
                .byte 1
                .byte 0x10
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0x20
                .byte 0
                .byte 0
                .byte 0
byte_83305:     .byte 0xF               # DATA XREF: ROM:000832EB↑o
                .long byte_83313
                .byte 5
                .byte 0xEE
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83313:     .byte 0x10              # DATA XREF: ROM:000832BB↑o
byte_83314:     .byte 0x27              # DATA XREF: ROM:00082BF2↑o
                .long byte_834D8
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_83332
                .byte 8
                .byte 0x1E
                .byte 0xF
                .long byte_83332
                .byte 7
                .byte 0
                .byte 5
                .byte 9
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83332:     .byte 0x27              # DATA XREF: ROM:0008331C↑o
                .long byte_8333E
                .byte 7
                .byte 0
                .byte 0x11
                .long byte_82D2A
byte_8333E:     .byte 0xF               # DATA XREF: ROM:00083333↑o
                .long byte_83368
                .byte 2
                .byte 8
                .byte 0xF
                .long byte_8335A
                .byte 0x29
                .byte 8
                .byte 0xD
                .long byte_83392
                .byte 5
                .byte 0x27
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8335A:     .byte 0xD               # DATA XREF: ROM:00083346↑o
                .long byte_83392
                .byte 5
                .byte 0x28
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83368:     .byte 0xF               # DATA XREF: ROM:0008333F↑o
                .long byte_8348E
                .byte 2
                .byte 9
                .byte 0xF
                .long byte_83384
                .byte 0x29
                .byte 8
                .byte 0xD
                .long byte_83392
                .byte 5
                .byte 0x25
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83384:     .byte 0xD               # DATA XREF: ROM:00083370↑o
                .long byte_83392
                .byte 5
                .byte 0x26
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83392:     .byte 0xE               # DATA XREF: ROM:0008334D↑o
                .byte 1
                .byte 0
                .long byte_833AC
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_833DA
                .byte 0xE
                .byte 7
                .byte 0
                .long byte_833F0
                .byte 0x36
                .long byte_83392
byte_833AC:     .byte 0xF               # DATA XREF: ROM:00083395↑o
                .long byte_833C4
                .byte 2
                .byte 5
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0x10
                .byte 5
                .byte 0xE0
                .byte 0
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_833C4:     .byte 0x12              # DATA XREF: ROM:000833AD↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0x10
                .byte 0xD
                .long byte_82DEA
                .byte 5
                .byte 0xC
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_833DA:     .byte 0x12              # DATA XREF: ROM:0008339C↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0x10
                .byte 0xD
                .long byte_83536
                .byte 5
                .byte 0xE5
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_833F0:     .byte 0xF               # DATA XREF: ROM:000833A3↑o
                .long byte_8340D
                .byte 2
                .byte 8
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0xA
                .byte 0xD
                .long byte_83440
                .byte 5
                .byte 0x27
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8340D:     .byte 0xF               # DATA XREF: ROM:000833F1↑o
                .long byte_8342A
                .byte 2
                .byte 9
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0xA
                .byte 0xD
                .long byte_83440
                .byte 5
                .byte 0x25
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8342A:     .byte 0x12              # DATA XREF: ROM:0008340E↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0xA
                .byte 0xD
                .long byte_83440
                .byte 5
                .byte 0x25
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83440:     .byte 0xE               # DATA XREF: ROM:00083400↑o
                .byte 1
                .byte 0
                .long byte_8345A
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_833DA
                .byte 0xE
                .byte 7
                .byte 0
                .long byte_8345A
                .byte 0x36
                .long byte_83440
byte_8345A:     .byte 0xF               # DATA XREF: ROM:00083443↑o
                .long byte_83472
                .byte 2
                .byte 5
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0x10
                .byte 5
                .byte 0xE0
                .byte 0
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83472:     .byte 0xF               # DATA XREF: ROM:0008345B↑o
                .long byte_8348D
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0x10
                .byte 0xD
                .long byte_82DEA
                .byte 5
                .byte 0xC
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8348D:     .byte 0x10              # DATA XREF: ROM:00083473↑o
byte_8348E:     .byte 0xF               # DATA XREF: ROM:00083369↑o
                .long byte_834A0
                .byte 0x34
                .byte 1
                .byte 0xA
                .byte 6
                .byte 5
                .byte 0xAB
                .byte 0
                .byte 0
                .byte 0xC
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_834A0:     .byte 0x27              # DATA XREF: ROM:0008348F↑o
                .long byte_834B5
                .byte 7
                .byte 0
                .byte 0xD
                .long byte_82DEA
                .byte 5
                .byte 0xB2
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_834B5:     .byte 0xF               # DATA XREF: ROM:000834A1↑o
                .long byte_834CA
                .byte 0x29
                .byte 8
                .byte 0xD
                .long byte_83392
                .byte 5
                .byte 0x25
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_834CA:     .byte 0xD               # DATA XREF: ROM:000834B6↑o
                .long byte_83392
                .byte 5
                .byte 0x26
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_834D8:     .byte 0x10              # DATA XREF: ROM:00083315↑o
byte_834D9:     .byte 0x27              # DATA XREF: ROM:00082BF9↑o
                .long byte_8350A
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_834F5
                .byte 0
                .byte 0
                .byte 1
                .byte 4
                .byte 0x18
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 1
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0x16
byte_834F5:     .byte 0xF               # DATA XREF: ROM:000834E1↑o
                .long byte_8350A
                .byte 0
                .byte 0
                .byte 2
                .byte 4
                .byte 0xC
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 2
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0xF
byte_8350A:     .byte 0x10              # DATA XREF: ROM:000834DA↑o
byte_8350B:     .byte 0x27              # DATA XREF: ROM:00082C00↑o
                .long byte_8351B
                .byte 0xB
                .byte 0x1D
                .byte 5
                .byte 0xD4
                .byte 0
                .byte 0xC
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8351B:     .byte 0x10              # DATA XREF: ROM:0008350C↑o
byte_8351C:     .byte 0x27              # DATA XREF: ROM:00082C07↑o
                .long byte_83575
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_83575
                .byte 0xD
                .long byte_83536
                .byte 5
                .byte 0xE5
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83536:     .byte 0xE               # DATA XREF: ROM:000833E3↑o
                .byte 2
                .byte 0
                .long byte_83542
                .byte 0x36
                .long byte_83536
byte_83542:     .byte 0x12              # DATA XREF: ROM:00083539↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_83558
                .byte 5
                .byte 0xE6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83558:     .byte 0xE               # DATA XREF: ROM:0008354B↑o
                .byte 2
                .byte 0
                .long byte_83564
                .byte 0x36
                .long byte_83558
byte_83564:     .byte 0x12              # DATA XREF: ROM:0008355B↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0xE8
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83575:     .byte 0x10              # DATA XREF: ROM:0008351D↑o
byte_83576:     .byte 0x27              # DATA XREF: ROM:00082C0E↑o
                .long byte_8357D
                .byte 0xB
                .byte 0x1D
byte_8357D:     .byte 0x10              # DATA XREF: ROM:00083577↑o
byte_8357E:     .byte 0x27              # DATA XREF: ROM:00082C15↑o
                .long byte_8358E
                .byte 0xB
                .byte 0x1D
                .byte 5
                .byte 0xD3
                .byte 0
                .byte 0xC
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8358E:     .byte 0x10              # DATA XREF: ROM:0008357F↑o
byte_8358F:     .byte 0x27              # DATA XREF: ROM:00082C1C↑o
                .long byte_835A4
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_835A4
                .byte 5
                .byte 0xE0
                .byte 0
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_835A4:     .byte 0x10              # DATA XREF: ROM:00083590↑o
byte_835A5:     .byte 0x27              # DATA XREF: ROM:00082C23↑o
                .long byte_835B5
                .byte 0xB
                .byte 0x1D
                .byte 5
                .byte 0xD5
                .byte 1
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_835B5:     .byte 0x10              # DATA XREF: ROM:000835A6↑o
byte_835B6:     .byte 0x27              # DATA XREF: ROM:00082C2A↑o
                .long byte_835FC
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_835CD
                .byte 0x38
                .byte 0xC
                .byte 5
                .byte 0x74
                .byte 0
                .byte 0x40
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_835CD:     .byte 0xF               # DATA XREF: ROM:000835BE↑o
                .long byte_835DD
                .byte 0x38
                .byte 0xA
                .byte 5
                .byte 0x74
                .byte 0
                .byte 0x40
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_835DD:     .byte 0xF               # DATA XREF: ROM:000835CE↑o
                .long byte_835FC
                .byte 0x13
                .long byte_835F0
                .byte 0
                .byte 0xDB
                .byte 1
                .byte 0x80
                .byte 0x8C
                .byte 0x5C
                .byte 0xB9
                .byte 0xF9
                .byte 8
byte_835F0:     .byte 0x16              # DATA XREF: ROM:000835E3↑o
                .byte 1
                .byte 0
                .byte 5
                .byte 0xDB
                .byte 1
                .byte 0
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_835FC:     .byte 0x10              # DATA XREF: ROM:000835B7↑o
byte_835FD:     .byte 0x27              # DATA XREF: ROM:00082C85↑o
                .long byte_83624
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_83624
                .byte 0x13
                .long byte_83618
                .byte 0
                .byte 0
                .byte 4
                .byte 2
                .byte 0x80
                .byte 0x8C
                .byte 0x34
                .byte 0xB9
                .byte 0xF9
                .byte 8
byte_83618:     .byte 0x16              # DATA XREF: ROM:0008360A↑o
                .byte 1
                .byte 0
                .byte 5
                .byte 4
                .byte 2
                .byte 0
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83624:     .byte 0x10              # DATA XREF: ROM:000835FE↑o
byte_83625:     .byte 0x27              # DATA XREF: ROM:00082C31↑o
                .long byte_8366C
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .byte 0x3C
                .byte 0x36
                .byte 8
                .byte 0
                .byte 0x38
                .byte 0xC
                .byte 5
                .byte 0xD5
                .byte 1
                .byte 0x40
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0xF
                .long byte_8364C
                .byte 0x38
                .byte 0xA
                .byte 5
                .byte 0xD5
                .byte 1
                .byte 0x40
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8364C:     .byte 0xF               # DATA XREF: ROM:0008363D↑o
                .long byte_8366C
                .byte 0x13
                .byte 0x60
                .byte 0x36
                .byte 8
                .byte 0
                .byte 0
                .byte 0
                .byte 0x5A
                .byte 1
                .byte 0x80
                .byte 0x8C
                .byte 0xEC
                .byte 0xB8
                .byte 0xF9
                .byte 8
                .byte 0x16
                .byte 1
                .byte 0
                .byte 5
                .byte 0x5A
                .byte 1
                .byte 0
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8366C:     .byte 0x10              # DATA XREF: ROM:00083626↑o
byte_8366D:     .byte 0x27              # DATA XREF: ROM:00082CA1↑o
                .long byte_83684
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_83684
                .byte 0x39
                .byte 0xA
                .byte 5
                .byte 0xED
                .byte 0x40
                .byte 0x80
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83684:     .byte 0x10              # DATA XREF: ROM:0008366E↑o
byte_83685:     .byte 0x39              # DATA XREF: ROM:00082CAF↑o
                .byte 0x14
                .byte 0x39
                .byte 0x15
                .byte 0x37
                .byte 0x1E
                .byte 0x10
byte_8368C:     .byte 0x27              # DATA XREF: ROM:00082CA8↑o
                .long byte_836F8
                .byte 7
                .byte 0
                .byte 0xF
                .long byte_836AB
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0x20
                .byte 2
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 5
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_836AB:     .byte 0xF               # DATA XREF: ROM:00083694↑o
                .long byte_836C3
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0x20
                .byte 1
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 6
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_836C3:     .byte 0xF               # DATA XREF: ROM:000836AC↑o
                .long byte_836DB
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0
                .byte 2
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 1
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_836DB:     .byte 0xF               # DATA XREF: ROM:000836C4↑o
                .long byte_836F3
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0
                .byte 1
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 2
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_836F3:     .byte 0x11              # DATA XREF: ROM:000836DC↑o
                .long byte_83758
byte_836F8:     .byte 0xF               # DATA XREF: ROM:0008368D↑o
                .long byte_83710
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0x20
                .byte 2
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 6
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83710:     .byte 0xF               # DATA XREF: ROM:000836F9↑o
                .long byte_83728
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0x20
                .byte 1
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 5
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83728:     .byte 0xF               # DATA XREF: ROM:00083711↑o
                .long byte_83740
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0
                .byte 2
                .byte 0x32
                .byte 1
                .short 0x3300
                .byte 2
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83740:     .byte 0xF               # DATA XREF: ROM:00083729↑o
                .long byte_83758
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0
                .byte 1
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 1
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83758:     .byte 0xF               # DATA XREF: ROM:000836F4↑o
                .long byte_83770
                .byte 8
                .byte 0xE
                .byte 1
                .byte 0x20
                .byte 0
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 4
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83770:     .byte 0xF               # DATA XREF: ROM:00083759↑o
                .long byte_83785
                .byte 8
                .byte 0xE
                .byte 0x32
                .byte 1
                .byte 0
                .byte 0x33
                .byte 0
                .byte 5
                .byte 0x7C
                .byte 0x41
                .byte 0
                .byte 0x1C
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83785:     .byte 0x10              # DATA XREF: ROM:00083771↑o
                .byte 0
                .byte 0
AMY_MOVES:      .byte 0xE               # DATA XREF: ROM:0001EFB4↑o
                .byte 1
                .byte 0
                .long byte_83870
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_83A56
                .byte 0xE
                .byte 3
                .byte 0
                .long byte_83C8B
                .byte 0xE
                .byte 5
                .byte 0
                .long byte_83BC5
                .byte 0xE
                .byte 6
                .byte 0
                .long byte_83CCD
                .byte 0xE
                .byte 7
                .byte 0
                .long byte_83D27
                .byte 0xE
                .byte 0
                .byte 0
                .long byte_83ED6
                .byte 0xE
                .byte 1
                .byte 2
                .long byte_83F08
                .byte 0xE
                .byte 2
                .byte 2
                .long byte_83F19
                .byte 0xE
                .byte 1
                .byte 4
                .long dword_83F70+3
                .byte 0xE
                .byte 2
                .byte 4
                .long dword_83F70+0xB
                .byte 0xE
                .byte 1
                .byte 1
                .long dword_83F70+0x1C
                .byte 0xE
                .byte 2
                .byte 1
                .long dword_83F9C+1
                .byte 0xE
                .byte 1
                .byte 3
                .long dword_83F9C+0x12
                .byte 0xE
                .byte 2
                .byte 3
                .long dword_8403C+1
                .byte 0xE
                .byte 5
                .byte 2
                .long byte_83F08
                .byte 0xE
                .byte 6
                .byte 2
                .long byte_83F19
                .byte 0xE
                .byte 5
                .byte 4
                .long dword_83F70+3
                .byte 0xE
                .byte 6
                .byte 4
                .long dword_83F70+0xB
                .byte 0xE
                .byte 5
                .byte 1
                .long dword_83F70+0x1C
                .byte 0xE
                .byte 6
                .byte 1
                .long dword_83F9C+1
                .byte 0xE
                .byte 5
                .byte 3
                .long dword_83F9C+0x12
                .byte 0xE
                .byte 6
                .byte 3
                .long dword_8403C+1
                .byte 0xE
                .byte 3
                .byte 2
                .long byte_83F08
                .byte 0xE
                .byte 3
                .byte 4
                .long dword_83F70+3
                .byte 0xE
                .byte 3
                .byte 1
                .long dword_83F70+0x1C
                .byte 0xE
                .byte 3
                .byte 3
                .long dword_84014+1
                .byte 0xE
                .byte 7
                .byte 2
                .long byte_83F08
                .byte 0xE
                .byte 7
                .byte 4
                .long dword_83F70+3
                .byte 0xE
                .byte 7
                .byte 1
                .long dword_83F70+0x1C
                .byte 0xE
                .byte 7
                .byte 3
                .long dword_84084+1
                .byte 0xE
                .byte 7
                .byte 6
                .long dword_8409C+8
                .byte 0xE
                .byte 0
                .byte 3
                .long dword_8409C+1
                .byte 0x10
byte_83870:     .byte 0x27              # DATA XREF: ROM:0008378B↑o
                .long byte_83880
                .byte 8
                .byte 0x1D
                .byte 5
                .byte 0xDB
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83880:     .byte 0xF               # DATA XREF: ROM:00083871↑o
                .long byte_838BF
                .byte 8
                .byte 0x1E
                .byte 0xF
                .long byte_8389C
                .byte 0x1B
                .byte 0x66
                .byte 0x66
                .byte 0x26
                .byte 0x40
                .byte 0x34
                .byte 5
                .byte 5
                .byte 0x69
                .byte 0
                .byte 0
                .byte 0xC
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8389C:     .byte 0xF               # DATA XREF: ROM:00083888↑o
                .long byte_838AC
                .byte 0x2A
                .byte 0xE
                .byte 5
                .byte 0x1C
                .byte 0
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_838AC:     .byte 0xF               # DATA XREF: ROM:0008389D↑o
                .long byte_838BF
                .byte 0x1A
                .byte 0
                .byte 0
                .byte 0x40
                .byte 0x40
                .byte 5
                .byte 0x1C
                .byte 0
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_838BF:     .byte 0x27              # DATA XREF: ROM:00083881↑o
                .long byte_838CF
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 0x1E
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_838CF:     .byte 0x27              # DATA XREF: ROM:000838C0↑o
                .long byte_838E4
                .byte 7
                .byte 0
byte_838D6:     .byte 0xD               # DATA XREF: ROM:00083BE4↓o
                .long byte_839E4
                .byte 5
                .byte 0x19
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_838E4:     .byte 0x28              # DATA XREF: ROM:000838D0↑o
                .long byte_838F1
                .byte 0x8A
                .byte 0x39
                .byte 8
                .byte 0
                .byte 0x8A
                .byte 0x39
                .byte 8
                .byte 0
byte_838F1:     .byte 0xF               # DATA XREF: ROM:000838E5↑o
                .long byte_8390B
                .byte 4
                .byte 0x10
                .byte 1
                .byte 0
                .byte 1
                .byte 3
                .byte 0x10
                .byte 1
                .byte 6
                .byte 1
                .byte 0x10
                .byte 0
                .byte 5
                .byte 0xB6
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8390B:     .byte 0xF               # DATA XREF: ROM:000838F2↑o
                .long byte_83924
                .byte 4
                .byte 0x10
                .byte 0
                .byte 0
                .byte 1
                .byte 1
                .byte 0
                .byte 0
                .byte 1
                .byte 0
                .byte 1
                .byte 5
                .byte 0x1B
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83924:     .byte 0xF               # DATA XREF: ROM:0008390C↑o
                .long byte_83937
                .byte 4
                .byte 8
                .byte 0
                .byte 0
                .byte 1
                .byte 5
                .byte 0x1D
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83937:     .byte 0xF               # DATA XREF: ROM:00083925↑o
                .long AMY_P_MOVE
                .byte 1
                .byte 0x10
                .byte 1
                .byte 0xD
                .byte 0x4D
                .byte 0x39
                .byte 8
                .byte 0
                .byte 5
                .byte 0x1A
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8394D:     .byte 0xE               # DATA XREF: ROM:00083955↓o
                .byte 1
                .byte 0
                .long byte_83959
                .byte 0x36
                .long byte_8394D
byte_83959:     .byte 0xF               # DATA XREF: ROM:00083950↑o
                .long byte_8396E
                .byte 1
                .byte 0
                .byte 1
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 4
                .byte 5
                .byte 0x1D
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_8396E:     .byte 0x10              # DATA XREF: ROM:0008395A↑o
AMY_P_MOVE:     .byte 0xF               # DATA XREF: ROM:00083938↑o
                .long byte_83985
                .byte 1
                .byte 0
                .byte 1
                .byte 0xD
                .long byte_839E4
                .byte 5
                .byte 0x16
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83985:     .byte 0x11              # DATA XREF: ROM:00083970↑o
                .long byte_8398A
byte_8398A:     .byte 0xF               # DATA XREF: ROM:00083986↑o
                .long byte_839A9
                .byte 8
                .byte 0x12
                .byte 4
                .byte 0x12
                .byte 1
                .byte 0x10
                .byte 0
                .byte 3
                .byte 0x20
                .byte 0
                .byte 0xFF
                .byte 1
                .byte 0x20
                .byte 0
                .byte 1
                .byte 0
                .byte 0
                .byte 5
                .byte 3
                .byte 2
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_839A9:     .byte 0xF               # DATA XREF: ROM:0008398B↑o
                .long AMY_DP_SQUISH_MOVE
                .byte 4
                .byte 0x12
                .byte 1
                .byte 0x10              # motion_num
                .byte 0
                .byte 3
                .byte 0x20
                .byte 0
                .byte 0xFF
                .byte 1
                .byte 0x20
                .byte 0
                .byte 1
                .byte 0
                .byte 0
                .byte 5
                .byte 5
                .byte 2
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
AMY_DP_SQUISH_MOVE:.byte 0xF            # DATA XREF: ROM:000839AA↑o
                .long byte_839D6
                .byte 2
                .byte 4
                .byte 5
                .byte 0x15              # motion_num
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_839D6:     .byte 0xD               # DATA XREF: ROM:000839C7↑o
                .long byte_839E4
                .byte 5
                .byte 0x16
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_839E4:     .byte 0xE               # DATA XREF: ROM:000838D7↑o
                .byte 1
                .byte 0
                .long byte_839F0
                .byte 0x36
                .long byte_839E4
byte_839F0:     .byte 0x12              # DATA XREF: ROM:000839E7↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_83A02
                .byte 5
                .byte 0x17
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83A02:     .byte 0xE               # DATA XREF: ROM:000839F5↑o
                .byte 1
                .byte 0
                .long byte_83A1F
                .byte 0x36
                .long byte_83A02
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0xF4
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83A1F:     .byte 0x12              # DATA XREF: ROM:00083A05↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_83A31
                .byte 5
                .byte 0x18
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83A31:     .byte 0xE               # DATA XREF: ROM:00083A24↑o
                .byte 1
                .byte 0
                .long byte_83A3D
                .byte 0x36
                .long byte_83A31
byte_83A3D:     .byte 0xF               # DATA XREF: ROM:00083A34↑o
                .long byte_83A55
                .byte 2
                .byte 5
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0xA
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0xA
                .byte 5
                .byte 0x4D
                .byte 1
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83A55:     .byte 0x10              # DATA XREF: ROM:00083A3E↑o
byte_83A56:     .byte 0x27              # DATA XREF: ROM:00083792↑o
                .long byte_83A66
                .byte 8
                .byte 0x1D
                .byte 5
                .byte 0xDB
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83A66:     .byte 0xF               # DATA XREF: ROM:00083A57↑o
                .long byte_83AA5
                .byte 8
                .byte 0x1E
                .byte 0xF
                .long byte_83A82
                .byte 0x1B
                .byte 0x66
                .byte 0x66
                .byte 0x26
                .byte 0x40
                .byte 0x34
                .byte 5
                .byte 5
                .byte 0x20
                .byte 0
                .byte 0
                .byte 0xC
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83A82:     .byte 0xF               # DATA XREF: ROM:00083A6E↑o
                .long byte_83A92
                .byte 0x2A
                .byte 0xE
                .byte 5
                .byte 0x2E
                .byte 0
                .byte 0
                .byte 0x26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83A92:     .byte 0xF               # DATA XREF: ROM:00083A83↑o
                .long byte_83AA5
                .byte 0x1A
                .byte 0
                .byte 0
                .byte 0x40
                .byte 0x40
                .byte 5
                .byte 0xD0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83AA5:     .byte 0x27              # DATA XREF: ROM:00083A67↑o
                .long byte_83AC1
                .byte 7
                .byte 5
                .byte 0xF
                .long byte_83AC1
                .byte 4
                .byte 6
                .byte 2
                .byte 4
                .byte 1
                .byte 0
                .byte 0
                .byte 5
                .byte 0x2E
                .byte 0
                .byte 0
                .byte 0x26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83AC1:     .byte 0x27              # DATA XREF: ROM:00083AA6↑o
                .long byte_83AD1
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 0x90
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83AD1:     .byte 0x27              # DATA XREF: ROM:00083AC2↑o
                .long byte_83AE1
                .byte 7
                .byte 0
byte_83AD8:     .byte 5                 # DATA XREF: ROM:00083CEC↓o
                .byte 0x91
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83AE1:     .byte 0x28              # DATA XREF: ROM:00083AD2↑o
                .long byte_83AEE
                .long byte_83B65
                .long byte_83B78
byte_83AEE:     .byte 0xF               # DATA XREF: ROM:00083AE2↑o
                .long byte_83B07
                .byte 4
                .byte 0x10
                .byte 0
                .byte 0
                .byte 1
                .byte 1
                .byte 0
                .byte 0
                .byte 1
                .byte 0
                .byte 1
                .byte 5
                .byte 0x90
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83B07:     .byte 0x20              # DATA XREF: ROM:00083AEF↑o
                .byte 1
                .byte 0xF
                .long byte_83B5E
                .byte 1
                .byte 0x10
                .byte 1
                .byte 0xD
                .long byte_83B1F
                .byte 5
                .byte 0x36
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83B1F:     .byte 0xE               # DATA XREF: ROM:00083B12↑o
                .byte 2
                .byte 0
                .long byte_83B2B
                .byte 0x36
                .long byte_83B1F
byte_83B2B:     .byte 0x12              # DATA XREF: ROM:00083B22↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_83B41
                .byte 5
                .byte 0x37
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83B41:     .byte 0xE               # DATA XREF: ROM:00083B34↑o
                .byte 2
                .byte 0
                .long byte_83B4D
                .byte 0x36
                .long byte_83B41
byte_83B4D:     .byte 0x12              # DATA XREF: ROM:00083B44↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0x38
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83B5E:     .byte 0x20              # DATA XREF: ROM:00083B0A↑o
                .byte 0
                .byte 0x11
                .long byte_83B78
byte_83B65:     .byte 0xF               # DATA XREF: ROM:00083AE6↑o
                .long byte_83B78
                .byte 0x3D
                .byte 1
                .byte 1
                .byte 0
                .byte 2
                .byte 5
                .byte 0xC5
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83B78:     .byte 0xD               # DATA XREF: ROM:00083AEA↑o
                .long byte_83B86
                .byte 5
                .byte 0xF0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83B86:     .byte 0xE               # DATA XREF: ROM:00083B79↑o
                .byte 2
                .byte 0
                .long byte_83B92
                .byte 0x36
                .long byte_83B86
byte_83B92:     .byte 0x12              # DATA XREF: ROM:00083B89↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0xD
                .long byte_83BA8
                .byte 5
                .byte 0xF2
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83BA8:     .byte 0xE               # DATA XREF: ROM:00083B9B↑o
                .byte 2
                .byte 0
                .long byte_83BB4
                .byte 0x36
                .long byte_83BA8
byte_83BB4:     .byte 0x12              # DATA XREF: ROM:00083BAB↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0
                .byte 5
                .byte 0xF4
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83BC5:     .byte 0x27              # DATA XREF: ROM:000837A0↑o
                .long byte_83C8A
                .byte 0xB
                .byte 0x1D
                .byte 0x27
                .long byte_83BDC
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 0x1E
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83BDC:     .byte 0x27              # DATA XREF: ROM:00083BCD↑o
                .long byte_83BE8
                .byte 7
                .byte 0
                .byte 0x11
                .long byte_838D6
byte_83BE8:     .byte 0xF               # DATA XREF: ROM:00083BDD↑o
                .long byte_83C0A
                .byte 1
                .byte 0
                .byte 1
                .byte 4
                .byte 0x1A
                .byte 1
                .byte 0x10
                .byte 1
                .byte 1
                .byte 0x10
                .byte 0
                .byte 1
                .byte 0x10
                .byte 2
                .byte 1
                .byte 0
                .byte 2
                .byte 1
                .byte 0
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0x33
                .byte 1
                .byte 0
                .byte 0
byte_83C0A:     .byte 0xF               # DATA XREF: ROM:00083BE9↑o
                .long byte_83C67
                .byte 1
                .byte 0x10
                .byte 0
                .byte 0xF
                .long byte_83C25
                .byte 0x21
                .byte 4
                .byte 0
                .byte 0
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xBB
                .byte 1
                .byte 0
                .byte 0
byte_83C25:     .byte 0xF               # DATA XREF: ROM:00083C13↑o
                .long byte_83C38
                .byte 0x21
                .byte 0x10
                .byte 0
                .byte 0
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xC0
                .byte 1
                .byte 0
                .byte 0
byte_83C38:     .byte 0xF               # DATA XREF: ROM:00083C26↑o
                .long byte_83C4B
                .byte 0x21
                .byte 0x80
                .byte 0
                .byte 0
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xE4
                .byte 1
                .byte 0
                .byte 0
byte_83C4B:     .byte 0xF               # DATA XREF: ROM:00083C39↑o
                .long byte_83C5E
                .byte 0x21
                .byte 0
                .byte 4
                .byte 0
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0xEC
                .byte 1
                .byte 0
                .byte 0
byte_83C5E:     .byte 5                 # DATA XREF: ROM:00083C4C↑o
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0x69
                .byte 0
                .byte 0
                .byte 0
byte_83C67:     .byte 0x27              # DATA XREF: ROM:00083C0B↑o
                .long byte_83C7C
                .byte 0x35
                .byte 5
                .byte 0xD
                .byte 0xE4
                .byte 0x39
                .byte 8
                .byte 0
                .byte 5
                .byte 0x16
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83C7C:     .byte 0xF               # DATA XREF: ROM:00083C68↑o
                .long byte_83C8A
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0x69
                .byte 0
                .byte 0
                .byte 0
byte_83C8A:     .byte 0x10              # DATA XREF: ROM:00083BC6↑o
byte_83C8B:     .byte 0x27              # DATA XREF: ROM:00083799↑o
                .long byte_83CCC
                .byte 0xB
                .byte 0x1D
                .byte 0x27
                .long byte_83CA2
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 0x1E
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83CA2:     .byte 0x27              # DATA XREF: ROM:00083C93↑o
                .long byte_83CAE
                .byte 7
                .byte 0
                .byte 0x11
                .long byte_838D6
byte_83CAE:     .byte 0x28              # DATA XREF: ROM:00083CA3↑o
                .long byte_83CCC
                .long byte_83CBB
                .long byte_83CCC
byte_83CBB:     .byte 0xF               # DATA XREF: ROM:00083CB3↑o
                .long byte_83CCC
                .byte 1
                .byte 0
                .byte 2
                .byte 5
                .byte 0xC8
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83CCC:     .byte 0x10              # DATA XREF: ROM:00083C8C↑o
byte_83CCD:     .byte 0x27              # DATA XREF: ROM:000837A7↑o
                .long byte_83D26
                .byte 0xB
                .byte 0x1D
                .byte 0x27
                .long byte_83CE4
                .byte 9
                .byte 0x1B
                .byte 5
                .byte 0x90
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83CE4:     .byte 0x27              # DATA XREF: ROM:00083CD5↑o
                .long byte_83CF0
                .byte 7
                .byte 0
                .byte 0x11
                .long byte_83AD8
byte_83CF0:     .byte 0x28              # DATA XREF: ROM:00083CE5↑o
                .byte 0xFD
                .byte 0x3C
                .byte 8
                .byte 0
                .long byte_83CFD
                .long byte_83CFD
byte_83CFD:     .byte 0xF               # DATA XREF: ROM:00083CF5↑o
                .long byte_83D18
                .byte 4
                .byte 8
                .byte 0
                .byte 0x10
                .byte 0
                .byte 4
                .byte 0x10
                .byte 1
                .byte 0
                .byte 0
                .byte 1
                .byte 0x10
                .byte 0
                .byte 5
                .byte 0xB3
                .byte 0
                .byte 4
                .byte 0x29
                .byte 0x20
                .byte 0
                .byte 0
                .byte 0
byte_83D18:     .byte 0xF               # DATA XREF: ROM:00083CFE↑o
                .long byte_83D26
                .byte 5
                .byte 0x35
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83D26:     .byte 0x10              # DATA XREF: ROM:00083CCE↑o
byte_83D27:     .byte 0x27              # DATA XREF: ROM:000837AE↑o
                .long byte_83ED5
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_83D45
                .byte 8
                .byte 0x1E
                .byte 0xF
                .long byte_83D45
                .byte 7
                .byte 0
                .byte 5
                .byte 9
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83D45:     .byte 0xF               # DATA XREF: ROM:00083D2F↑o
                .long byte_83D6F
                .byte 2
                .byte 8
                .byte 0xF
                .long byte_83D61
                .byte 0x29
                .byte 8
                .byte 0xD
                .long byte_83D99
                .byte 5
                .byte 0x27
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83D61:     .byte 0xD               # DATA XREF: ROM:00083D4D↑o
                .long byte_83D99
                .byte 5
                .byte 0x28
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83D6F:     .byte 0xF               # DATA XREF: ROM:00083D46↑o
                .long byte_83E8B
                .byte 2
                .byte 9
                .byte 0xF
                .long byte_83D8B
                .byte 0x29
                .byte 8
                .byte 0xD
                .long byte_83D99
                .byte 5
                .byte 0x25
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83D8B:     .byte 0xD               # DATA XREF: ROM:00083D77↑o
                .long byte_83D99
                .byte 5
                .byte 0x26
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83D99:     .byte 0xE               # DATA XREF: ROM:00083D54↑o
                .byte 1
                .byte 0
                .long byte_83DB3
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_83DDC
                .byte 0xE
                .byte 7
                .byte 0
                .long byte_83DF2
                .byte 0x36
                .long byte_83D99
byte_83DB3:     .byte 0xF               # DATA XREF: ROM:00083D9C↑o
                .long byte_83DCB
                .byte 2
                .byte 5
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0x10
                .byte 5
                .byte 0x1C
                .byte 0
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83DCB:     .byte 0x12              # DATA XREF: ROM:00083DB4↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0x10
                .byte 5
                .byte 0x1F
                .byte 0
                .byte 0
                .byte 0x26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83DDC:     .byte 0x12              # DATA XREF: ROM:00083DA3↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0x10
                .byte 0xD
                .long dword_83F30+3
                .byte 5
                .byte 0xE5
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83DF2:     .byte 0xF               # DATA XREF: ROM:00083DAA↑o
                .long byte_83E0F
                .byte 2
                .byte 8
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0xA
                .byte 0xD
                .long byte_83E42
                .byte 5
                .byte 0x27
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83E0F:     .byte 0xF               # DATA XREF: ROM:00083DF3↑o
                .long byte_83E2C
                .byte 2
                .byte 9
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0xA
                .byte 0xD
                .long byte_83E42
                .byte 5
                .byte 0x25
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83E2C:     .byte 0x12              # DATA XREF: ROM:00083E10↑o
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0xA
                .byte 0xD
                .long byte_83E42
                .byte 5
                .byte 0x25
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83E42:     .byte 0xE               # DATA XREF: ROM:00083E02↑o
                .byte 1
                .byte 0
                .long byte_83E5C
                .byte 0xE
                .byte 2
                .byte 0
                .long byte_83DDC
                .byte 0xE
                .byte 7
                .byte 0
                .long byte_83E5C
                .byte 0x36
                .long byte_83E42
byte_83E5C:     .byte 0xF               # DATA XREF: ROM:00083E45↑o
                .long byte_83E74
                .byte 2
                .byte 5
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0x10
                .byte 5
                .byte 0x1C
                .byte 0
                .byte 0x14
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83E74:     .byte 0xF               # DATA XREF: ROM:00083E5D↑o
                .long byte_83E8A
                .byte 0x12
                .byte 0xA
                .byte 8
                .byte 0
                .byte 0x1D
                .byte 0xA
                .byte 8
                .byte 0xA
                .byte 5
                .byte 0x1F
                .byte 0
                .byte 0
                .byte 0x26
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83E8A:     .byte 0x10              # DATA XREF: ROM:00083E75↑o
byte_83E8B:     .byte 0xF               # DATA XREF: ROM:00083D70↑o
                .long byte_83E9D
                .byte 0x34
                .byte 1
                .byte 0xA
                .byte 6
                .byte 5
                .byte 0xAB
                .byte 0
                .byte 0
                .byte 0xC
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83E9D:     .byte 0x27              # DATA XREF: ROM:00083E8C↑o
                .long byte_83EB2
                .byte 7
                .byte 0
                .byte 0xD
                .long byte_839E4
                .byte 5
                .byte 0x19
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83EB2:     .byte 0xF               # DATA XREF: ROM:00083E9E↑o
                .long byte_83EC7
                .byte 0x29
                .byte 8
                .byte 0xD
                .long byte_83D99
                .byte 5
                .byte 0x25
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83EC7:     .byte 0xD               # DATA XREF: ROM:00083EB3↑o
                .long byte_83D99
                .byte 5
                .byte 0x26
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83ED5:     .byte 0x10              # DATA XREF: ROM:00083D28↑o
byte_83ED6:     .byte 0x27              # DATA XREF: ROM:000837B5↑o
                .long byte_83F07
                .byte 0xB
                .byte 0x1D
                .byte 0xF
                .long byte_83EF2
                .byte 0
                .byte 0
                .byte 1
                .byte 4
                .byte 0x18
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 1
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0x16
byte_83EF2:     .byte 0xF               # DATA XREF: ROM:00083EDE↑o
                .long byte_83F07
                .byte 0
                .byte 0
                .byte 2
                .byte 4
                .byte 0xC
                .byte 1
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 2
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0xF
byte_83F07:     .byte 0x10              # DATA XREF: ROM:00083ED7↑o
byte_83F08:     .byte 0x27              # DATA XREF: ROM:000837BC↑o
                .long byte_83F18
                .byte 0xB
                .byte 0x1D
                .byte 5
                .byte 0x14
                .byte 0
                .byte 0xC
                .byte 6
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_83F18:     .byte 0x10              # DATA XREF: ROM:00083F09↑o
byte_83F19:     .byte 0x27              # DATA XREF: ROM:000837C3↑o
                .long dword_83F70+2
                .short 0x1D0B
                .long 0x83F720F, 0x3F330D00, 0xE5050008, 0
dword_83F30:    .long 0xE000000, 0x3F3F0002, 0x33360008, 0x1200083F, 0x1D00080A
                .long 0xD00080A, 0x83F55, 0xE605, 0
                .long 0x20E00, 0x83F61, 0x83F5536, 0x80A1200, 0x80A1D00
                .long 0xE80500, 0
dword_83F70:    .long 0x27100000, 0x83F7A, 0x27101D0B, 0x83F8B, 0xD3051D0B
                .long 0x60C00, 0x10000000, 0x83F9C27, 0x51D0B00, 0x614001C
                .long 0
dword_83F9C:    .long 0x3FAD2710, 0x1D0B0008, 0x1401D505, 6, 0x14271000
                .long 0xB000840, 0x3FC50F1D, 0xC380008, 0x40001C05, 6
                .long 0x3FD50F00, 0xA380008, 0x40001C05, 6, 0x3FF40F00
                .long 0xE8130008, 0x83F, 0x5C801E01, 0x8F9AF64, 0x5000116
                .long 0x6000001, 0
                .long 0x840140F, 0x40081300, 8, 0x5C801E14, 0x8F9AF44
                .long 0x5000116, 0x6080014, 0
dword_84014:    .long 0x403C2710, 0x1D0B0008, 0x8403C0F, 0x40301300, 8
                .long 0x8C800204, 0x8F9AF1C, 0x5000116, 0x6000204, 0
dword_8403C:    .long 0x40842710, 0x1D0B0008, 0x840540F, 0x50C3800, 0x64001D5
                .long 0
                .long 0x840640F, 0x50A3800, 0x64001D5, 0
                .long 0x840840F, 0x40781300, 8, 0x8C80015A, 0x8F9AED4
                .long 0x5000116, 0x600015A, 0
dword_84084:    .long 0x409C2710, 0x1D0B0008, 0x8409C0F, 0x50A3900, 0x68040ED
                .long 0
dword_8409C:    .long 0x39143910, 0x101E3715, 0x8411027, 0xF000700, 0x840C3
                .long 0x20010E08, 0x13202, 0x7C050533, 0x1C0041, 0xF000000
                .long 0x840DB, 0x20010E08, 0x13201, 0x7C050633, 0x1C0041
                .long 0xF000000, 0x840F3, 0x10E08, 0x13202, 0x7C050133
                .long 0x1C0041, 0xF000000, 0x8410B, 0x10E08, 0x13201, 0x7C050233
                .long 0x1C0041, 0x11000000, 0x84170, 0x841280F, 0x10E0800
                .long 0x1320220, 0x5063300, 0x1C00417C, 0
                .long 0x841400F, 0x10E0800, 0x1320120, 0x5053300, 0x1C00417C
                .long 0
                .long 0x841580F, 0x10E0800, 0x1320200, 0x5023300, 0x1C00417C
                .long 0
                .long 0x841700F, 0x10E0800, 0x1320100, 0x5013300, 0x1C00417C
                .long 0
                .long 0x841880F, 0x10E0800, 0x1320020, 0x5043300, 0x1C00417C
                .long 0
                .long 0x8419D0F, 0x320E0800, 0x330001, 0x417C05, 0x1C
                .long 0x1000
FANG_MOVES:     .long 0x8800010E, 0xE000842, 0x44D00002, 0x30E0008, 0x846F700
                .long 0x50E00, 0x84658, 0x3900060E, 0xE000847, 0x47F10007
                .long 0xE0008, 0x849C200, 0x2010E00, 0x849F4, 0x502020E
                .long 0xE00084A, 0x4A5F0401, 0x20E0008, 0x84A6704, 0x1010E00
                .long 0x84A78, 0x8E01020E, 0xE00084A, 0x4A9F0301, 0x20E0008
                .long 0x84B0D03, 0x2050E00, 0x849F4, 0x502060E, 0xE00084A
                .long 0x4A5F0405, 0x60E0008, 0x84A6704, 0x1050E00, 0x84A78
                .long 0x8E01060E, 0xE00084A, 0x4A9F0305, 0x60E0008, 0x84B0D03
                .long 0x2030E00, 0x849F4, 0x5F04030E, 0xE00084A, 0x4A780103
                .long 0x30E0008, 0x84AE503, 0x2070E00, 0x849F4, 0x5F04070E
                .long 0xE00084A, 0x4A780107, 0x70E0008, 0x84B5503, 0x6070E00
                .long 0x84B74, 0x6D03000E, 0x1000084B, 0x8429827, 0x51D0800
                .long 0xDB, 0
                .long 0x842EC0F, 0xF1E0800, 0x842AF, 0x9050007, 1, 0xF000000
                .long 0x842C4, 0x2666661B, 0x5053440, 0xC0000A7, 0
                .long 0x842D40F, 0x50E2A00, 0x6140179, 0
                .long 0x842EC0F, 0x1A00, 0x890D4040, 0x5000843, 0x5F, 0
                .long 0x842FC27, 0x51B0900, 0x104, 0
                .long 0x8430C27, 0x5000700, 0x11E, 0
                .long 0x8431928
                .long 0x8446200
                .long 0x8446200
                .long 0x43380F00, 0x10008, 0x11A0401, 0x10010110, 0x2100100
                .long 0x5020001, 0x1C4, 0
                .long 0x843580F, 0x180400, 0x10100, 0x1000100, 0xFF020003
                .long 0x5020001, 0x1BA, 0
                .long 0x843710F, 0x100400, 0x10100, 0x1000100, 0x5505
                .long 0
                .long 0x442E0F00, 0x8040008, 0xD010000, 0x84389, 0x5F05
                .long 0
                .long 0x10E00, 0x84395, 0x8438936, 0x80A1200, 0x80A1D00
                .long 0x43AB0D0A, 0x60050008, 0
                .long 0xE000000, 0x43B70001, 0xAB360008, 0x12000843, 0x1D00080A
                .long 0xD0A080A, 0x843CD, 0x6105, 0
                .long 0x10E00, 0x843D9, 0x843CD36, 0x80A1200, 0x80A1D00
                .long 0x43EF0D0A, 0x62050008, 0
                .long 0xE000000, 0x43FB0001, 0xEF360008, 0x12000843, 0x1D00080A
                .long 0xD0A080A, 0x84411, 0x6105, 0
                .long 0x10E00, 0x8441D, 0x8441136, 0x80A1200, 0x80A1D00
                .long 0x62050A, 0
                .long 0x5D0F0000, 0x1000844, 0x440D0110, 0x5000844, 0x192
                .long 0
                .long 0x5000010E, 0x36000844, 0x84444, 0x4080A12, 0x1C305
                .long 0
                .long 0x44621100, 0x700D0008, 0x5000844, 0x63, 0
                .long 0x7C00010E, 0x36000844, 0x84470, 0x80A12, 0x8448E0D
                .long 0x640500, 0
                .long 0x10E0000, 0x8449A00, 0x448E3600, 0xA120008, 0xAC0D0008
                .long 0x5000844, 0x65, 0
                .long 0xB800010E, 0x36000844, 0x844AC, 0x844CF0F, 0x80400
                .long 0xA120100, 0xC4050008, 1, 0x10000000, 0x844E027
                .long 0x51D0800, 0xDB, 0
                .long 0x8452F0F, 0xF1E0800, 0x844F7, 0x9050007, 1, 0xF000000
                .long 0x8450C, 0x2666661B, 0x5053440, 0xC000020, 0
                .long 0x8451C0F, 0x50E2A00, 0x26000053, 0
                .long 0x8452F0F, 0x1A00, 0x5C054040, 0
                .long 0x27000000, 0x8454B, 0x4B0F0507, 0x4000845, 0x1040206
                .long 0x53050000, 0x260000, 0x27000000, 0x8455B, 0xD0051B09
                .long 0
                .long 0x27000000, 0x8456B, 0xFF050007, 0
                .long 0x28000000, 0x84578, 0x845EF, 0x84602, 0x845910F
                .long 0x100400, 0x10100, 0x1000100, 0x5C05, 0
                .long 0xF012000, 0x845E8, 0xD011001, 0x845A9, 0x5905, 0
                .long 0x20E00, 0x845B5, 0x845A936, 0x80A1200, 0x80A1D00
                .long 0x45CB0D00, 0x5A050008, 0
                .long 0xE000000, 0x45D70002, 0xCB360008, 0x12000845, 0x1D00080A
                .long 0x500080A, 0x5B, 0
                .long 0x2110020, 0xF000846, 0x84602, 0x1013D, 0x1C50502
                .long 0
                .long 0x100D0000, 0x5000846, 0xF0, 0
                .long 0x1C00020E, 0x36000846, 0x84610, 0x80A12, 0x80A1D
                .long 0x846320D, 0xF20500, 0
                .long 0x20E0000, 0x8463E00, 0x46323600, 0xA120008, 0xA1D0008
                .long 0xF4050008, 0
                .long 0x5000000, 0xE8, 0
                .long 0x846F627, 0x271D0B00, 0x8466F, 0x4051B09, 1, 0x27000000
                .long 0x8467B, 0x3110007, 0xF000843, 0x846D8, 0xF001001
                .long 0x84696, 0x421, 0xB30500, 0x1BB2904, 0xA90F0000
                .long 0x21000846, 0x10, 0x400B305, 0x1C029, 0x46BC0F00
                .long 0x80210008, 0x5000000, 0x290400B3, 0x1E4, 0x846CF0F
                .long 0x4002100, 0xB3050000, 0xEC290400, 0x5000001, 0x290400B3
                .long 0x11C, 0x846ED27, 0xD053500, 0x84470, 0x6305, 0
                .long 0xB30500, 0x11C2904, 0x27100000, 0x84738, 0xE271D0B
                .long 0x9000847, 0x104051B, 0
                .long 0x1A270000, 0x7000847, 0x43031100, 0x38280008, 0x27000847
                .long 0x38000847, 0xF000847, 0x84738, 0x5020001, 0x1C8
                .long 0
                .long 0x47F02710, 0x1D0B0008, 0x8475027, 0x51B0900, 0xD0
                .long 0
                .long 0x8475C27
                .long 0x11000700
                .long 0x84562, 0x8476928, 0x8476900, 0x8478300, 0x47830F00
                .long 0x10040008, 0x3020001, 0x1FF0100, 0xB3050100, 0xA7290400
                .long 0xF000000, 0x8479E, 0x10000804, 0x1100400, 0x10010000
                .long 0xB30500, 0x202904, 0xF00F0000, 0xD000847, 0x847B1
                .long 0x5605, 0
                .long 0x20E00, 0x847BD, 0x847B136, 0x80A1200, 0x80A1D00
                .long 0x47D30D08, 0x57050008, 0
                .long 0xE000000, 0x47DF0002, 0xD3360008, 0x12000847, 0x1D00080A
                .long 0x508080A, 0x58, 0
                .long 0x49C12710, 0x1D0B0008, 0x8480F0F, 0xF1E0800, 0x8480F
                .long 0x9050007, 1, 0xF000000, 0x84839, 0x2B0F0802, 0x29000848
                .long 0x48630D08, 0x27050008, 1, 0xD000000, 0x84863, 0x12805
                .long 0
                .long 0x49770F00, 0x9020008, 0x848550F, 0xD082900, 0x84863
                .long 0x12505, 0
                .long 0x48630D00, 0x26050008, 1, 0xE000000, 0x487D0001
                .long 0x20E0008, 0x848C800, 0x70E00, 0x848DE, 0x8486336
                .long 0x48950F00, 0x5020008, 0x80A12, 0x10080A1D, 0x14017905
                .long 6, 0x48B20F00, 0x12080008, 0x804, 0x80A1201, 0x80A1D00
                .long 0x1D70510, 0
                .long 0xA120000
                .long 0xA1D0008
                .long 0x700D1008, 0x5000844, 0x63, 0
                .long 0x80A12, 0x10080A1D, 0x84A1F0D, 0xE50500, 0
                .long 0xFB0F0000, 0x2000848, 0x80A1208, 0x80A1D00, 0x492E0D0A
                .long 0x27050008, 1, 0xF000000, 0x84918, 0xA120902, 0xA1D0008
                .long 0x2E0D0A08, 0x5000849, 0x125, 0
                .long 0x80A12, 0xA080A1D, 0x8492E0D, 0x1250500, 0
                .long 0x10E0000, 0x8494800, 0x20E00, 0x848C8, 0x4800070E
                .long 0x36000849, 0x8492E, 0x849600F, 0x12050200, 0x1D00080A
                .long 0x510080A, 0x6140179, 0
                .long 0x849760F, 0x80A1200, 0x80A1D00, 0x66050A, 0x2600
                .long 0xF100000, 0x84989, 0x60A0134, 0xAB05, 0xC, 0x499E2700
                .long 0x70008, 0x844700D, 0x1B20500, 0
                .long 0xB30F0000, 0x29000849, 0x48630D08, 0x25050008, 1
                .long 0xD000000, 0x84863, 0x12605, 0
                .long 0xF3271000, 0xB000849, 0x49DE0F1D, 8, 0x1180401
                .long 0
                .long 0x601, 0xF30F1600, 0x849, 0xC040200, 1, 0x60200
                .long 0x100F0000, 0x84A0427, 0x51D0B00, 0x60C00D4, 0
                .long 0x4A5E2710, 0x1D0B0008, 0x84A5E0F, 0x4A1F0D00, 0xE5050008
                .long 0
                .long 0xE000000, 0x4A2B0002, 0x1F360008, 0x1200084A, 0x1D00080A
                .long 0xD00080A, 0x84A41, 0xE605, 0
                .long 0x20E00, 0x84A4D, 0x84A4136, 0x80A1200, 0x80A1D00
                .long 0xE80500, 0
                .long 0x27100000, 0x84A66, 0x27101D0B, 0x84A77, 0xD3051D0B
                .long 0x60C00, 0x10000000, 0x84A8D27, 0xF1D0B00, 0x84A8D
                .long 0x14017905, 6, 0x9E271000, 0xB00084A, 0x1D5051D
                .long 0x614, 0x27100000, 0x84AE4, 0xB60F1D0B, 0x3800084A
                .long 0x179050C, 0x640, 0xC60F0000, 0x3800084A, 0x179050A
                .long 0x640, 0xE40F0000, 0x1300084A, 0x84AD8, 0x8C8001D9
                .long 0x8F9A474, 0x5000116, 0x60001D9, 0
                .long 0x4B0C2710, 0x1D0B0008, 0x84B0C0F, 0x4B001300, 8
                .long 0x8C800204, 0x8F9A44C, 0x5000116, 0x6000204, 0
                .long 0x4B542710, 0x1D0B0008, 0x84B240F, 0x50C3800, 0x64001D5
                .long 0
                .long 0x84B340F, 0x50A3800, 0x64001D5, 0
                .long 0x84B540F, 0x4B481300, 8, 0x8C80015A, 0x8F9A404
                .long 0x5000116, 0x600015A, 0
                .long 0x4B6C2710, 0x1D0B0008, 0x84B6C0F, 0x50A3900, 0x68040ED
                .long 0
                .long 0x39143910, 0x101E3715, 0x84BE027, 0xF000700, 0x84B93
                .long 0x20010E08, 0x13202, 0x7C050533, 0x1C0041, 0xF000000
                .long 0x84BAB, 0x20010E08, 0x13201, 0x7C050633, 0x1C0041
                .long 0xF000000, 0x84BC3, 0x10E08, 0x13202, 0x7C050133
                .long 0x1C0041, 0xF000000, 0x84BDB, 0x10E08, 0x13201, 0x7C050233
                .long 0x1C0041, 0x11000000, 0x84C40, 0x84BF80F, 0x10E0800
                .long 0x1320220, 0x5063300, 0x1C00417C, 0
                .long 0x84C100F, 0x10E0800, 0x1320120, 0x5053300, 0x1C00417C
                .long 0
                .long 0x84C280F, 0x10E0800, 0x1320200, 0x5023300, 0x1C00417C
                .long 0
                .long 0x84C400F, 0x10E0800, 0x1320100, 0x5013300, 0x1C00417C
                .long 0
                .long 0x84C580F, 0x10E0800, 0x1320020, 0x5043300, 0x1C00417C
                .long 0
                .long 0x84C6D0F, 0x320E0800, 0x330001, 0x417C05, 0x1C
                .long 0x1000
KNUCKLES_MOVES: .long 0x5800010E, 0xE00084D, 0x4F990002, 0x30E0008, 0x8520D00
                .long 0x50E00, 0x85118, 0x5800060E, 0xE000852, 0x52B20007
                .long 0xE0008, 0x8546B00, 0x2010E00, 0x8549D, 0xAE02020E
                .long 0xE000854, 0x55080401, 0x20E0008, 0x8551004, 0x1010E00
                .long 0x85521, 0x3701020E, 0xE000855, 0x55480301, 0x20E0008
                .long 0x855B903, 0x2050E00, 0x8549D, 0xAE02060E, 0xE000854
                .long 0x55080405, 0x60E0008, 0x8551004, 0x1050E00, 0x85521
                .long 0x3701060E, 0xE000855, 0x55480305, 0x60E0008, 0x855B903
                .long 0x2030E00, 0x8549D, 0x804030E, 0xE000855, 0x55210103
                .long 0x30E0008, 0x8559103, 0x2070E00, 0x8549D, 0x804070E
                .long 0xE000855, 0x55210107, 0x70E0008, 0x8560103, 0x6070E00
                .long 0x85620, 0x1903000E, 0x10000856, 0x84D6827, 0x51D0800
                .long 0xDB, 0
                .long 0x84DBC0F, 0xF1E0800, 0x84D7F, 0x9050007, 1, 0xF000000
                .long 0x84D99, 0x2666661B, 0xD053440, 0x851C5, 0x8505
                .long 0xC, 0x4DA90F00, 0xE2A0008, 0x14017905, 6, 0x4DBC0F00
                .long 0x1A0008, 0x5404000, 0x120, 0
                .long 0x84DCC27, 0x51B0900, 0x104, 0
                .long 0x84DE127, 0xD000700, 0x84F2B, 0x1B205, 0
                .long 0x4DEE2800
                .fill 2, 4, 0x4ECE0008
                .long 0x70F0008, 0x400084E, 0x1000008, 0x1000001, 0xB7050100
                .long 1, 0xF000000, 0x84E26, 0x4010001, 0x110011A, 0x1001001
                .long 0x10210, 0x1000502, 0
                .long 0x390F0000, 0x400084E, 0x1000008, 0xE405, 0
                .long 0x4E610F00, 0x1C040008, 0x3011001, 0x1040110, 0x10030000
                .long 0x10010401, 0x1100301, 0x104, 0x1F205, 0
                .long 0x4EA20F00, 0x12080008, 0x10011204, 0x100101, 0x4021003
                .long 0xD010001, 0x84E85, 0x1F105, 0
                .long 0x10E00, 0x84E91, 0x84E8536, 0x80A1200, 0x80A1D1B
                .long 0x1F2051B, 0
                .long 0xB30F0000, 0x100084E, 0xB050110, 1, 0xF000000, 0x84EC9
                .long 0xD010001, 0x84F2B, 0x8C05, 0
                .long 0x4ECE1100, 0x1D0F0008, 0x200084F, 0x1200504, 0
                .long 0x10E0000, 0x84EEA00, 0x4EDE3600, 0x8120008, 0x81D0A08
                .long 0xD1408, 0x500084F, 0x159, 0
                .long 0xC00010E, 0x3600084F, 0x84F00, 0x80812, 0x8081D
                .long 0x15905, 0
                .long 0x4F2B0D00, 0x8C050008, 0
                .long 0xE000000, 0x4F560001, 0x20E0008, 0x84F4500, 0x70E00
                .long 0x84F7B, 0x84F2B36, 0x80A1200, 0x80A1D00, 0x1230500
                .long 0
                .long 0xA120000
                .long 0x680D0008, 0x500084F, 0x8D, 0
                .long 0x8C00010E, 0xE00084F, 0x4F7B0007, 0x68360008, 0x1200084F
                .long 0x1D08080A, 0x508080A, 0x290400AC, 0xAB, 0x80A12
                .long 0x8E05, 0
                .long 0x4FA92700, 0x1D080008, 0xDB05, 0
                .long 0x4FF80F00, 0x1E080008, 0x84FC00F, 0x5000700, 0x109
                .long 0
                .long 0x84FD50F, 0x66661B00, 0x5344026, 0x2005, 0xC, 0x4FE50F00
                .long 0xE2A0008, 0x2E05, 0x26, 0x4FF80F00, 0x1A0008, 0x5404000
                .long 0x120, 0
                .long 0x8501427, 0xF050700, 0x85014, 0x4020604, 0x5000001
                .long 0x2600002E, 0
                .long 0x8502427
                .long 0x51B0900
                .long 0x102, 0
                .long 0x8503427
                .long 0x5000700
                .long 0xFF, 0
                .long 0x8504128
                .long 0x850B800
                .long 0x850CB00
                .long 0x505A0F00, 0x10040008, 0x1010000, 0x10000, 0x1350501
                .long 0
                .long 0x1200000, 0x850B10F, 0x1100100, 0x850720D, 0xEF0500
                .long 0
                .long 0x20E0000, 0x8507E00, 0x50723600, 0xA120008, 0xA1D0008
                .long 0x940D0008, 0x5000850, 0xF1, 0
                .long 0xA000020E, 0x36000850, 0x85094, 0x80A12, 0x80A1D
                .long 0xF305, 0
                .long 0x11002000, 0x850CB, 0x850CB0F, 0x1013D00, 0xC5050200
                .long 1, 0xD000000, 0x850D9, 0xF005, 0
                .long 0x20E00, 0x850E5, 0x850D936, 0x80A1200, 0x80A1D00
                .long 0x50FB0D00, 0xF2050008, 0
                .long 0xE000000, 0x51070002, 0xFB360008, 0x12000850, 0x1D00080A
                .long 0x500080A, 0xF4, 0
                .long 0x8520C27, 0x271D0B00, 0x8512F, 0x4051B09, 1, 0x27000000
                .long 0x8513B, 0xD3110007, 0xF00084D, 0x8519D, 0xF001001
                .long 0x85156, 0x421, 0x1E70500, 0x1BB2904, 0x690F0000
                .long 0x21000851, 0x10, 0x401E705, 0x1C029, 0x517C0F00
                .long 0x80210008, 0x5000000, 0x290401E7, 0x1E4, 0x8518F0F
                .long 0x4002100, 0xB3050000, 0xEC290400, 0xD000001, 0x851C5
                .long 0x401E705, 0x8529, 0x51B22700, 0x5350008, 0x84F2B0D
                .long 0xF90500, 0
                .long 0xC0F0000, 0xD000852, 0x851C5, 0x401E705, 0x8529
                .long 0x10E00, 0x851D1, 0x851C536, 0x51EE0F00, 0x133C0008
                .long 0x80A12, 0x80A1D, 0x851EF0D, 0x870500, 0xC00, 0xE100000
                .long 0x51FB0001, 0xEF360008, 0x12000851, 0x1D00080A, 0x500080A
                .long 0xC000089, 0
                .long 0x52572710, 0x1D0B0008, 0x8522427, 0x51B0900, 0x104
                .long 0
                .long 0x8523027
                .long 0x11000700
                .long 0x84DD3, 0x8524E28, 0x8523D00, 0x8524E00, 0x524E0F00
                .long 0x10008, 0x1C80502, 0
                .long 0x8F050000, 0
                .long 0x10000000, 0x852B127, 0x271D0B00, 0x8526F, 0x2051B09
                .long 1, 0x27000000, 0x8527B, 0x2B110007, 0x28000850
                .fill 3, 4, 0x85288
                .long 0x852A30F, 0x80400, 0x10040010, 0x1000001, 0xE7050010
                .long 0x20290401, 0xF000000, 0x852B1, 0xEE05, 0
                .long 0x6A271000, 0xB000854, 0x52D00F1D, 0x1E080008, 0x852D00F
                .long 0x5000700, 0x109, 0
                .long 0x852FA0F, 0xF080200, 0x852EC, 0x240D0829, 0x5000853
                .long 0x127, 0
                .long 0x853240D
                .long 0x1280500
                .long 0
                .long 0x200F0000, 0x2000854, 0x53160F09, 0x8290008, 0x853240D
                .long 0x1250500, 0
                .long 0x240D0000, 0x5000853, 0x126, 0
                .long 0x3E00010E, 0xE000853, 0x536C0002, 0x70E0008, 0x8538200
                .long 0x53243600, 0x560F0008, 0x2000853, 0x80A1205, 0x80A1D00
                .long 0x1790510, 0x614, 0xA120000, 0xA1D0008, 0x2B0D1008
                .long 0x500084F, 0x2600010C, 0
                .long 0x80A12, 0x10080A1D, 0x854C80D, 0xE50500, 0
                .long 0x9F0F0000, 0x2000853, 0x80A1208, 0x80A1D00, 0x53D20D0A
                .long 0x27050008, 1, 0xF000000, 0x853BC, 0xA120902, 0xA1D0008
                .long 0xD20D0A08, 0x5000853, 0x125, 0
                .long 0x80A12, 0xA080A1D, 0x853D20D, 0x1250500, 0
                .long 0x10E0000, 0x853EC00, 0x20E00, 0x8536C, 0xEC00070E
                .long 0x36000853, 0x853D2, 0x854040F, 0x12050200, 0x1D00080A
                .long 0x510080A, 0x6140179, 0
                .long 0x8541F0F, 0x80A1200, 0x80A1D00, 0x4F2B0D10, 0xC050008
                .long 0x260001, 0x10000000, 0x854320F, 0xA013400, 0xAB0506
                .long 0xC00, 0x47270000, 0x7000854, 0x4F2B0D00, 0xB2050008
                .long 1, 0xF000000, 0x8545C, 0x240D0829, 0x5000853, 0x125
                .long 0
                .long 0x853240D
                .long 0x1260500
                .long 0
                .long 0x27100000, 0x8549C, 0x870F1D0B, 0x854, 0x18040100
                .long 1, 0x60100, 0xF160000, 0x8549C, 0x4020000, 0x10C
                .long 0x6020000, 0xF000000, 0x54AD2710, 0x1D0B0008, 0xC00D405
                .long 6, 0x7271000, 0xB000855, 0x55070F1D, 0xC80D0008
                .long 0x5000854, 0xE5, 0
                .long 0xD400020E, 0x36000854, 0x854C8, 0x80A12, 0x80A1D
                .long 0x854EA0D, 0xE60500, 0
                .long 0x20E0000, 0x854F600, 0x54EA3600, 0xA120008, 0xA1D0008
                .long 0xE8050008, 0
                .long 0x10000000, 0x8550F27, 0x101D0B00, 0x8552027, 0x51D0B00
                .long 0x60C00D3, 0
                .long 0x55362710, 0x1D0B0008, 0x855360F, 0x1790500, 0x614
                .long 0x27100000, 0x85547, 0xD5051D0B, 0x61401, 0x10000000
                .long 0x8559027, 0xF1D0B00, 0x8555F, 0x74050C38, 0x64000
                .long 0xF000000, 0x8556F, 0x74050A38, 0x64000, 0xF000000
                .long 0x85590, 0x8558413, 0
                .long 0x8C8001DB
                .long 0x8F999C8
                .long 0x5000116, 0x60001DB, 0
                .long 0x55B82710, 0x1D0B0008, 0x855B80F, 0x55AC1300, 8
                .long 0x8C800204, 0x8F999A0, 0x5000116, 0x6000204, 0
                .long 0x56002710, 0x1D0B0008, 0x855D00F, 0x50C3800, 0x64001D5
                .long 0
                .long 0x855E00F, 0x50A3800, 0x64001D5, 0
                .long 0x856000F, 0x55F41300, 8, 0x8C80015A, 0x8F99958
                .long 0x5000116, 0x600015A, 0
                .long 0x56182710, 0x1D0B0008, 0x856180F, 0x50A3900, 0x68040ED
                .long 0
                .long 0x39143910, 0x101E3715, 0x8568C27, 0xF000700, 0x8563F
                .long 0x20010E08, 0x13202, 0x7C050533, 0x1C0041, 0xF000000
                .long 0x85657, 0x20010E08, 0x13201, 0x7C050633, 0x1C0041
                .long 0xF000000, 0x8566F, 0x10E08, 0x13202, 0x7C050133
                .long 0x1C0041, 0xF000000, 0x85687, 0x10E08, 0x13201, 0x7C050233
                .long 0x1C0041, 0x11000000, 0x856EC, 0x856A40F, 0x10E0800
                .long 0x1320220, 0x5063300, 0x1C00417C, 0
                .long 0x856BC0F, 0x10E0800, 0x1320120, 0x5053300, 0x1C00417C
                .long 0
                .long 0x856D40F, 0x10E0800, 0x1320200, 0x5023300, 0x1C00417C
                .long 0
                .long 0x856EC0F, 0x10E0800, 0x1320100, 0x5013300, 0x1C00417C
                .long 0
                .long 0x857040F, 0x10E0800, 0x1320020, 0x5043300, 0x1C00417C
                .long 0
                .long 0x857190F, 0x320E0800, 0x330001, 0x417C05, 0x1C
                .long 0x1000
METAL_SONIC_MOVES:.long 0x400010E       # DATA XREF: ROM:0001EFB8↑o
                .long 0xE000858
                .long 0x59270002
                .long 0x30E0008
                .long 0x859D800
                .long 0x50E00
                .long 0x859AB
                .long 0x1200060E
                .long 0xE00085A
                .long 0x5A510007
                .long 0xE0008
                .long 0x85B9400
                .long 0x2010E00
                .long 0x85BC6
                .long 0xD702020E
                .long 0xE00085B
                .long 0x5BE80401
                .long 0x20E0008
                .long 0x85BF004
                .long 0x1010E00
                .long 0x85C01
                .long 0x1701020E
                .long 0xE00085C
                .long 0x5C280301
                .long 0x20E0008
                .long 0x85C9903
                .long 0x2050E00
                .long 0x85BC6
                .long 0xD702060E
                .long 0xE00085B
                .long 0x5BE80405
                .long 0x60E0008
                .long 0x85BF004
                .long 0x1050E00
                .long 0x85C01
                .long 0x1701060E
                .long 0xE00085C
                .long 0x5C280305
                .long 0x60E0008
                .long 0x85C9903
                .long 0x2030E00
                .long 0x85BC6
                .long 0xE804030E
                .long 0xE00085B
                .long 0x5C010103
                .long 0x30E0008
                .long 0x85C2803
                .long 0x2070E00
                .long 0x85BC6
                .long 0xE804070E
                .long 0xE00085B
                .long 0x5C010107
                .long 0x70E0008
                .long 0x85CE103
                .long 0x6070E00
                .long 0x85D00
                .long 0xF903000E
                .long 0x1000085C
                .long 0x8581427
                .long 0x51D0800
                .long 0xDB
                .long 0
                .long 0x8582427
                .long 0x51B0900
                .long 0x104, 0
                .long 0x8583927
                .long 0xD000700
                .long 0x858DF, 0x1B205, 0
                .long 0x58462800, 0x58930008, 0x58C10008, 0x5F0F0008, 0x4000858
                .long 0x1000010, 0x1000001, 0xD6050100, 1, 0xF000000, 0x8588E
                .long 0xD011001, 0x85875, 0x15305, 0
                .long 0x10E00, 0x85881, 0x8587536, 0x80A1200, 0x1540504
                .long 0
                .long 0xC1110000, 0xF000858, 0x858C1, 0x5020001, 0xB2
                .long 0
                .long 0xB000010E, 0x36000858, 0x858A4, 0x80A12, 0x80A1D
                .long 0x10505, 0
                .long 0x58D10F00, 0x4020008, 0x10B05, 0
                .long 0x58DF0D00, 0x47050008, 1, 0xE000000, 0x58EB0001
                .long 0xDF360008, 0x12000858, 0xD00080A, 0x858FD, 0x14805
                .long 0
                .long 0x10E00, 0x8591A, 0x858FD36, 0x80A1200, 0x80A1D00
                .long 0x1450500, 0
                .long 0xA120000
                .long 0xB2050608, 0
                .long 0x27000000, 0x85937, 0xDB051D08, 0
                .long 0x27000000, 0x85953, 0x530F0507, 0x4000859, 0x1040206
                .long 0x2E050000, 0x260000, 0x27000000, 0x85963, 0x2051B09
                .long 1, 0x27000000, 0x85973, 0xFF050007, 0
                .long 0x28000000, 0x85980
                .fill 2, 4, 0x859A2
                .long 0x859990F, 0x100400, 0x10100, 0x1000100, 0x13505
                .long 0
                .long 0x20012000, 0x59A21100, 0x52050008, 1, 0x27000000
                .long 0x859D7, 0xC2271D0B, 0x9000859, 0x104051B, 0
                .long 0xCE270000, 0x7000859, 0x582B1100, 0xB3050008, 0xD0290400
                .long 0x10000001, 0x85A1127, 0x271D0B00, 0x859EF, 0x4051B09
                .long 1, 0x27000000, 0x859FB, 0x2B110007, 0x28000858
                .fill 3, 4, 0x85A08
                .long 0x14605, 0
                .long 0x50271000, 0xB00085A, 0x5A29271D, 0x1B090008, 0x10205
                .long 0
                .long 0x5A352700, 0x70008, 0x8596A11, 0x5A422800
                .fill 2, 4, 0x5A420008
                .long 0x500F0008, 0x500085A, 0xEE, 0
                .long 0x5B932710, 0x1D0B0008, 0x85A6427, 0x11000700, 0x8582B
                .long 0x85A790F, 0xD080200, 0x85A8E, 0x14505, 0
                .long 0x5B850F00, 0x9020008, 0x85A8E0D, 0x1440500, 0
                .long 0x10E0000, 0x85AB900, 0x30E00, 0x85AA8, 0xE700070E
                .long 0x3600085A, 0x85A8E, 0x80A12, 0x10080A1D, 0x14605
                .long 0
                .long 0x5AD10F00, 0x5020008, 0x80A12, 0x10080A1D, 0x14014C05
                .long 6, 0x80A1200, 0x80A1D00, 0x58750D10, 0x55050008
                .long 1, 0xF000000, 0x85B04, 0xA120802, 0xA1D0008, 0x370D0A08
                .long 0x500085B, 0x145, 0
                .long 0x85B210F, 0x12090200, 0x1D00080A, 0xD0A080A, 0x85B37
                .long 0x14405, 0
                .long 0x80A1200, 0x80A1D00, 0x5B370D0A, 0x44050008, 1
                .long 0xE000000, 0x5B510001, 0x30E0008, 0x85AA800, 0x70E00
                .long 0x85B51, 0x85B3736, 0x5B690F00, 0x5020008, 0x80A12
                .long 0x10080A1D, 0x14014C05, 6, 0x5B840F00, 0xA120008
                .long 0xA1D0008, 0x750D1008, 0x5000858, 0x155, 0
                .long 0x5A8E0D10, 0x44050008, 1, 0x10000000, 0x85BC527
                .long 0xF1D0B00, 0x85BB0, 0x4010000, 0x118, 0x6010000
                .long 0x16000000, 0x85BC50F, 0x2000000, 0x10C04, 0x2000000
                .long 6, 0xD627100F, 0xB00085B, 0xD4051D, 0x60C, 0x27100000
                .long 0x85BE7, 0xD2051D0B, 0x60C00, 0x10000000, 0x85BEF27
                .long 0x101D0B00, 0x85C0027, 0x51D0B00, 0x60C00D3, 0
                .long 0x5C162710, 0x1D0B0008, 0x85C160F, 0x14C0500, 0x614
                .long 0x27100000, 0x85C27, 0x57051D0B, 0x61401, 0x10000000
                .long 0x85C7027, 0xF1D0B00, 0x85C3F, 0x4C050C38, 0x64001
                .long 0xF000000, 0x85C4F, 0x4C050A38, 0x64001, 0xF000000
                .long 0x85C70, 0x85C6413, 0
                .long 0x5C801E01
                .long 0x8F992E8
                .long 0x5000116, 0x6000001, 0
                .long 0x5C982710, 0x1D0B0008, 0x85C980F, 0x5C8C1300, 8
                .long 0x8C800204, 0x8F992C0, 0x5000116, 0x6000204, 0
                .long 0x5CE02710, 0x1D0B0008, 0x85CB00F, 0x50C3800, 0x6400157
                .long 0
                .long 0x85CC00F, 0x50A3800, 0x6400157, 0
                .long 0x85CE00F, 0x5CD41300, 8, 0x8C80015A, 0x8F99278
                .long 0x5000116, 0x600015A, 0
                .long 0x5CF82710, 0x1D0B0008, 0x85CF80F, 0x50A3900, 0x68040ED
                .long 0
                .long 0x39143910, 0x101E3715, 0x85D6C27, 0xF000700, 0x85D1F
                .long 0x20010E08, 0x13202, 0x7C050533, 0x1C0041, 0xF000000
                .long 0x85D37, 0x20010E08, 0x13201, 0x7C050633, 0x1C0041
                .long 0xF000000, 0x85D4F, 0x10E08, 0x13202, 0x7C050133
                .long 0x1C0041, 0xF000000, 0x85D67, 0x10E08, 0x13201, 0x7C050233
                .long 0x1C0041, 0x11000000, 0x85DCC, 0x85D840F, 0x10E0800
                .long 0x1320220, 0x5063300, 0x1C00417C, 0
                .long 0x85D9C0F, 0x10E0800, 0x1320120, 0x5053300, 0x1C00417C
                .long 0
                .long 0x85DB40F, 0x10E0800, 0x1320200, 0x5023300, 0x1C00417C
                .long 0
                .long 0x85DCC0F, 0x10E0800, 0x1320100, 0x5013300, 0x1C00417C
                .long 0
                .long 0x85DE40F, 0x10E0800, 0x1320020, 0x5043300, 0x1C00417C
                .long 0
                .long 0x85DF90F, 0x320E0800, 0x330001, 0x417C05, 0x1C
                .long 0x1000
EGGMAN_MOVES:   .long 0xE400010E, 0xE00085E, 0x601F0002, 0x30E0008, 0x8617400
                .long 0x50E00, 0x86142, 0xA500060E, 0xE000861, 0x61E40007
                .long 0xE0008, 0x8634600, 0x2010E00, 0x86378, 0x8902020E
                .long 0xE000863, 0x639A0401, 0x20E0008, 0x863A204, 0x1010E00
                .long 0x863B3, 0xC901020E, 0xE000863, 0x63DA0301, 0x20E0008
                .long 0x8644903, 0x2050E00, 0x86378, 0x8902060E, 0xE000863
                .long 0x639A0405, 0x60E0008, 0x863A204, 0x1050E00, 0x863B3
                .long 0xC901060E, 0xE000863, 0x63DA0305, 0x60E0008, 0x8644903
                .long 0x2030E00, 0x86378, 0x9A04030E, 0xE000863, 0x63B30103
                .long 0x30E0008, 0x8642103, 0x2070E00, 0x86378, 0x9A04070E
                .long 0xE000863, 0x63B30107, 0x70E0008, 0x8649103, 0x6070E00
                .long 0x864B0, 0xA903000E, 0x10000864, 0x85EF427, 0x51D0800
                .long 0xDB, 0
                .long 0x85F0427, 0x51B0900, 0x104, 0
                .long 0x85F1927, 0xD000700, 0x85FD0, 0x1B205, 0
                .long 0x5F262800
                .fill 2, 4, 0x5FC20008
                .long 0x3F0F0008, 0x400085F, 0x1000010, 0x1000001, 0x29050100
                .long 1, 0xF000000, 0x85F96, 0x804, 0x5F570D01, 0x2A050008
                .long 1, 0xE000000, 0x5F630001, 0x57360008, 0x1200085F
                .long 0x1D00080A, 0xD00080A, 0x85F79, 0x12B05, 0
                .long 0x10E00, 0x85F85, 0x85F7936, 0x80A1200, 0x80A1D00
                .long 0x12C0500, 0
                .long 0xA70F0000, 0x100085F, 0x1050110, 1, 0xF000000, 0x85FBD
                .long 0xD010001, 0x85FD0, 0xF905, 0
                .long 0x5FC21100, 0xD00D0008, 0x500085F, 0xF9, 0
                .long 0xF400010E, 0xE00085F, 0x5FE30002, 0xD0360008, 0x1200085F
                .long 0x1D00080A, 0x500080A, 0x123, 0
                .long 0x80A12, 0x860060D, 0xFA0500, 0
                .long 0x10E0000, 0x8601200, 0x60063600, 0xA120008, 0xFC050008
                .long 0
                .long 0x27000000, 0x8602F, 0xDB051D08, 0
                .long 0x27000000, 0x8604B, 0x4B0F0507, 0x4000860, 0x1040206
                .long 0x2E050000, 0x260000, 0x27000000, 0x8605B, 0x2051B09
                .long 1, 0x27000000, 0x86070, 0x20D0007, 0x5000861, 0xFF
                .long 0
                .long 0x8607D28
                .long 0x860F400
                .long 0x860F400
                .long 0x60960F00, 0x10040008, 0x1010000, 0x10000, 0x1350501
                .long 0
                .long 0x1200000, 0x860ED0F, 0x1100100, 0x860AE0D, 0xF00500
                .long 0
                .long 0x20E0000, 0x860BA00, 0x60AE3600, 0xA120008, 0xA1D0008
                .long 0xD00D0008, 0x5000860, 0xF2, 0
                .long 0xDC00020E, 0x36000860, 0x860D0, 0x80A12, 0x80A1D
                .long 0xF405, 0
                .long 0x11002000, 0x860F4, 0x861020D, 0xE50500, 0
                .long 0x20E0000, 0x8610E00, 0x61023600, 0xA120008, 0xA1D0008
                .long 0x240D0008, 0x5000861, 0xE6, 0
                .long 0x3000020E, 0x36000861, 0x86124, 0x80A12, 0x80A1D
                .long 0xE805, 0
                .long 0x73271000, 0xB000861, 0x6159271D, 0x1B090008, 0x10405
                .long 0
                .long 0x61652700, 0x70008, 0x85F0B11, 0x61730F00, 0xB3050008
                .long 0x24290400, 0x10000000, 0x861A427, 0x271D0B00, 0x8618B
                .long 0x4051B09, 1, 0x27000000, 0x86197, 0xB110007, 0x2800085F
                .fill 3, 4, 0x861A4
                .long 0x61E32710, 0x1D0B0008, 0x861BC27, 0x51B0900, 0x102
                .long 0
                .long 0x861C827, 0x11000700, 0x86062, 0x861D528
                .fill 2, 4, 0x861D500
                .long 0x61E30F00, 0xEE050008, 0
                .long 0x10000000, 0x8634527, 0xF1D0B00, 0x86215, 0x70F0802
                .long 0x29000862, 0x623F0D08, 0x27050008, 1, 0xD000000
                .long 0x8623F, 0x12805, 0
                .long 0x63100F00, 0x9020008, 0x862310F, 0xD082900, 0x8623F
                .long 0x12505, 0
                .long 0x623F0D00, 0x26050008, 1, 0xE000000, 0x62520001
                .long 0x70E0008, 0x8628000, 0x623F3600, 0x6A0F0008, 0x2000862
                .long 0x80A1205, 0x80A1D00, 0x1790510, 0x614, 0xA120000
                .long 0xA1D0008, 0xD00D1008, 0x500085F, 0x10C, 0
                .long 0x8629D0F, 0x12080200, 0x1D00080A, 0xD0A080A, 0x862D0
                .long 0x12705, 0
                .long 0x62BA0F00, 0x9020008, 0x80A12, 0xA080A1D, 0x862D00D
                .long 0x1250500, 0
                .long 0xA120000
                .long 0xA1D0008
                .long 0xD00D0A08, 0x5000862, 0x125, 0
                .long 0xDC00010E, 0x36000862, 0x862D0, 0x862F40F, 0x12050200
                .long 0x1D00080A, 0x510080A, 0x6140179, 0
                .long 0x8630F0F, 0x80A1200, 0x80A1D00, 0x5FD00D10, 0xC050008
                .long 1, 0x10000000, 0x863220F, 0xA013400, 0xAB0506, 0xC00
                .long 0x370F0000, 0x29000863, 0x623F0D08, 0x25050008, 1
                .long 0xD000000, 0x8623F, 0x12605, 0
                .long 0x77271000, 0xB000863, 0x63620F1D, 8, 0x1180401
                .long 0
                .long 0x601, 0x770F1600, 0x863, 0xC040200, 1, 0x60200
                .long 0x100F0000, 0x8638827, 0x51D0B00, 0x60C00D4, 0
                .long 0x63992710, 0x1D0B0008, 0xC00D205, 6, 0xA1271000
                .long 0xB000863, 0xB227101D, 0xB000863, 0xD3051D, 0x60C
                .long 0x27100000, 0x863C8, 0xC80F1D0B, 0x5000863, 0x6140179
                .long 0
                .long 0x63D92710, 0x1D0B0008, 0x14015705, 6, 0x20271000
                .long 0xB000864, 0x63F10F1D, 0xC380008, 0x40017905, 6
                .long 0x64010F00, 0xA380008, 0x40017905, 6, 0x64200F00
                .long 0x14130008, 0x864, 0x5C801E01, 0x8F98B38, 0x5000116
                .long 0x6000001, 0
                .long 0x64482710, 0x1D0B0008, 0x864480F, 0x643C1300, 8
                .long 0x8C800204, 0x8F98B10, 0x5000116, 0x6000204, 0
                .long 0x64902710, 0x1D0B0008, 0x864600F, 0x50C3800, 0x6400157
                .long 0
                .long 0x864700F, 0x50A3800, 0x6400157, 0
                .long 0x864900F, 0x64841300, 8, 0x8C80015A, 0x8F98AC8
                .long 0x5000116, 0x600015A, 0
                .long 0x64A82710, 0x1D0B0008, 0x864A80F, 0x50A3900, 0x68040ED
                .long 0
                .long 0x39143910, 0x101E3715, 0x8651C27, 0xF000700, 0x864CF
                .long 0x20010E08, 0x13202, 0x7C050533, 0x1C0041, 0xF000000
                .long 0x864E7, 0x20010E08, 0x13201, 0x7C050633, 0x1C0041
                .long 0xF000000, 0x864FF, 0x10E08, 0x13202, 0x7C050133
                .long 0x1C0041, 0xF000000, 0x86517, 0x10E08, 0x13201, 0x7C050233
                .long 0x1C0041, 0x11000000, 0x8657C, 0x865340F, 0x10E0800
                .long 0x1320220, 0x5063300, 0x1C00417C, 0
                .long 0x8654C0F, 0x10E0800, 0x1320120, 0x5053300, 0x1C00417C
                .long 0
                .long 0x865640F, 0x10E0800, 0x1320200, 0x5023300, 0x1C00417C
                .long 0
                .long 0x8657C0F, 0x10E0800, 0x1320100, 0x5013300, 0x1C00417C
                .long 0
                .long 0x865940F, 0x10E0800, 0x1320020, 0x5043300, 0x1C00417C
                .long 0
                .long 0x865A90F, 0x320E0800, 0x330001, 0x417C05, 0x1C
                .long 0x1000
EGG_BOSS_MOVES: .long 0x9400010E, 0xE000866, 0x675B0002, 0x30E0008, 0x867E900
                .long 0x50E00, 0x867B7, 0x2300060E, 0xE000868, 0x68620007
                .long 0xE0008, 0x869C400, 0x2010E00, 0x869F6, 0x702020E
                .long 0xE00086A, 0x6A180401, 0x20E0008, 0x86A2004, 0x1010E00
                .long 0x86A31, 0x4701020E, 0xE00086A, 0x6A580301, 0x20E0008
                .long 0x86AC903, 0x2050E00, 0x869F6, 0x702060E, 0xE00086A
                .long 0x6A180405, 0x60E0008, 0x86A2004, 0x1050E00, 0x86A31
                .long 0x4701060E, 0xE00086A, 0x6A580305, 0x60E0008, 0x86AC903
                .long 0x2030E00, 0x869F6, 0x1804030E, 0xE00086A, 0x6A310103
                .long 0x30E0008, 0x86AA103, 0x2070E00, 0x869F6, 0x1804070E
                .long 0xE00086A, 0x6A310107, 0x70E0008, 0x86B1103, 0x6070E00
                .long 0x86B30, 0x2903000E, 0x1000086B, 0x866A427, 0x51D0800
                .long 0xDB, 0
                .long 0x866B427, 0x51B0900, 0x104, 0
                .long 0x866C927, 0xD000700, 0x86724, 0x1B205, 0
                .long 0x66D62800
                .fill 2, 4, 0x67160008
                .long 0xEF0F0008, 0x4000866, 0x1000010, 0x1000001, 0x29050100
                .long 1, 0xF000000, 0x86700, 0x5011001, 0x10B, 0
                .long 0x867110F, 0x1000100, 0x16505, 0
                .long 0x67161100, 0x240D0008, 0x5000867, 0x167, 0
                .long 0x3000010E, 0x36000867, 0x86724, 0x80A12, 0x867420D
                .long 0x1680500, 0
                .long 0x10E0000, 0x8674E00, 0x67423600, 0xA120008, 0x77050608
                .long 1, 0x27000000, 0x8676B, 0xDB051D08, 0
                .long 0x27000000, 0x86787, 0x870F0507, 0x4000867, 0x1040206
                .long 0x2E050000, 0x260000, 0x27000000, 0x86797, 0xFF050007
                .long 0
                .long 0x28000000, 0x867A4
                .fill 2, 4, 0x867AD
                .long 0x200120, 0x867AD11, 0x1660500, 0
                .long 0x27100000, 0x867E8, 0xCE271D0B, 0x9000867, 0x104051B
                .long 0
                .long 0xDA270000, 0x7000867, 0x66BB1100, 0xE80F0008, 0x5000867
                .long 0x290400B3, 0x24, 0x68222710, 0x1D0B0008, 0x8680027
                .long 0x51B0900, 0x104, 0
                .long 0x8680C27, 0x11000700, 0x866BB, 0x8681928
                .fill 2, 4, 0x8681900
                .long 0x920500, 0
                .long 0x27100000, 0x86861, 0x3A271D0B, 0x9000868, 0x102051B
                .long 0
                .long 0x46270000, 0x7000868, 0x678E1100, 0x53280008
                .fill 2, 4, 0x53000868
                .long 0xF000868, 0x86861, 0xEE05, 0
                .long 0xC3271000, 0xB000869, 0x68930F1D, 0x8020008, 0x868850F
                .long 0xD082900, 0x868BD, 0x12705, 0
                .long 0x68BD0D00, 0x28050008, 1, 0xF000000, 0x8698E, 0xAF0F0902
                .long 0x29000868, 0x68BD0D08, 0x25050008, 1, 0xD000000
                .long 0x868BD, 0x12605, 0
                .long 0x10E00, 0x868D0, 0xFE00070E, 0x36000868, 0x868BD
                .long 0x868E80F, 0x12050200, 0x1D00080A, 0x510080A, 0x6140198
                .long 0
                .long 0x80A12, 0x10080A1D, 0x867240D, 0x10C0500, 0
                .long 0x1B0F0000, 0x2000869, 0x80A1208, 0x80A1D00, 0x694E0D0A
                .long 0x27050008, 1, 0xF000000, 0x86938, 0xA120902, 0xA1D0008
                .long 0x4E0D0A08, 0x5000869, 0x125, 0
                .long 0x80A12, 0xA080A1D, 0x8694E0D, 0x1250500, 0
                .long 0x10E0000, 0x8695A00, 0x694E3600, 0x720F0008, 0x2000869
                .long 0x80A1205, 0x80A1D00, 0x1980510, 0x614, 0x8D0F0000
                .long 0x12000869, 0x1D00080A, 0xD10080A, 0x86724, 0x10C05
                .long 0
                .long 0xA00F1000, 0x34000869, 0x5060A01, 0xC0000AB, 0
                .long 0x869B50F, 0xD082900, 0x868BD, 0x12505, 0
                .long 0x68BD0D00, 0x26050008, 1, 0x10000000, 0x869F527
                .long 0xF1D0B00, 0x869E0, 0x4010000, 0x118, 0x6010000
                .long 0x16000000, 0x869F50F, 0x2000000, 0x10C04, 0x2000000
                .long 6, 0x627100F, 0xB00086A, 0xD4051D, 0x60C, 0x27100000
                .long 0x86A17, 0xD2051D0B, 0x60C00, 0x10000000, 0x86A1F27
                .long 0x101D0B00, 0x86A3027, 0x51D0B00, 0x60C00D3, 0
                .long 0x6A462710, 0x1D0B0008, 0x86A460F, 0x1980500, 0x614
                .long 0x27100000, 0x86A57, 0x57051D0B, 0x61401, 0x10000000
                .long 0x86AA027, 0xF1D0B00, 0x86A6F, 0x98050C38, 0x64001
                .long 0xF000000, 0x86A7F, 0x98050A38, 0x64001, 0xF000000
                .long 0x86AA0, 0x86A9413, 0
                .long 0x5C801E01
                .long 0x8F984B8
                .long 0x5000116, 0x6000001, 0
                .long 0x6AC82710, 0x1D0B0008, 0x86AC80F, 0x6ABC1300, 8
                .long 0x8C800204, 0x8F98490, 0x5000116, 0x6000204, 0
                .long 0x6B102710, 0x1D0B0008, 0x86AE00F, 0x50C3800, 0x6400157
                .long 0
                .long 0x86AF00F, 0x50A3800, 0x6400157, 0
                .long 0x86B100F, 0x6B041300, 8, 0x8C80015A, 0x8F98448
                .long 0x5000116, 0x600015A, 0
                .long 0x6B282710, 0x1D0B0008, 0x86B280F, 0x50A3900, 0x68040ED
                .long 0
                .long 0x39143910, 0x101E3715, 0x86B9C27, 0xF000700, 0x86B4F
                .long 0x20010E08, 0x13202, 0x7C050533, 0x1C0041, 0xF000000
                .long 0x86B67, 0x20010E08, 0x13201, 0x7C050633, 0x1C0041
                .long 0xF000000, 0x86B7F, 0x10E08, 0x13202, 0x7C050133
                .long 0x1C0041, 0xF000000, 0x86B97, 0x10E08, 0x13201, 0x7C050233
                .long 0x1C0041, 0x11000000, 0x86BFC, 0x86BB40F, 0x10E0800
                .long 0x1320220, 0x5063300, 0x1C00417C, 0
                .long 0x86BCC0F, 0x10E0800, 0x1320120, 0x5053300, 0x1C00417C
                .long 0
                .long 0x86BE40F, 0x10E0800, 0x1320200, 0x5023300, 0x1C00417C
                .long 0
                .long 0x86BFC0F, 0x10E0800, 0x1320100, 0x5013300, 0x1C00417C
                .long 0
                .long 0x86C140F, 0x10E0800, 0x1320020, 0x5043300, 0x1C00417C
                .long 0
                .long 0x86C290F, 0x320E0800, 0x330001, 0x417C05, 0x1C
                .long 0x1000
BARK_MOVES:     .long 0x1400010E, 0xE00086D, 0x6F330002, 0x30E0008, 0x870CF00
                .long 0x50E00, 0x86FED, 0x1E00060E, 0xE000871, 0x71580007
                .long 0xE0008, 0x8731F00, 0x2010E00, 0x87351, 0x6202020E
                .long 0xE000873, 0x73730401, 0x20E0008, 0x8737B04, 0x1010E00
                .long 0x8738C, 0xA201020E, 0xE000873, 0x73B30301, 0x20E0008
                .long 0x8741903, 0x2050E00, 0x87351, 0x6202060E, 0xE000873
                .long 0x73730405, 0x60E0008, 0x8737B04, 0x1050E00, 0x8738C
                .long 0xA201060E, 0xE000873, 0x73B30305, 0x60E0008, 0x8741903
                .long 0x2030E00, 0x87351, 0x7304030E, 0xE000873, 0x738C0103
                .long 0x30E0008, 0x873B303, 0x2070E00, 0x87351, 0x7304070E
                .long 0xE000873, 0x738C0107, 0x70E0008, 0x8746103, 0x6070E00
                .long 0x87479, 0x7203000E, 0x10000874, 0x86D2427, 0x51D0800
                .long 0xDB, 0
                .long 0x86D730F, 0xF1E0800, 0x86D3B, 0x9050007, 1, 0xF000000
                .long 0x86D50, 0x2666661B, 0x5053440, 0xC0000A5, 0
                .long 0x86D600F, 0x50E2A00, 0x6140090, 0
                .long 0x86D730F, 0x1A00, 0x4054040, 1, 0x27000000, 0x86D83
                .long 0x4051B09, 1, 0x27000000, 0x86D98, 0xE40D0007, 0x500086E
                .long 0x1B2, 0
                .long 0x86DA528
                .long 0x86EAC00
                .long 0x86EC100
                .long 0x6DCD0F00, 0x1C040008, 0x3011001, 0x1040110, 0x10030000
                .long 0x10010401, 0x1100301, 0x104, 0x1CC05, 0
                .long 0x6DDE0F00, 0x10010008, 0x1410501, 0
                .long 0x1D0F0000, 0x400086E, 0x1000110, 0xFF020003, 0x1020001
                .long 0xD0000, 0x500086E, 0x13E, 0
                .long 0xC00010E, 0x3600086E, 0x86E00, 0x80A12, 0x80A1D
                .long 0x13F05, 0
                .long 0x6E740F00, 0x8040008, 0xD010000, 0x86E35, 0x9605
                .long 0
                .long 0x10E00, 0x86E41, 0x86E3536, 0x80A1200, 0x80A1D00
                .long 0x6E570D00, 0x97050008, 0
                .long 0xE000000, 0x6E630001, 0x57360008, 0x1200086E, 0x1D00080A
                .long 0x500080A, 0x98, 0
                .long 0x86EA70F, 0x1000100, 0x86E8A0D, 0xA00500, 0
                .long 0x10E0000, 0x86E9600, 0x6E8A3600, 0xA120008, 0xA1D0008
                .long 0xA1050808, 0
                .long 0x11000000, 0x86EC1, 0x86EC10F, 0x80400, 0x400200
                .long 0x1A105, 0
                .long 0x6ED60F00, 0x4020008, 0x86E8A0D, 0xA40500, 0
                .long 0xE40D0000, 0x500086E, 0x99, 0
                .long 0xF000010E, 0x3600086E, 0x86EE4, 0x80A12, 0x86F020D
                .long 0x9A0500, 0
                .long 0x10E0000, 0x86F0E00, 0x6F023600, 0x260F0008, 0x200086F
                .long 0x80A1204, 0x80A1D00, 0xA30500, 0
                .long 0xA120000
                .long 0x9B050008, 0x24290000, 0x27000000, 0x86F43, 0xDB051D08
                .long 0
                .long 0xF000000, 0x86F92, 0x5A0F1E08, 0x700086F, 0x1090500
                .long 0
                .long 0x6F0F0000, 0x1B00086F, 0x40266666, 0x93050534, 0xC0000
                .long 0xF000000, 0x86F7F, 0x91050E2A, 0x61400, 0xF000000
                .long 0x86F92, 0x4000001A, 0x1020540, 0
                .long 0xAE270000, 0x700086F, 0x6FAE0F05, 0x6040008, 0x10402
                .long 0x2E0500, 0x2600, 0xBE270000, 0x900086F, 0x102051B
                .long 0
                .long 0xCE270000, 0x700086F, 0xFF0500, 0
                .long 0xDB280000
                .fill 2, 4, 0xE400086F
                .long 0x2000086F, 0x11002001, 0x86FE4, 0x9E05, 0
                .long 0x70CE2700, 0x1D0B0008, 0x8700427, 0x51B0900, 0x104
                .long 0
                .long 0x8701027, 0x11000700, 0x86D8A, 0x8702F0F, 0x1000100
                .long 0x10011A04, 0x100101, 0x1021001, 0x9F050200, 0xAE290400
                .long 0xF000000, 0x87053, 0x11804, 0x1000302, 0x10001FF
                .long 0xFF020003, 0x1020001, 0x97050000, 0xA2290401, 0xF000001
                .long byte_8707B
                .long 0x10011C04, 0x1100301, 0x104, 0x4011003, 0x3011001
                .long 0x1040110, 0xB5050000
                .byte 1, 4
                .byte 0x29
                .short 0x1B3            # BARK_BOWL_N
                .fill 2, 1, 0
byte_8707B:     .byte 0xF               # DATA XREF: ROM:00087054↑o
                .long byte_87095
                .long 0x10011004, 0x1100300, 0x1000104, 0x4019705, 0x19B29
                .byte 0
byte_87095:     .byte 0xF, 0xB0, 0x70   # DATA XREF: ROM:0008707C↑o
                .long 0x8040008, 0x4001000, 0x110, 0x5001001, 0x29040197
                .long 0x93, 0x870C527, 0xD053500, 0x86EE4, 0x9905, 0
                .long 0x1970500, 0xA52904, 0x27100000, 0x8711D, 0xE6271D0B
                .long 0x9000870, 0x104051B, 0
                .long 0x4280000, 0xF3000871, 0x4000870, 0xF000871, 0x87104
                .long 0x5020001, 0x1C8, 0
                .long 0x871140F, 0x5120800, 0x1CE, 0
                .long 0x9205, 0
                .long 0x57271000, 0xB000871, 0x7135271D, 0x1B090008, 0x10205
                .long 0
                .long 0x71412700, 0x70008, 0x86FC511, 0x714E2800
                .fill 2, 4, 0x714E0008
                .long 0x9E050008, 0
                .long 0x10000000, 0x8731E27, 0xF1D0B00, 0x87176, 0x760F1E08
                .long 0x7000871, 0x1090500, 0
                .long 0x930F0000, 0x4000871, 0x4006, 0xC040100, 0x1000001
                .long 0x49050100, 1, 0xF000000, 0x871BD, 0xAF0F0802, 0x29000871
                .long 0x71E70D08, 0x27050008, 1, 0xD000000, 0x871E7, 0x12805
                .long 0
                .long 0x72D40F00, 0x9020008, 0x871D90F, 0xD082900, 0x871E7
                .long 0x12505, 0
                .long 0x71E70D00, 0x26050008, 1, 0xE000000, 0x72010001
                .long 0x20E0008, 0x8722A00, 0x70E00, 0x8723B, 0x871E736
                .long 0x72190F00, 0x5020008, 0x80A12, 0x10080A1D, 0x14009105
                .long 6, 0x80A1200, 0x80A1D00, 0x14F0510, 0x2600, 0xA120000
                .long 0xA1D0008, 0x9E051008, 0x260000, 0xF000000, 0x87258
                .long 0xA120802, 0xA1D0008, 0x8B0D0A08, 0x5000872, 0x127
                .long 0
                .long 0x872750F, 0x12090200, 0x1D00080A, 0xD0A080A, 0x8728B
                .long 0x12505, 0
                .long 0x80A1200, 0x80A1D00, 0x728B0D0A, 0x25050008, 1
                .long 0xE000000, 0x72A50001, 0x20E0008, 0x8722A00, 0x70E00
                .long 0x872A5, 0x8728B36, 0x72BD0F00, 0x5020008, 0x80A12
                .long 0x10080A1D, 0x14009105, 6, 0x72D30F00, 0xA120008
                .long 0xA1D0008, 0x4F050A08, 0x260001, 0x10000000, 0x872E60F
                .long 0xA013400, 0xAB0506, 0xC00, 0xFB270000, 0x7000872
                .long 0x6EE40D00, 0xB2050008, 1, 0xF000000, 0x87310, 0xE70D0829
                .long 0x5000871, 0x125, 0
                .long 0x871E70D, 0x1260500, 0
                .long 0x27100000, 0x87350, 0x3B0F1D0B, 0x873, 0x18040100
                .long 1, 0x60100, 0xF160000, 0x87350, 0x4020000, 0x10C
                .long 0x6020000, 0xF000000, 0x73612710, 0x1D0B0008, 0xC00D405
                .long 6, 0x72271000, 0xB000873, 0xD2051D, 0x60C, 0x27100000
                .long 0x8737A, 0x27101D0B, 0x8738B, 0xD3051D0B, 0x60C00
                .long 0x10000000, 0x873A127, 0xF1D0B00, 0x873A1, 0x14009005
                .long 6, 0xB2271000, 0xB000873, 0x91051D, 0x614, 0x27100000
                .long 0x87418, 0xCA0F1D0B, 0x38000873, 0x90050C, 0x640
                .long 0xDA0F0000, 0x38000873, 0x90050A, 0x640, 0xF80F0000
                .long 0x13000873, 0x873EC, 0x5C801E01, 0x8F97B60, 0x5000116
                .long 0x6000001, 0
                .long 0x874180F, 0x740C1300, 8, 0x8C8001DA, 0x8F97B40
                .long 0x5000116, 0x60801DA, 0
                .long 0x74602710, 0x1D0B0008, 0x874300F, 0x50C3800, 0x6400091
                .long 0
                .long 0x874400F, 0x50A3800, 0x6400091, 0
                .long 0x874600F, 0x74541300, 8, 0x8C80015A, 0x8F97AF8
                .long 0x5000116, 0x600015A, 0
                .long 0x74712710, 0x1D0B0008, 0x8040ED05, 6, 0x14391000
                .long 0x1E371539, 0x74E52710, 0x70008, 0x874980F, 0x10E0800
                .long 0x1320220, 0x5053300, 0x1C00417C, 0
                .long 0x874B00F, 0x10E0800, 0x1320120, 0x5063300, 0x1C00417C
                .long 0
                .long 0x874C80F, 0x10E0800, 0x1320200, 0x5013300, 0x1C00417C
                .long 0
                .long 0x874E00F, 0x10E0800, 0x1320100, 0x5023300, 0x1C00417C
                .long 0
                .long 0x8754511, 0x74FD0F00, 0xE080008, 0x32022001, 0x6330001
                .long 0x417C05, 0x1C, 0x75150F00, 0xE080008, 0x32012001
                .long 0x5330001, 0x417C05, 0x1C, 0x752D0F00, 0xE080008
                .long 0x32020001, 0x2330001, 0x417C05, 0x1C, 0x75450F00
                .long 0xE080008, 0x32010001, 0x1330001, 0x417C05, 0x1C
                .long 0x755D0F00, 0xE080008, 0x32002001, 0x4330001, 0x417C05
                .long 0x1C, 0x75720F00, 0xE080008, 0x33000132, 0x417C0500
                .long 0x1C00, 0x100000
ESPIO_MOVES:    .long 0x5C00010E, 0xE000876, 0x78090002, 0x30E0008, 0x87A7700
                .long 0x50E00, 0x87988, 0xB900060E, 0xE00087A, 0x7B130007
                .long 0xE0008, 0x87CDF00, 0x2010E00, 0x87D11, 0x2202020E
                .long 0xE00087D, 0x7D7C0401, 0x20E0008, 0x87D8404, 0x1010E00
                .long 0x87D95, 0xAB01020E, 0xE00087D, 0x7DBC0301, 0x20E0008
                .long 0x87E2D03, 0x2050E00, 0x87D11, 0x2202060E, 0xE00087D
                .long 0x7D7C0405, 0x60E0008, 0x87D8404, 0x1050E00, 0x87D95
                .long 0xAB01060E, 0xE00087D, 0x7DBC0305, 0x60E0008, 0x87E2D03
                .long 0x2030E00, 0x87D11, 0x7C04030E, 0xE00087D, 0x7D950103
                .long 0x30E0008, 0x87E0503, 0x2070E00, 0x87D11, 0x7C04070E
                .long 0xE00087D, 0x7D950107, 0x70E0008, 0x87E7503, 0x6070E00
                .long 0x87E94, 0x8D03000E, 0x1000087E, 0x8766C27, 0x51D0800
                .long 0xDB, 0
                .long 0x876BB0F, 0xF1E0800, 0x87683, 0x9050007, 1, 0xF000000
                .long 0x87698, 0x2666661B, 0x5053440, 0xC00011C, 0
                .long 0x876A80F, 0x50E2A00, 0x6140179, 0
                .long 0x876BB0F, 0x1A00, 0x22054040, 0x260001, 0x27000000
                .long 0x876CB, 0x7D051B09, 1, 0x27000000, 0x876E0, 0xA50D0007
                .long 0x5000877, 0x1B2, 0
                .long 0x876ED28
                .long 0x8778700
                .long 0x8778700
                .long 0x770C0F00, 0x10008, 0x11A0401, 0x10010110, 0x2100100
                .long 0x5020001, 0x1B9, 0
                .long 0x877250F, 0x80400, 0x10100, 0x1000100, 0x1B805
                .long 0
                .long 0x77380F00, 0xE2A0008, 0x5011001, 0x121, 0
                .long 0x877600F, 0x11C0400, 0x10030110, 0x10401, 0x1100300
                .long 0x1100104, 0x4011003, 0x5000001, 0x1E3, 0
                .long 0x877710F, 0x1100100, 0x19405, 0
                .long 0x77820F00, 0x10008, 0x520501, 0
                .long 0x87110000, 0xF000877, 0x87797, 0x50050402, 0
                .long 0xD000000, 0x877A5, 0x1E805, 0
                .long 0x10E00, 0x877C9, 0xB800020E, 0x36000877, 0x877A5
                .long 0x80A12, 0x80A1D, 0x12305, 0
                .long 0x80A1200, 0x80A1D06, 0x77DF0D06, 0xE9050008, 1
                .long 0xE000000, 0x77FC0001, 0xDF360008, 0x12000877, 0x1D08080A
                .long 0x508080A, 0x290400AC, 0xAB, 0x80A12, 0x8E05, 0
                .long 0x78192700, 0x1D080008, 0xDB05, 0
                .long 0x78680F00, 0x1E080008, 0x878300F, 0x5000700, 0x109
                .long 0
                .long 0x878450F, 0x66661B00, 0x5344026, 0x2005, 0xC, 0x78550F00
                .long 0xE2A0008, 0x2E05, 0x26, 0x78680F00, 0x1A0008, 0x5404000
                .long 0xD0, 0
                .long 0x8788427, 0xF050700, 0x87884, 0x4020604, 0x5000001
                .long 0x2600002E, 0
                .long 0x8789427, 0x51B0900, 0x102, 0
                .long 0x878A427, 0x5000700, 0xFF, 0
                .long 0x878B128
                .long 0x8792800
                .long 0x8793B00
                .long 0x78CA0F00, 0x10040008, 0x1010000, 0x10000, 0x1350501
                .long 0
                .long 0x1200000, 0x879210F, 0x1100100, 0x878E20D, 0xEF0500
                .long 0
                .long 0x20E0000, 0x878EE00, 0x78E23600, 0xA120008, 0xA1D0008
                .long 0x40D0008, 0x5000879, 0xF1, 0
                .long 0x1000020E, 0x36000879, 0x87904, 0x80A12, 0x80A1D
                .long 0xF305, 0
                .long 0x11002000, 0x8793B, 0x8793B0F, 0x1013D00, 0xC5050200
                .long 1, 0xD000000, 0x87949, 0xF005, 0x26, 0x20E00, 0x87955
                .long 0x8794936, 0x80A1200, 0x80A1D00, 0x796B0D00, 0xF2050008
                .long 0
                .long 0xE000000, 0x79770002, 0x6B360008, 0x12000879, 0x1D00080A
                .long 0x500080A, 0xF4, 0
                .long 0x87A7627
                .long 0x271D0B00
                .long 0x8799F, 0x7D051B09, 1, 0x27000000, 0x879AB, 0xD2110007
                .long 0xF000876, 0x879FB, 0x11004, 0x1000302, 0x10001FF
                .long 0x879CA0D, 0xB30500, 0x222904, 0x50E0000, 0x879D600
                .long 0x79CA3600, 0xFA0F0008, 0x3C000879, 0x1100413, 0x30200
                .long 0x1FF01, 0x80A1201, 0x80A1D00, 0x1990500, 0xC00
                .long 0xF100000, 0x87A58, 0xF001001, 0x87A16, 0x421, 0xB30500
                .long 0x1BB2904, 0x290F0000, 0x2100087A, 0x10, 0x400B305
                .long 0x1C029, 0x7A3C0F00, 0x80210008, 0x5000000, 0x290400B3
                .long 0x1E4, 0x87A4F0F, 0x4002100, 0xB3050000, 0xEC290400
                .long 0x5000001, 0x290400B3, 0x11C, 0x87A6D27, 0xD053500
                .long 0x877A5, 0xF905, 0
                .long 0xB30500, 0x11C2904, 0x27100000, 0x87AB8, 0x8E271D0B
                .long 0x900087A, 0x17D051B, 0
                .long 0x9A270000, 0x700087A, 0x76D21100, 0xB8280008, 0xA700087A
                .long 0xB800087A, 0xF00087A, 0x87AB8, 0x5020001, 0x1C8
                .long 0
                .long 0x7B122710, 0x1D0B0008, 0x87AD027, 0x51B0900, 0x102
                .long 0
                .long 0x87ADC27, 0x11000700, 0x8789B, 0x87AE928
                .fill 2, 4, 0x87AE900
                .long 0x7B040F00, 0x8040008, 0x4001000, 0x110, 0x5001001
                .long 0x290400B3, 0x20, 0x87B120F, 0xEE0500, 0
                .long 0x27100000, 0x87CDE, 0x310F1D0B, 0x800087B, 0x7B310F1E
                .long 0x70008, 0x10905, 0
                .long 0x7B4E0F00, 0x12080008, 0x10000804, 0x1100400, 0x10010000
                .long 0x1CD0500, 0
                .long 0x780F0000, 0x200087B, 0x7B6A0F08, 0x8290008, 0x87BA20D
                .long 0x1270500, 0
                .long 0xA20D0000, 0x500087B, 0x128, 0
                .long 0x87C940F, 0xF090200, 0x87B94, 0xA20D0829, 0x500087B
                .long 0x125, 0
                .long 0x87BA20D, 0x1260500, 0
                .long 0x10E0000
                .long 0x87BBC00
                .long 0x20E00
                .long 0x87BE5
                .long 0xFB00070E
                .long 0x3600087B
                .long 0x87BA2
                .long 0x87BD40F
                .long 0x12050200
                .long 0x1D00080A
                .long 0x510080A
                .long 0x6140179
                .long 0
                .long 0x80A12, 0x10080A1D, 0x12205, 0x26, 0x80A1200, 0x80A1D00
                .long 0x7D3C0D10, 0xE5050008, 0
                .long 0xF000000, 0x87C18, 0xA120802, 0xA1D0008, 0x4B0D0A08
                .long 0x500087C, 0x127, 0
                .long 0x87C350F, 0x12090200, 0x1D00080A, 0xD0A080A, 0x87C4B
                .long 0x12505, 0
                .long 0x80A1200, 0x80A1D00, 0x7C4B0D0A, 0x25050008, 1
                .long 0xE000000, 0x7C650001, 0x20E0008, 0x87BE500, 0x70E00
                .long 0x87C65, 0x87C4B36, 0x7C7D0F00, 0x5020008, 0x80A12
                .long 0x10080A1D, 0x14017905, 6, 0x7C930F00, 0xA120008
                .long 0xA1D0008, 0x22051008, 0x260001, 0x10000000, 0x87CA60F
                .long 0xA013400, 0xAB0506, 0xC00, 0xBB270000, 0x700087C
                .long 0x77A50D00, 0xB2050008, 1, 0xF000000, 0x87CD0, 0xA20D0829
                .long 0x500087B, 0x125, 0
                .long 0x87BA20D, 0x1260500, 0
                .long 0x27100000, 0x87D10, 0xFB0F1D0B, 0x87C, 0x18040100
                .long 1, 0x60100, 0xF160000, 0x87D10, 0x4020000, 0x10C
                .long 0x6020000, 0xF000000, 0x7D212710, 0x1D0B0008, 0xC00D405
                .long 6, 0x7B271000, 0xB00087D, 0x7D7B0F1D, 0x3C0D0008
                .long 0x500087D, 0xE5, 0
                .long 0x4800020E, 0x3600087D, 0x87D3C, 0x80A12, 0x80A1D
                .long 0x87D5E0D, 0xE60500, 0
                .long 0x20E0000, 0x87D6A00, 0x7D5E3600, 0xA120008, 0xA1D0008
                .long 0xE8050008, 0
                .long 0x10000000, 0x87D8327, 0x101D0B00, 0x87D9427, 0x51D0B00
                .long 0x60C00D3, 0
                .long 0x7DAA2710, 0x1D0B0008, 0x87DAA0F, 0x1790500, 0x614
                .long 0x27100000, 0x87DBB, 0xD5051D0B, 0x61401, 0x10000000
                .long 0x87E0427, 0xF1D0B00, 0x87DD3, 0x79050C38, 0x64001
                .long 0xF000000, 0x87DE3, 0x79050A38, 0x64001, 0xF000000
                .long 0x87E04, 0x87DF813, 0
                .long 0x8C8001E2
                .long 0x8F97154
                .long 0x5000116, 0x60001E2, 0
                .long 0x7E2C2710, 0x1D0B0008, 0x87E2C0F, 0x7E201300, 8
                .long 0x8C800204, 0x8F9712C, 0x5000116, 0x6000204, 0
                .long 0x7E742710, 0x1D0B0008, 0x87E440F, 0x50C3800, 0x64001D5
                .long 0
                .long 0x87E540F, 0x50A3800, 0x64001D5, 0
                .long 0x87E740F, 0x7E681300, 8, 0x8C80015A, 0x8F970E4
                .long 0x5000116, 0x600015A, 0
                .long 0x7E8C2710, 0x1D0B0008, 0x87E8C0F, 0x50A3900, 0x68040ED
                .long 0
                .long 0x39143910, 0x101E3715, 0x87F0027, 0xF000700, 0x87EB3
                .long 0x20010E08, 0x13202, 0x7C050533, 0x1C0041, 0xF000000
                .long 0x87ECB, 0x20010E08, 0x13201, 0x7C050633, 0x1C0041
                .long 0xF000000, 0x87EE3, 0x10E08, 0x13202, 0x7C050133
                .long 0x1C0041, 0xF000000, 0x87EFB, 0x10E08, 0x13201, 0x7C050233
                .long 0x1C0041, 0x11000000, 0x87F60, 0x87F180F, 0x10E0800
                .long 0x1320220, 0x5063300, 0x1C00417C, 0
                .long 0x87F300F, 0x10E0800, 0x1320120, 0x5053300, 0x1C00417C
                .long 0
                .long 0x87F480F, 0x10E0800, 0x1320200, 0x5023300, 0x1C00417C
                .long 0
                .long 0x87F600F, 0x10E0800, 0x1320100, 0x5013300, 0x1C00417C
                .long 0
                .long 0x87F780F, 0x10E0800, 0x1320020, 0x5043300, 0x1C00417C
                .long 0
                .long 0x87F8D0F, 0x320E0800, 0x330001, 0x417C05, 0x1C
                .long 0x1000
BEAN_MOVES:     .long 0x7800010E, 0xE000880, 0x82310002, 0x30E0008, 0x8848900
                .long 0x50E00, 0x883C1, 0xCB00060E, 0xE000884, 0x85250007
                .long 0xE0008, 0x886F100, 0x2010E00, 0x88723, 0x3402020E
                .long 0xE000887, 0x878E0401, 0x20E0008, 0x887BD04, 0x1010E00
                .long 0x887CE, 0xE401020E, 0xE000887, 0x87F50301, 0x20E0008
                .long 0x8883D03, 0x2050E00, 0x88723, 0x3402060E, 0xE000887
                .long 0x878E0405, 0x60E0008, 0x887BD04, 0x1050E00, 0x887CE
                .long 0xE401060E, 0xE000887, 0x87F50305, 0x60E0008, 0x8883D03
                .long 0x2030E00, 0x88723, 0x8E04030E, 0xE000887, 0x87CE0103
                .long 0x30E0008, 0x8879603, 0x2070E00, 0x88723, 0x8E04070E
                .long 0xE000887, 0x87CE0107, 0x70E0008, 0x8888503, 0x6070E00
                .long 0x888A4, 0x9D03000E, 0x10000888, 0x8808827, 0x51D0800
                .long 0xDB, 0
                .long 0x880D70F, 0xF1E0800, 0x8809F, 0x9050007, 1, 0xF000000
                .long 0x880B4, 0x2666661B, 0x5053440, 0xC0000B4, 0
                .long 0x880C40F, 0x50E2A00, 0x6140027, 0
                .long 0x880D70F, 0x1A00, 0x29054040, 1, 0x27000000, 0x880E7
                .long 0x2D051B09, 0
                .long 0x27000000, 0x880F7, 0x1E050007, 1, 0x28000000, 0x88104
                .fill 2, 4, 0x8816D
                .long 0x8811D0F, 0x100400, 0x10100, 0x1000100, 0x16405
                .long 0
                .long 0x81350F00, 0x8040008, 0xD010000, 0x8814B, 0x2B05
                .long 0
                .long 0x81680F00, 0x10010008, 0x814B0D01, 0x2C050008, 0
                .long 0xE000000, 0x81570001, 0x4B360008, 0x12000881, 0x1D04080A
                .long 0x504080A, 0x129, 0
                .long 0x8816D11, 0x817D0F00, 0x4020008, 0x2605, 0
                .long 0x818B0D00, 0x28050008, 0
                .long 0xE000000, 0x819E0001, 0x70E0008, 0x881C300, 0x818B3600
                .long 0xA120008, 0xB00D0008, 0x5000881, 0x29, 0
                .long 0xD400010E, 0xE000881, 0x81C30007, 0xB0360008, 0x12000881
                .long 0x1D08080A, 0x508080A, 0x290400AC, 0xAB, 0x80A12
                .long 0x881E60D, 0x2A0500, 0
                .long 0x10E0000, 0x881F200, 0x81E63600, 0xA120008, 0x40D0008
                .long 0x5000882, 0x2A, 0
                .long 0x1000010E, 0x36000882, 0x88204, 0x882240F, 0x12080200
                .long 0x500080A, 0xFE, 0
                .long 0x80A12, 0x2A05, 0
                .long 0x82412700, 0x1D080008, 0xDB05, 0
                .long 0x82900F00, 0x1E080008, 0x882580F, 0x5000700, 0x109
                .long 0
                .long 0x8826D0F, 0x66661B00, 0x5344026, 0x2005, 0xC, 0x827D0F00
                .long 0xE2A0008, 0x2E05, 0x26, 0x82900F00, 0x1A0008, 0x5404000
                .long 0xD0, 0
                .long 0x882AC27, 0xF050700, 0x882AC, 0x4020604, 0x5000001
                .long 0x2600002E, 0
                .long 0x882BC27, 0x51B0900, 0xD0, 0
                .long 0x882CC27, 0x5000700, 0xFF, 0
                .long 0x882D928
                .long 0x8836100
                .long 0x8837400
                .long 0x82F20F00, 0x10040008, 0x1010000, 0x10000, 0x1350501
                .long 0
                .long 0x1200000, 0x883490F, 0x1100100, 0x8830A0D, 0xEF0500
                .long 0
                .long 0x20E0000, 0x8831600, 0x830A3600, 0xA120008, 0xA1D0008
                .long 0x2C0D0008, 0x5000883, 0xF1, 0
                .long 0x3800020E, 0x36000883, 0x8832C, 0x80A12, 0x80A1D
                .long 0xF305, 0
                .long 0xF002000, 0x8835C, 0x5010001, 0x195, 0
                .long 0x8837411, 0x83740F00, 0x13D0008, 0x5020001, 0x1C5
                .long 0
                .long 0x883820D, 0xF00500, 0x2600, 0x20E0000, 0x8838E00
                .long 0x83823600, 0xA120008, 0xA1D0008, 0xA40D0008, 0x5000883
                .long 0xF2, 0
                .long 0xB000020E, 0x36000883, 0x883A4, 0x80A12, 0x80A1D
                .long 0xF405, 0
                .long 0x84882700
                .long 0x1D0B0008, 0x883D827, 0x51B0900, 0x2D, 0
                .long 0x883E427, 0x11000700, 0x880EE, 0x884080F, 0x1180400
                .long 0x30200, 0x1FF01, 0x2000301, 0x20001FF, 0x5000001
                .long 0x290400B3, 0x19D, 0x884650F, 0x100100, 0x884230F
                .long 0x42100, 0xB3050000, 0xBB290400, 0xF000001, 0x88436
                .long 0x1021, 0xB30500, 0x1C02904, 0x490F0000, 0x21000884
                .long 0x80, 0x400B305, 0x1E429, 0x845C0F00, 0x210008, 0x5000004
                .long 0x290400B3, 0x1EC, 0x400B305, 0xB429, 0x847A2700
                .long 0x5350008, 0x8818B0D, 0x280500, 0
                .long 0x880F0000, 0x5000884, 0x290400B3, 0xB4, 0x84CA2710
                .long 0x1D0B0008, 0x884A027, 0x51B0900, 0x2D, 0
                .long 0x884AC27, 0x11000700, 0x880EE, 0x884CA28, 0x884B900
                .long 0x884CA00, 0x84CA0F00, 0x10008, 0x1C80502, 0
                .long 0x27100000, 0x88524, 0xE2271D0B, 0x9000884, 0xD0051B
                .long 0
                .long 0xEE270000, 0x7000884, 0x82C31100, 0xFB280008
                .fill 2, 4, 0xFB000884
                .long 0xF000884, 0x88516, 0x10000804, 0x1100400, 0x10010000
                .long 0xB30500, 0x202904, 0x240F0000, 0x5000885, 0xEE
                .long 0
                .long 0x86F02710, 0x1D0B0008, 0x885430F, 0xF1E0800, 0x88543
                .long 0x9050007, 1, 0xF000000, 0x88560, 0x8041208, 0x4001000
                .long 0x110, 0x5001001, 0x1CD, 0
                .long 0x8858A0F, 0xF080200, 0x8857C, 0xB40D0829, 0x5000885
                .long 0x127, 0
                .long 0x885B40D, 0x1280500, 0
                .long 0xA60F0000, 0x2000886, 0x85A60F09, 0x8290008, 0x885B40D
                .long 0x1250500, 0
                .long 0xB40D0000, 0x5000885, 0x126, 0
                .long 0xCE00010E, 0xE000885, 0x85F70002, 0x70E0008, 0x8860D00
                .long 0x85B43600, 0xE60F0008, 0x2000885, 0x80A1205, 0x80A1D00
                .long 0x270510, 0x614, 0xA120000, 0xA1D0008, 0x78051008
                .long 1, 0x12000000, 0x1D00080A, 0xD10080A, 0x8874E, 0xE505
                .long 0
                .long 0x862A0F00, 0x8020008, 0x80A12, 0xA080A1D, 0x8865D0D
                .long 0x1270500, 0
                .long 0x470F0000, 0x2000886, 0x80A1209, 0x80A1D00, 0x865D0D0A
                .long 0x25050008, 1, 0x12000000, 0x1D00080A, 0xD0A080A
                .long 0x8865D, 0x12505, 0
                .long 0x10E00, 0x88677, 0xF700020E, 0xE000885, 0x86770007
                .long 0x5D360008, 0xF000886, 0x8868F, 0xA120502, 0xA1D0008
                .long 0x27051008, 0x61400, 0xF000000, 0x886A5, 0x80A12
                .long 0xA080A1D, 0x17805, 0
                .long 0xB80F1000, 0x34000886, 0x5060A01, 0xC0000AB, 0
                .long 0x886CD27, 0xD000700, 0x8818B, 0x1B205, 0
                .long 0x86E20F00
                .long 0x8290008
                .long 0x885B40D, 0x1250500, 0
                .long 0xB40D0000, 0x5000885, 0x126, 0
                .long 0x87222710, 0x1D0B0008, 0x8870D0F, 0x1000000, 0x11804
                .long 0x1000000, 6, 0x87220F16, 8, 0x10C0402, 0
                .long 0x602, 0x27100F00, 0x88733, 0xD4051D0B, 0x60C00
                .long 0x10000000, 0x8878D27, 0xF1D0B00, 0x8878D, 0x8874E0D
                .long 0xE50500, 0
                .long 0x20E0000, 0x8875A00, 0x874E3600, 0xA120008, 0xA1D0008
                .long 0x700D0008, 0x5000887, 0xE6, 0
                .long 0x7C00020E, 0x36000887, 0x88770, 0x80A12, 0x80A1D
                .long 0xE805, 0
                .long 0x95271000, 0xB000887, 0xBC27101D, 0xB000887, 0x87BC0F1D
                .long 0xB0130008, 0x887, 0x8C800204, 0x8F9679C, 0x5000116
                .long 0x6000204, 0
                .long 0x87CD2710, 0x1D0B0008, 0xC00D305, 6, 0xE3271000
                .long 0xB000887, 0x87E30F1D, 0x27050008, 0x61400, 0x10000000
                .long 0x887F427, 0x51D0B00, 0x61401D5, 0
                .long 0x883C2710, 0x1D0B0008, 0x8880C0F, 0x50C3800, 0x6400027
                .long 0
                .long 0x8881C0F, 0x50A3800, 0x6400027, 0
                .long 0x8883C0F, 0x88301300, 8, 0x8C8001D8, 0x8F9671C
                .long 0x5000116, 0x60001D8, 0
                .long 0x88842710, 0x1D0B0008, 0x888540F, 0x50C3800, 0x64001D5
                .long 0
                .long 0x888640F, 0x50A3800, 0x64001D5, 0
                .long 0x888840F, 0x88781300, 8, 0x8C80015A, 0x8F966D4
                .long 0x5000116, 0x600015A, 0
                .long 0x889C2710, 0x1D0B0008, 0x8889C0F, 0x50A3900, 0x68040ED
                .long 0
                .long 0x39143910, 0x101E3715, 0x8891027, 0xF000700, 0x888C3
                .long 0x20010E08, 0x13202, 0x7C050533, 0x1C0041, 0xF000000
                .long 0x888DB, 0x20010E08, 0x13201, 0x7C050633, 0x1C0041
                .long 0xF000000, 0x888F3, 0x10E08, 0x13202, 0x7C050133
                .long 0x1C0041, 0xF000000, 0x8890B, 0x10E08, 0x13201, 0x7C050233
                .long 0x1C0041, 0x11000000, 0x88970, 0x889280F, 0x10E0800
                .long 0x1320220, 0x5063300, 0x1C00417C, 0
                .long 0x889400F, 0x10E0800, 0x1320120, 0x5053300, 0x1C00417C
                .long 0
                .long 0x889580F, 0x10E0800, 0x1320200, 0x5023300, 0x1C00417C
                .long 0
                .long 0x889700F, 0x10E0800, 0x1320100, 0x5013300, 0x1C00417C
                .long 0
                .long 0x889880F, 0x10E0800, 0x1320020, 0x5043300, 0x1C00417C
                .long 0
                .long 0x8899D0F, 0x320E0800, 0x330001, 0x417C05, 0x1C
                .long 0x1000
EGG_MINION_MOVES:.long 0x8800010E, 0xE00088A, 0x8B4F0002, 0x30E0008, 0x88BDD00
                .long 0x50E00, 0x88BAB, 0x1700060E, 0xE00088C, 0x8C560007
                .long 0xE0008, 0x88DB800, 0x2010E00, 0x88DEA, 0xFB02020E
                .long 0xE00088D, 0x8E0C0401, 0x20E0008, 0x88E1404, 0x1010E00
                .long 0x88E25, 0x3B01020E, 0xE00088E, 0x8E4C0301, 0x20E0008
                .long 0x88EBD03, 0x2050E00, 0x88DEA, 0xFB02060E, 0xE00088D
                .long 0x8E0C0405, 0x60E0008, 0x88E1404, 0x1050E00, 0x88E25
                .long 0x3B01060E, 0xE00088E, 0x8E4C0305, 0x60E0008, 0x88EBD03
                .long 0x2030E00, 0x88DEA, 0xC04030E, 0xE00088E, 0x8E250103
                .long 0x30E0008, 0x88E9503, 0x2070E00, 0x88DEA, 0xC04070E
                .long 0xE00088E, 0x8E250107, 0x70E0008, 0x88F0503, 0x6070E00
                .long 0x88F24, 0x1D03000E, 0x1000088F, 0x88A9827, 0x51D0800
                .long 0xDB, 0
                .long 0x88AA827, 0x51B0900, 0x104, 0
                .long 0x88ABD27, 0xD000700, 0x88B18, 0x1B205, 0
                .long 0x8ACA2800
                .fill 2, 4, 0x8B0A0008
                .long 0xE30F0008, 0x400088A, 0x1000010, 0x1000001, 0x29050100
                .long 1, 0xF000000, 0x88AF4, 0x5011001, 0x10B, 0
                .long 0x88B050F, 0x1000100, 0x16505, 0
                .long 0x8B0A1100, 0x180D0008, 0x500088B, 0x167, 0
                .long 0x2400010E, 0x3600088B, 0x88B18, 0x80A12, 0x88B360D
                .long 0x1680500, 0
                .long 0x10E0000, 0x88B4200, 0x8B363600, 0xA120008, 0x77050608
                .long 1, 0x27000000, 0x88B5F, 0xDB051D08, 0
                .long 0x27000000, 0x88B7B, 0x7B0F0507, 0x400088B, 0x1040206
                .long 0x2E050000, 0x260000, 0x27000000, 0x88B8B, 0xFF050007
                .long 0
                .long 0x28000000, 0x88B98
                .fill 2, 4, 0x88BA1
                .long 0x200120, 0x88BA111, 0x1660500, 0
                .long 0x27100000, 0x88BDC, 0xC2271D0B, 0x900088B, 0x104051B
                .long 0
                .long 0xCE270000, 0x700088B, 0x8AAF1100, 0xDC0F0008, 0x500088B
                .long 0x290400B3, 0x24, 0x8C162710, 0x1D0B0008, 0x88BF427
                .long 0x51B0900, 0x104, 0
                .long 0x88C0027, 0x11000700, 0x88AAF, 0x88C0D28
                .fill 2, 4, 0x88C0D00
                .long 0x920500, 0
                .long 0x27100000, 0x88C55, 0x2E271D0B, 0x900088C, 0x102051B
                .long 0
                .long 0x3A270000, 0x700088C, 0x8B821100, 0x47280008
                .fill 2, 4, 0x4700088C
                .long 0xF00088C, 0x88C55, 0xEE05, 0
                .long 0xB7271000, 0xB00088D, 0x8C870F1D, 0x8020008, 0x88C790F
                .long 0xD082900, 0x88CB1, 0x12705, 0
                .long 0x8CB10D00, 0x28050008, 1, 0xF000000, 0x88D82, 0xA30F0902
                .long 0x2900088C, 0x8CB10D08, 0x25050008, 1, 0xD000000
                .long 0x88CB1, 0x12605, 0
                .long 0x10E00, 0x88CC4, 0xF200070E, 0x3600088C, 0x88CB1
                .long 0x88CDC0F, 0x12050200, 0x1D00080A, 0x510080A, 0x6140198
                .long 0
                .long 0x80A12, 0x10080A1D, 0x88B180D, 0x10C0500, 0
                .long 0xF0F0000, 0x200088D, 0x80A1208, 0x80A1D00, 0x8D420D0A
                .long 0x27050008, 1, 0xF000000, 0x88D2C, 0xA120902, 0xA1D0008
                .long 0x420D0A08, 0x500088D, 0x125, 0
                .long 0x80A12, 0xA080A1D, 0x88D420D, 0x1250500, 0
                .long 0x10E0000, 0x88D4E00, 0x8D423600, 0x660F0008, 0x200088D
                .long 0x80A1205, 0x80A1D00, 0x1980510, 0x614, 0x810F0000
                .long 0x1200088D, 0x1D00080A, 0xD10080A, 0x88B18, 0x10C05
                .long 0
                .long 0x940F1000, 0x3400088D, 0x5060A01, 0xC0000AB, 0
                .long 0x88DA90F, 0xD082900, 0x88CB1, 0x12505, 0
                .long 0x8CB10D00, 0x26050008, 1, 0x10000000, 0x88DE927
                .long 0xF1D0B00, 0x88DD4, 0x4010000, 0x118, 0x6010000
                .long 0x16000000, 0x88DE90F, 0x2000000, 0x10C04, 0x2000000
                .long 6, 0xFA27100F, 0xB00088D, 0xD4051D, 0x60C, 0x27100000
                .long 0x88E0B, 0xD2051D0B, 0x60C00, 0x10000000, 0x88E1327
                .long 0x101D0B00, 0x88E2427, 0x51D0B00, 0x60C00D3, 0
                .long 0x8E3A2710, 0x1D0B0008, 0x88E3A0F, 0x1980500, 0x614
                .long 0x27100000, 0x88E4B, 0x57051D0B, 0x61401, 0x10000000
                .long 0x88E9427, 0xF1D0B00, 0x88E63, 0x98050C38, 0x64001
                .long 0xF000000, 0x88E73, 0x98050A38, 0x64001, 0xF000000
                .long 0x88E94, 0x88E8813, 0
                .long 0x5C801E01
                .long 0x8F960C4
                .long 0x5000116, 0x6000001, 0
                .long 0x8EBC2710, 0x1D0B0008, 0x88EBC0F, 0x8EB01300, 8
                .long 0x8C800204, 0x8F9609C, 0x5000116, 0x6000204, 0
                .long 0x8F042710, 0x1D0B0008, 0x88ED40F, 0x50C3800, 0x6400157
                .long 0
                .long 0x88EE40F, 0x50A3800, 0x6400157, 0
                .long 0x88F040F, 0x8EF81300, 8, 0x8C80015A, 0x8F96054
                .long 0x5000116, 0x600015A, 0
                .long 0x8F1C2710, 0x1D0B0008, 0x88F1C0F, 0x50A3900, 0x68040ED
                .long 0
                .long 0x39143910, 0x101E3715, 0x88F9027, 0xF000700, 0x88F43
                .long 0x20010E08, 0x13202, 0x7C050533, 0x1C0041, 0xF000000
                .long 0x88F5B, 0x20010E08, 0x13201, 0x7C050633, 0x1C0041
                .long 0xF000000, 0x88F73, 0x10E08, 0x13202, 0x7C050133
                .long 0x1C0041, 0xF000000, 0x88F8B, 0x10E08, 0x13201, 0x7C050233
                .long 0x1C0041, 0x11000000, 0x88FF0, 0x88FA80F, 0x10E0800
                .long 0x1320220, 0x5063300, 0x1C00417C, 0
                .long 0x88FC00F, 0x10E0800, 0x1320120, 0x5053300, 0x1C00417C
                .long 0
                .long 0x88FD80F, 0x10E0800, 0x1320200, 0x5023300, 0x1C00417C
                .long 0
                .long 0x88FF00F, 0x10E0800, 0x1320100, 0x5013300, 0x1C00417C
                .long 0
                .long 0x890080F, 0x10E0800, 0x1320020, 0x5043300, 0x1C00417C
                .long 0
                .long 0x8901D0F, 0x320E0800, 0x330001, 0x417C05, 0x1C
                .long 0x1000
HONEY_MOVES:    .byte 0xE               # DATA XREF: ROM:0001EFE8↑o
                .short 1
                .long byte_89108
                .byte 0xE
                .short 2
                .long dword_89308+2
                .byte 0xE
                .byte 3
                .long 0x8957E00
                .long 0x50E00
                .long 0x89489
                .long 0xC900060E
                .long 0xE000895
                .long 0x96230007
                .long 0xE0008
                .long 0x897DC00
                .long 0x2010E00
                .long 0x8980E
                .long 0x1F02020E
                .long 0xE000898
                .long 0x98790401
                .long 0x20E0008
                .long 0x8988104
                .long 0x1010E00
                .long 0x89892
                .long 0xA801020E
                .long 0xE000898
                .long 0x98B90301
                .long 0x20E0008
                .long 0x8992903
                .long 0x2050E00
                .long 0x8980E
                .long 0x1F02060E
                .long 0xE000898
                .long 0x98790405
                .long 0x60E0008
                .long 0x8988104
                .long 0x1050E00
                .long 0x89892
                .long 0xA801060E
                .long 0xE000898
                .long 0x98B90305
                .long 0x60E0008
                .long 0x8992903
                .long 0x2030E00
                .long 0x8980E
                .long 0x7904030E
                .long 0xE000898
                .long 0x98920103
                .long 0x30E0008
                .long 0x8990103
                .long 0x2070E00
                .long 0x8980E
                .long 0x7904070E
                .long 0xE000898
                .long 0x98920107
                .long 0x70E0008
                .long 0x8997103
                .long 0x6070E00
                .long 0x89990
                .long 0x8903000E
                .long 0x10000899
byte_89108:     .byte 0x27              # DATA XREF: ROM:00089023↑o
                .long byte_89118
                .byte 8
                .byte 0x1D
                .byte 5
                .byte 0xDB
                .fill 3, 1, 0
                .long 0
byte_89118:     .byte 0xF               # DATA XREF: ROM:00089109↑o
                .long dword_8916C
                .byte 8, 0x1E, 0xF
                .long byte_8912F
                .long 0x9050007, 1
                .fill 3, 1, 0
byte_8912F:     .byte 0xF               # DATA XREF: ROM:00089120↑o
                .long byte_89149
                .long 0x2666661B, 0xD053440
                .long word_89536
                .byte 5
                .short 0x85
                .byte 0
                .byte 0xC
                .byte 0
                .byte 0
                .byte 0
                .byte 0
byte_89149:     .byte 0xF               # DATA XREF: ROM:00089130↑o
                .long byte_89159
                .short 0xE2A
                .long 0x14017905, 6
                .byte 0
byte_89159:     .byte 0xF               # DATA XREF: ROM:0008914A↑o
                .long dword_8916C
                .short 0x1A
                .long 0x5404000, 0x8F, 0
dword_8916C:    .long 0x8917C27         # DATA XREF: ROM:00089119↑o
                .long 0x51B0900
                .long 0x1E
                .long 0
                .long 0x8919127
dword_89180:    .long 0xD000700         # DATA XREF: ROM:000894A8↓o
                .long 0x8929C
                .long 0x1B205
                .long 0
                .long 0x919E2800
                .long 0x927E0008
                .long 0x927E0008
                .long 0xB70F0008
                .long 0x4000891
                .long 0x1000008
                .long 0x1000001
                .long 0xB7050100
                .long 1
                .long 0xF000000
                .long 0x891D6
                .long 0x4010001
                .long 0x110011A
                .long 0x1001001
                .long 0x10210
                .long 0x1000502
                .long 0
dword_891D4:    .long 0xE90F0000
                .long 0x4000891
                .long 0x1000008
                .long 0xE405
                .long 0
                .long 0x92110F00
                .long 0x1C040008
                .long 0x3011001
                .long 0x1040110
                .long 0x10030000
                .long 0x10010401
                .long 0x1100301
                .long 0x104
                .long 0x1F205
                .long 0
                .long 0x92520F00
                .long 0x12080008
                .long 0x10011204
                .long 0x100101
                .long 0x4021003
                .long 0xD010001
                .long 0x89235
                .long 0x1F105
                .long 0
dword_89234:    .long 0x10E00
                .long 0x89241
                .long 0x8923536
dword_89240:    .long 0x80A1200
                .long 0x80A1D1B
                .long 0x1F2051B
                .long 0
                .long 0x630F0000
                .long 0x1000892
                .long 0xB050110
                .long 1
                .long 0xF000000
                .long 0x89279
                .long 0xD010001
                .long 0x8929C
                .long 0x8C05
                .long 0
dword_89278:    .long 0x927E1100
                .long 0x8E0F0008
                .long 0x2000892
                .long 0x10B0504
                .long 0
dword_8928C:    .long 0x9C0D0000, 0x5000892, 0x8C, 0
dword_8929C:    .long 0xC700010E, 0xE000892, 0x92B60002, 0x70E0008, 0x892EC00
                .long 0x929C3600, 0xA120008, 0xA1D0008, 0x23050008, 1
                .long 0x12000000, 0xD00080A, 0x892D9, 0x8D05, 0
                .long 0x10E00, 0x892FD, 0xEC00070E, 0x36000892, 0x892D9
                .long 0x8080A12, 0x8080A1D, 0x400AC05, 0xAB29, 0x80A1200
                .long 0x8E0500, 0
dword_89308:    .long 0x1A270000, 0x8000893, 0xDB051D, 0
                .long 0x690F0000, 0x8000893, 0x93310F1E, 0x70008, 0x10905
                .long 0
                .long 0x93460F00, 0x661B0008, 0x34402666, 0x200505, 0xC00
                .long 0x560F0000, 0x2A000893, 0x2E050E, 0x2600, 0x690F0000
                .long 0x1A000893, 0x40400000, 0x12005, 0
                .long 0x93852700, 0x5070008, 0x893850F, 0x2060400, 0x104
                .long 0x2E05, 0x26, 0x93952700, 0x1B090008, 0x19005, 0
                .long 0x93A52700, 0x70008, 0xFF05, 0
                .long 0x93B22800, 0x94290008, 0x943C0008, 0xCB0F0008, 0x4000893
                .long 0x1000010, 0x1000001, 0x35050100, 1, 0x20000000
                .long 0x94220F01, 0x10010008, 0x93E30D01, 0xEF050008, 0
                .long 0xE000000, 0x93EF0002, 0xE3360008, 0x12000893, 0x1D00080A
                .long 0xD00080A, 0x89405, 0xF105, 0
                .long 0x20E00, 0x89411, 0x8940536, 0x80A1200, 0x80A1D00
                .long 0xF30500, 0
                .long 0x200000, 0x8943C11, 0x943C0F00, 0x13D0008, 0x5020001
                .long 0x1C5, 0
                .long 0x8944A0D, 0xF00500, 0
                .long 0x20E0000, 0x8945600, 0x944A3600, 0xA120008, 0xA1D0008
                .long 0x6C0D0008, 0x5000894, 0xF2, 0
                .long 0x7800020E, 0x36000894, 0x8946C, 0x80A12, 0x80A1D
                .long 0xF405, 0
dword_89488:    .long 0x957D2700, 0x1D0B0008, 0x894A027, 0x51B0900, 0x1E
                .long 0
                .byte 0x27
                .long byte_894AC
                .byte 7, 0, 0x11
                .long dword_89180+3
byte_894AC:     .byte 0xF               # DATA XREF: ROM:000894A1↑o
                .long byte_8950E
                .byte 1, 0x10, 0
                .byte 0xF
                .long byte_894C7
                .byte 0x21, 4, 0
                .long 0xE7050000, 0xBB290401
                .byte 1
                .fill 2, 1, 0
byte_894C7:     .byte 0xF               # DATA XREF: ROM:000894B5↑o
                .long byte_894DA
                .long 0x1021, 0x1E70500, 0x1C02904
                .fill 2, 1, 0
byte_894DA:     .byte 0xF               # DATA XREF: ROM:000894C8↑o
                .long byte_894ED
                .byte 0x21
                .long 0x80, 0x401E705, 0x1E429
                .byte 0
byte_894ED:     .byte 0xF, 0, 0x95      # DATA XREF: ROM:000894DB↑o
                .long 0x210008, 0x5000004, 0x290400B3, 0x1EC
                .byte 0xD
                .long word_89536
                .byte 5
                .byte 0xE7
                .byte 1
                .byte 4
                .byte 0x29
                .short 0x85
                .byte 0
                .byte 0
byte_8950E:     .byte 0x27              # DATA XREF: ROM:000894AD↑o
                .long HONEY_GRAB_START
                .byte 0x35
                .byte 5, 0xD
                .long dword_8929C
                .short 0xF905
                .long 0
                .fill 3, 1, 0
HONEY_GRAB_START:.byte 0xF              # DATA XREF: ROM:0008950F↑o
                .long byte_8957D
                .byte 0xD
                .long word_89536
                .byte 5
                .byte 0xE7              # stored to P1_PARTS+0x195
                .byte 1                 # stored to P1_PARTS+0x194
                .byte 4                 # stored to P1_PARTS+0x196
                .byte 0x29              # stored to P1_PARTS+0x197
                .byte 133               # 133 = KNU_NAGE00_N
                .byte 0
                .byte 0
                .byte 0
word_89536:     .short 0x10E            # DATA XREF: ROM:0008913C↑o
                .byte 0
                .long byte_89542
                .byte 0x36
                .long word_89536
byte_89542:     .byte 0xF               # DATA XREF: ROM:00089539↑o
                .long byte_8955F
                .byte 0x3C
                .byte 0x13
                .long loc_80A10+2
                .long loc_80A1C+1
                .byte 0xD
                .long byte_89560
                .short 0x8705
                .long 0xC0000
                .fill 3, 1, 0
byte_8955F:     .byte 0x10              # DATA XREF: ROM:00089543↑o
byte_89560:     .byte 0xE, 1, 0         # DATA XREF: ROM:00089552↑o
                .long dword_8956C
                .byte 0x36
                .long byte_89560
dword_8956C:    .long 0x80A12           # DATA XREF: ROM:00089563↑o
                .long loc_80A1C+1
                .long 0x8905, 0xC
                .byte 0
byte_8957D:     .byte 0x10, 0x27        # DATA XREF: ROM:00089524↑o
                .long dword_895C8
                .byte 0xB
                .byte 0x1D, 0x27
                .long dword_89594+1
                .short 0x1B09
                .long 0x1E05, 0
dword_89594:    .long 0x95A12700, 0x70008, 0x8918311, 0x95BF2800, 0x95AE0008
                .long 0x95BF0008, 0xBF0F0008, 0x1000895, 0xC8050200, 1
                .long 0x5000000, 0x8F, 0
dword_895C8:    .long 0x96222710, 0x1D0B0008, 0x895E027, 0x51B0900, 0x190
                .long 0
                .long 0x895EC27, 0x11000700, 0x8939C, 0x895F928
                .fill 2, 4, 0x895F900
                .long 0x96140F00, 0x8040008, 0x4001000, 0x110, 0x5001001
                .long 0x290401E7, 0x20, 0x896220F, 0xEE0500, 0
                .long 0x27100000, 0x897DB, 0x410F1D0B, 0x8000896, 0x96410F1E
                .long 0x70008, 0x10905, 0
                .long 0x966B0F00, 0x8020008, 0x8965D0F, 0xD082900, 0x89695
                .long 0x12705, 0
                .long 0x96950D00, 0x28050008, 1, 0xF000000, 0x89791, 0x870F0902
                .long 0x29000896, 0x96950D08, 0x25050008, 1, 0xD000000
                .long 0x89695, 0x12605, 0
                .long 0x10E00, 0x896AF, 0xDD00020E, 0xE000896, 0x96F30007
                .long 0x95360008, 0xF000896, 0x896C7, 0xA120502, 0xA1D0008
                .long 0x79051008, 0x61401, 0x12000000, 0x1D00080A, 0xD10080A
                .long 0x8929C, 0x10C05, 0x26, 0x80A1200, 0x80A1D00, 0x98390D10
                .long 0xE5050008, 0
                .long 0xF000000, 0x89710, 0xA120802, 0xA1D0008, 0x430D0A08
                .long 0x5000897, 0x127, 0
                .long 0x8972D0F, 0x12090200, 0x1D00080A, 0xD0A080A, 0x89743
                .long 0x12505, 0
                .long 0x80A1200, 0x80A1D00, 0x97430D0A, 0x25050008, 1
                .long 0xE000000, 0x975D0001, 0x20E0008, 0x896DD00, 0x70E00
                .long 0x8975D, 0x8974336, 0x97750F00, 0x5020008, 0x80A12
                .long 0x10080A1D, 0x14017905, 6, 0x97900F00, 0xA120008
                .long 0xA1D0008, 0x9C0D1008, 0x5000892, 0x2600010C, 0
                .long 0x97A30F10, 0x1340008, 0xAB05060A, 0xC0000, 0x27000000
                .long 0x897B8, 0x9C0D0007, 0x5000892, 0x1B2, 0
                .long 0x897CD0F, 0xD082900, 0x89695, 0x12505, 0
                .long 0x96950D00, 0x26050008, 1, 0x10000000, 0x8980D27
                .long 0xF1D0B00, 0x897F8, 0x4010000, 0x118, 0x6010000
                .long 0x16000000, 0x8980D0F, 0x2000000, 0x10C04, 0x2000000
                .long 6, 0x1E27100F, 0xB000898, 0xD4051D, 0x60C, 0x27100000
                .long 0x89878, 0x780F1D0B, 0xD000898, 0x89839, 0xE505
                .long 0
                .long 0x20E00, 0x89845, 0x8983936, 0x80A1200, 0x80A1D00
                .long 0x985B0D00, 0xE6050008, 0
                .long 0xE000000, 0x98670002, 0x5B360008, 0x12000898, 0x1D00080A
                .long 0x500080A, 0xE8, 0
                .long 0x98802710, 0x1D0B0008, 0x98912710, 0x1D0B0008, 0xC00D305
                .long 6, 0xA7271000, 0xB000898, 0x98A70F1D, 0x79050008
                .long 0x61401, 0x10000000, 0x898B827, 0x51D0B00, 0x61401D5
                .long 0
                .long 0x99002710, 0x1D0B0008, 0x898D00F, 0x50C3800, 0x6400179
                .long 0
                .long 0x898E00F, 0x50A3800, 0x6400179, 0
                .long 0x899000F, 0x98F41300, 8, 0x5C801E01, 0x8F95658
                .long 0x5000116, 0x6000001, 0
                .long 0x99282710, 0x1D0B0008, 0x899280F, 0x991C1300, 8
                .long 0x8C800204, 0x8F95630, 0x5000116, 0x6000204, 0
                .long 0x99702710, 0x1D0B0008, 0x899400F, 0x50C3800, 0x64001D5
                .long 0
                .long 0x899500F, 0x50A3800, 0x64001D5, 0
                .long 0x899700F, 0x99641300, 8, 0x8C80015A, 0x8F955E8
                .long 0x5000116, 0x600015A, 0
                .long 0x99882710, 0x1D0B0008, 0x899880F, 0x50A3900, 0x68040ED
                .long 0
                .long 0x39143910, 0x101E3715, 0x899FC27, 0xF000700, 0x899AF
                .long 0x20010E08, 0x13202, 0x7C050533, 0x1C0041, 0xF000000
                .long 0x899C7, 0x20010E08, 0x13201, 0x7C050633, 0x1C0041
                .long 0xF000000, 0x899DF, 0x10E08, 0x13202, 0x7C050133
                .long 0x1C0041, 0xF000000, 0x899F7, 0x10E08, 0x13201, 0x7C050233
                .long 0x1C0041, 0x11000000, 0x89A5C, 0x89A140F, 0x10E0800
                .long 0x1320220, 0x5063300, 0x1C00417C, 0
                .long 0x89A2C0F, 0x10E0800, 0x1320120, 0x5053300, 0x1C00417C
                .long 0
                .long 0x89A440F, 0x10E0800, 0x1320200, 0x5023300, 0x1C00417C
                .long 0
                .long 0x89A5C0F, 0x10E0800, 0x1320100, 0x5013300, 0x1C00417C
                .long 0
                .long 0x89A740F, 0x10E0800, 0x1320020, 0x5043300, 0x1C00417C
                .long 0
                .long 0x89A890F, 0x320E0800, 0x330001, 0x417C05, 0x1C
                .long 0x1000
# =============== S U B R O U T I N E =======================================
init_floats:                            # CODE XREF: ROM:00007208↑p
                lda     0x3B1CCCCD, r15
                st      r15, 0x509500
                lda     0x402DF854, r15
                st      r15, 0x509504
                lda     0x4622F984, r15
                st      r15, 0x509508
                lda     0x40490FDA, r15
                st      r15, FUCKING_PI
                lda     0x40C90FDB, r15
                st      r15, PI_X2
                lda     0x3FB504F3, r15
                st      r15, 0x509514
                lda     0x3F800000, r4
                mov     r4, r5
                mov     r4, r6
                stt     r4, player_model_y_scale
                lda     0x41200000, r15
                st      r15, float_10
                lda     0x42C80000, r15
                st      r15, float_100
                lda     0x447A0000, r15
                st      r15, float_1000
                lda     0x461C4000, r15
                st      r15, float_10000
                ret
# End of function init_floats
# =============== S U B R O U T I N E =======================================
sub_89B48:                              # CODE XREF: ROM:00089DC0↓p
                st      g0, 0xC(g3)
                st      g4, 0x18(g3)
                mov     0, r15
                st      r15, 0x48(g3)
                ld      player_model_y_scale, r4
                st      r4, 0x0(g3)
                ret
# End of function sub_89B48
# ---------------------------------------------------------------------------
                call    rand            # unreachable code
                cvtir   g0, r3
                lda     0x477FFF00, r7
                divr    r7, r3, g0
                ret
# =============== S U B R O U T I N E =======================================
sub_89B80:                              # CODE XREF: ROM:00089DF4↓p
                lda     0x4622F984, r7
                ld      0x48(g3), r3
                addo    1, r3, r3
                st      r3, 0x48(g3)
                cvtir   r3, r3
                mulr    r7, r3, r4
                mulr    r4, g4, r4
                ld      0xC(g3), r8
                ld      0x18(g3), r12
                cvtri   r4, r4
                lda     0x12802525, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                divr    g4, r12, r12
                lda     0x12002424, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                addr    r8, r12, r8
                ld      0x0(g3), r4
                mulr    g0, r4, r4
                st      r4, 0x0(g3)
                mulr    r4, r8, g0
                ret
# End of function sub_89B80
# =============== S U B R O U T I N E =======================================
sub_89BF8:                              # CODE XREF: sub_7F408↑p
                stt     g0, 0xC(g3)
                stt     g4, 0x18(g3)
                mov     0, r15
                st      r15, 0x48(g3)
                lda     0x3F800000, r3
                mov     r3, r4
                mov     r3, r5
                mov     r3, r6
                stt     r4, 0x0(g3)
                ret
# End of function sub_89BF8
# =============== S U B R O U T I N E =======================================
pendulum_3axis_cnt:                     # CODE XREF: dented_cnt+4C↑p
                lda     0x4622F984, r7  # Label from official source
                ld      0x48(g3), r3
                addo    1, r3, r3
                st      r3, 0x48(g3)
                cvtir   r3, r3
                mulr    r7, r3, r4
                lda     0x2F005E5E, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      g4, (g11)[g12*1]
                st      g5, (g11)[g12*1]
                st      g6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                ldt     0xC(g3), r8
                ldt     0x18(g3), r12
                cvtri   r4, r4
                lda     0x12802525, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                divr    g4, r12, r12
                lda     0x12002424, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                cvtri   r5, r5
                lda     0x12802525, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                ld      (g11)[g12*1], r9
                divr    g5, r13, r13
                lda     0x12002424, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                ld      (g11)[g12*1], r13
                cvtri   r6, r6
                lda     0x12802525, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                divr    g6, r14, r14
                lda     0x12002424, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                ld      (g11)[g12*1], r14
                lda     0x2E005C5C, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                ldt     0x0(g3), r4
                mulr    g0, r4, r4
                mulr    g1, r5, r5
                mulr    g2, r6, r6
                stt     r4, 0x0(g3)
                mulr    r4, r8, g0
                mulr    r5, r9, g1
                mulr    r6, r10, g2
                ret
# End of function pendulum_3axis_cnt
# ---------------------------------------------------------------------------
                subr    g0, g1, r4      # unreachable code
                subr    g2, g3, r5
                divr    r4, r5, r7
                subo    1, g4, r3
                cvtir   r3, r3
                divr    r3, r4, r3
                mulr    r3, r7, r7
                mov     g4, r11
                shlo    2, 0x13, r12
                mov     g0, r4
                mov     g3, r5
                ld      player_model_y_scale, r6
                ld      PI_X2, r8
                mov     g5, g3
                mov     0, g4
loc_89DB0:                              # CODE XREF: ROM:00089DD4↓j
                mulr    r8, r4, r9
                st      r9, 0x3C(g3)
                st      r6, 0x30(g3)
                mov     r5, g0
                call    sub_89B48
                addr    r3, r4, r4
                subr    r7, r5, r5
                addo    r12, g3, g3
                cmpdeco 1, r11, r11
                bl      loc_89DB0
                ret
# ---------------------------------------------------------------------------
                mov     g4, r11
                shlo    2, 0x13, r12
                mov     g5, g3
                mov     0, r8
loc_89DEC:                              # CODE XREF: ROM:00089E04↓j
                ld      0x30(g3), g0
                ld      0x3C(g3), g4
                call    sub_89B80
                addr    g0, r8, r8
                addo    r12, g3, g3
                cmpdeco 1, r11, r11
                bl      loc_89DEC
                mov     r8, g0
                ret
# ---------------------------------------------------------------------------
                mov     g0, r3          # unreachable code
                mov     g4, r14
                mov     g5, r7
                ldq     (r3), g0
                call    sub_89EF8
                movl    g0, r8
                mov     g2, r4
                mov     g3, g5
                ldq     0x10(r3), g0
                call    sub_89EF8
                movl    g0, r10
                mov     g2, r5
                mov     g3, g6
                ldq     0x20(r3), g0
                call    sub_89EF8
                movl    g0, r12
                mov     g2, r6
                mov     g3, g2
                mov     g5, g0
                mov     g6, g1
                mov     r7, g3
                movt    0, g4
                addo    4, sp, sp
                st      g8, -4(sp)
                addo    4, sp, sp
                st      g9, -4(sp)
                addo    4, sp, sp
                st      g10, -4(sp)
                ld      player_model_y_scale, g8
                mov     g8, g9
                mov     g8, g10
                shlo    2, 0x13, r15
loc_89EA0:                              # CODE XREF: ROM:00089ECC↓j
                stt     r4, 0x3C(g3)
                stt     g8, 0x30(g3)
                call    sub_89BF8
                addr    r8, r4, r4
                subr    r9, g0, g0
                addr    r10, r5, r5
                subr    r11, g1, g1
                addr    r12, r6, r6
                subr    r13, g2, g2
                addo    r15, g3, g3
                cmpdeco 1, r14, r14
                bl      loc_89EA0
                ld      -4(sp), g10
                subo    4, sp, sp
                ld      -4(sp), g9
                subo    4, sp, sp
                ld      -4(sp), g8
                subo    4, sp, sp
                ret
# =============== S U B R O U T I N E =======================================
sub_89EF8:                              # CODE XREF: ROM:00089E20↑p
                subr    g0, g1, r4
                subr    g2, g3, r5
                divr    r4, r5, r7
                subo    1, g4, r3
                cvtir   r3, r3
                ld      PI_X2, r11
                mov     g0, g2
                mulr    r11, g2, g2
                divr    r3, r4, r4
                mulr    r4, r7, g1
                mulr    r11, r4, g0
                ret
# End of function sub_89EF8
# ---------------------------------------------------------------------------
                addo    4, sp, sp       # unreachable code
                st      g5, -4(sp)
                mov     g4, r11
                mov     g5, g3
                movt    0, r8
                shlo    2, 0x13, r15
loc_89F48:                              # CODE XREF: ROM:00089F68↓j
                ldt     0x30(g3), g0
                ldt     0x3C(g3), g4
                call    pendulum_3axis_cnt
                addr    g0, r8, r8
                addr    g1, r9, r9
                addr    g2, r10, r10
                addo    r15, g3, g3
                cmpdeco 1, r11, r11
                bl      loc_89F48
                movt    r8, g0
                ld      -4(sp), g5
                subo    4, sp, sp
                ret
# =============== S U B R O U T I N E =======================================
# Projectile (tobi = flight)
fa_tobi:                                # DATA XREF: ADV_REPLAY_INT+5A4↑o
                lda     0x40808181, r15
                st      r15, (g11)[g12*1]
                lda     0x200(g13), r14
                mov     0, r15
                shlo    7, 0xF, r13
loc_89F98:                              # CODE XREF: fa_tobi+24↓j
                st      r15, (r14)
                lda     4(r14), r14
                cmpdeco 1, r13, r13
                bl      loc_89F98
                lda     sub_89FB8, r15
                st      r15, 0xC(g13)
                ret
# End of function fa_tobi
# =============== S U B R O U T I N E =======================================
sub_89FB8:                              # DATA XREF: fa_tobi+28↑o
                ld      debug_flag, r15
                bbs     5, r15, loc_89FD0 # seems to normally fall through
                call    sub_8A29C
                call    sub_8A2E4
                call    zanzou_control  # "Afterimage" (zanzou)
loc_89FD0:                              # CODE XREF: sub_89FB8+8↑j
                ret
# End of function sub_89FB8
# =============== S U B R O U T I N E =======================================
projectile_main_routine:                # CODE XREF: play_motion:call_projectile_routine↑p
                ld      mod_fa_tobi, r9 # Projectile (tobi = flight)
                lda     0x200(r9), r9
                mov     0x1E, r11
loc_89FE4:                              # CODE XREF: projectile_main_routine+2C0↓j
                ld      0x0(r9), r15
                bbs     0x1F, r15, loc_8A288
                lda     0x0(r9), r14
                mov     0, r15
                shlo    6, 1, r13
loc_89FF8:                              # CODE XREF: projectile_main_routine+30↓j
                st      r15, (r14)
                lda     4(r14), r14
                cmpdeco 1, r13, r13
                bl      loc_89FF8
                ldob    4(g4), r3
                ldob    5(g4), r15
                shlo    8, r15, r15
                addo    r15, r3, r3
                ldob    6(g4), r15
                shlo    0x10, r15, r15
                addo    r15, r3, r3
                ldob    7(g4), r15
                shlo    0x18, r15, r15
                addo    r15, r3, r3
                setbit  0x1F, r3, r3
                st      r3, 0x0(r9)
                mov     0, r15
                stib    r15, 0xC(r9)
                ldib    3(g4), r15
                stib    r15, 0x26(r9)   # Store projectile type
                ldos    0x1A8(g7), g0
                mov     4, g1
                call    calc_mht_adr
                cmpobe  0, g0, loc_8A0A8
                ldob    3(g0), r3
                ld      0x0(g7), r15
                bbc     0x12, r15, loc_8A074
                shlo    7, 5, r13
                ldos    0xC7C(g7), r14
                cmpible r13, r14, loc_8A074
                shri    2, r3, r3
loc_8A074:                              # CODE XREF: projectile_main_routine+8C↑j
                stob    r3, 0x24(r9)
                ldib    2(g0), r15
                stib    r15, 0x8E(r9)
                ldib    7(g0), r15
                stib    r15, 0x7E(r9)
                ldib    8(g0), r15
                stib    r15, 0x7F(r9)
                ldib    0xA(g0), r15
                stib    r15, 0x25(r9)
                ldib    9(g0), r15
                stib    r15, 0x88(r9)
                ldib    4(g0), r15
                stib    r15, 0xD(r9)
loc_8A0A8:                              # CODE XREF: projectile_main_routine+80↑j
                ldib    9(g4), r15
                stib    r15, 0x89(r9)
                ldib    0x89(r9), r15
                stib    r15, 0xA2(r9)
                ldib    0xA(g4), r15
                stib    r15, 0x8A(r9)
                ldib    0xB(g4), r15
                stib    r15, 0x8B(r9)
                ldib    0xC(g4), r15
                stib    r15, 0x90(r9)
                ldib    0xD(g4), r15
                stib    r15, 0x91(r9)
                ldib    0xE(g4), r15
                stib    r15, 0x92(r9)
                ldib    0xF(g4), r15
                stib    r15, 0x93(r9)
                ldib    0x10(g4), r15
                stib    r15, 0x94(r9)
                ldib    0x11(g4), r15
                stib    r15, 0x95(r9)
                ldib    0x12(g4), r15
                stib    r15, 0x96(r9)
                ldib    0x13(g4), r15
                stib    r15, 0x97(r9)
                ldib    0x14(g4), r15
                stib    r15, 0x98(r9)
                ldib    0x15(g4), r15
                stib    r15, 0x99(r9)
                ldib    0x16(g4), r15
                stib    r15, 0x9A(r9)
                ldib    0x17(g4), r15
                stib    r15, 0x9B(r9)
                ldib    4(g7), r15
                stib    r15, 0x27(r9)
                ldos    0x808(g7), r13
                ldos    0x80C(g7), r14
                subi    r13, r14, r15
                stos    r15, 0xA4(r9)
                st      g7, 0x1C(r9)
                ldob    0x26(r9), r12
                ld      projectile_list[r12*4], r11
                ldob    0x1B1(g7), r13
                ldob    0x1B0(g7), r14
                cmpobe  r13, r14, loc_8A164 # If character is not a mirror version branch
                ld      projectile_I_list[r12*4], r11
loc_8A164:                              # CODE XREF: projectile_main_routine+184↑j
                st      r11, 4(r9)
                ldib    0xD(r9), r3
                ldob    0x24(r9), r4
                cmpobe  0, r3, loc_8A19C
                cmpibg  0, r3, loc_8A180
                mov     r3, r4
                b       loc_8A19C
# ---------------------------------------------------------------------------
loc_8A180:                              # CODE XREF: projectile_main_routine+1A0↑j
                ldos    0xA4(r9), r4
                ldob    0x89(r9), r5
                cmpobe  0, r5, loc_8A19C
                subi    r5, r4, r6
                mov     0xA, r4
                cmpibg  r4, r6, loc_8A19C
                mov     r6, r4
loc_8A19C:                              # CODE XREF: projectile_main_routine+19C↑j
                stos    r4, 0xA6(r9)
                ldob    0x26(r9), r12
                ld      projectile_list[r12*4], r10
                ldob    0x1B1(g7), r13
                ldob    0x1B0(g7), r14
                cmpobe  r13, r14, loc_8A1C0 # If character is not a mirror version branch
                ld      projectile_I_list[r12*4], r10
loc_8A1C0:                              # CODE XREF: projectile_main_routine+1E0↑j
                ld      fa_rob1, r7
                ldob    0x27(r9), r3
                cmpobe  0, r3, loc_8A1D8
                ld      fa_rob0, r7
loc_8A1D8:                              # CODE XREF: projectile_main_routine+1F8↑j
                st      r7, 0x20(r9)
                ld      0x0(r10), r15
                st      r15, 8(r9)
                ld      4(r10), r15
                st      r15, 0x10(r9)
                ld      8(r10), r15
                st      r15, 0x14(r9)
                ld      0xC(r10), r15
                st      r15, 0x18(r9)
                ld      0x10(r10), r15
                st      r15, 0x80(r9)
                ldis    0x26(g7), r15
                stis    r15, 0x72(r9)
                ldob    8(g4), r3
                ld      0x0(g7), r15
                bbc     6, r15, loc_8A220
                ldob    byte_B5248[r3], r3
loc_8A220:                              # CODE XREF: projectile_main_routine+240↑j
                stob    r3, 0x8F(r9)
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r3, r15
                st      r15, (g11)[g12*1]
                ldt     0x14(r10), r4
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                stt     r4, 0x44(r9)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                b       loc_8A298
# ---------------------------------------------------------------------------
loc_8A288:                              # CODE XREF: projectile_main_routine+14↑j
                shlo    8, 1, r13
                addi    r13, r9, r9
                cmpdeco 1, r11, r11
                bl      loc_89FE4
loc_8A298:                              # CODE XREF: projectile_main_routine+2B0↑j
                ret
# End of function projectile_main_routine
# =============== S U B R O U T I N E =======================================
sub_8A29C:                              # CODE XREF: sub_89FB8+C↑p
                lda     0x200(g13), g6
                mov     0x1E, r11
loc_8A2A4:                              # CODE XREF: sub_8A29C+40↓j
                ld      0x0(g6), r15
                bbc     0x1F, r15, loc_8A2D0
                ld      8(g6), r3
                cmpobne 0, r3, loc_8A2C0
                mov     0, r15
                st      r15, 0x0(g6)
                b       loc_8A2D0
# ---------------------------------------------------------------------------
loc_8A2C0:                              # CODE XREF: sub_8A29C+14↑j
                ld      0x28(g6), r14
                addi    1, r14, r15
                st      r15, 0x28(g6)
                callx   (r3)
loc_8A2D0:                              # CODE XREF: sub_8A29C+C↑j
                shlo    8, 1, r13
                addi    r13, g6, g6
                cmpdeco 1, r11, r11
                bl      loc_8A2A4
                ret
# End of function sub_8A29C
# =============== S U B R O U T I N E =======================================
sub_8A2E4:                              # CODE XREF: sub_89FB8+10↑p
                ld      mod_fa_enemy0, r3
                ld      0x0(r3), r15
                bbc     0x1F, r15, loc_8A30C
                lda     0xFF, r15
                stib    r15, 0x11A(r3)
                mov     0, r15
                stib    r15, 0x11C(r3)
                mov     0, r15
                stib    r15, 0x11D(r3)
loc_8A30C:                              # CODE XREF: sub_8A2E4+C↑j
                ld      mod_fa_enemy1, r3
                ld      0x0(r3), r15
                bbc     0x1F, r15, loc_8A334
                lda     0xFF, r15
                stib    r15, 0x11A(r3)
                mov     0, r15
                stib    r15, 0x11C(r3)
                mov     0, r15
                stib    r15, 0x11D(r3)
loc_8A334:                              # CODE XREF: sub_8A2E4+34↑j
                lda     0x200(g13), g6
                mov     0x1E, r11
loc_8A33C:                              # CODE XREF: sub_8A2E4+1AC↓j
                ld      0x0(g6), r15
                bbc     0x1F, r15, loc_8A484
                ldob    0x26(g6), r3
                ld      dword_8A498[r3*4], r4
                cmpobe  0, r4, loc_8A484
                cmpobe  1, r4, loc_8A400
                ld      0x0(g6), r15
                bbc     1, r15, loc_8A484
                ld      0x20(g6), r3
                ldt     0x1F4(r3), r8
                ldt     0x44(g6), g0
                ldt     0x5C(g6), r4
                mov     1, g3
loc_8A374:                              # CODE XREF: sub_8A2E4+DC↓j
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                lda     0x40000000, r7
                cmpr    r7, r3
                bg      loc_8A3C4
                addr    r4, g0, g0
                addr    r5, g1, g1
                addr    r6, g2, g2
                addo    1, g3, g3
                cmpobe  0x1E, g3, loc_8A484
                b       loc_8A374
# ---------------------------------------------------------------------------
loc_8A3C4:                              # CODE XREF: sub_8A2E4+C4↑j
                ld      mod_fa_enemy0, r3
                ld      0x20(g6), r4
                ldob    4(r4), r14
                cmpobe  0, r14, loc_8A3E0
                ld      mod_fa_enemy1, r3
loc_8A3E0:                              # CODE XREF: sub_8A2E4+F0↑j
                ldob    0x11A(r3), r14
                cmpobg  g3, r14, loc_8A484
                mov     2, r15
                stib    r15, 0x11C(r3)
                stob    g3, 0x11A(r3)
                ldib    0x8E(g6), r15
                stib    r15, 0x11D(r3)
                b       loc_8A484
# ---------------------------------------------------------------------------
loc_8A400:                              # CODE XREF: sub_8A2E4+70↑j
                ldob    0xA2(g6), g3
                cmpobe  0, g3, loc_8A484
                cmpoble 0x1E, g3, loc_8A484
                ldt     0x50(g6), g0
                ld      0x20(g6), r3
                ldt     0x1F4(r3), r8
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      g2, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                lda     0x40000000, r4
                cmpr    r4, r3
                bl      loc_8A484
                ld      mod_fa_enemy0, r3
                ld      0x20(g6), r4
                ldob    4(r4), r14
                cmpobe  0, r14, loc_8A464
                ld      mod_fa_enemy1, r3
loc_8A464:                              # CODE XREF: sub_8A2E4+174↑j
                ldob    0x11A(r3), r14
                cmpobg  g3, r14, loc_8A484
                mov     1, r15
                stib    r15, 0x11C(r3)
                stob    g3, 0x11A(r3)
                ldib    0x8E(g6), r15
                stib    r15, 0x11D(r3)
                b       loc_8A484
# ---------------------------------------------------------------------------
loc_8A484:                              # CODE XREF: sub_8A2E4+5C↑j
                shlo    8, 1, r13
                addi    r13, g6, g6
                cmpdeco 1, r11, r11
                bl      loc_8A33C
                ret
# End of function sub_8A2E4
# ---------------------------------------------------------------------------
dword_8A498:    .long 0                 # DATA XREF: sub_8A2E4+64↑r
                .long 2
                .long 1
                .long 1
                .long 2
                .long 0
                .long 0
                .long 0
                .long 4
                .long 0
                .long 3
                .long 6
                .long 5
                .long 0
                .long 2
                .long 0
                .long 7
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
                .long 0
# =============== S U B R O U T I N E =======================================
# "Projectile" (tobi)
tobi_disp:                              # CODE XREF: camera_init+1640↑p
                call    zanzou_disp     # Label from official source
                mov     0, g3
loc_8A520:                              # CODE XREF: mirror_tobi_disp+8↓j
                ld      mod_fa_tobi, g6 # Projectile (tobi = flight)
                lda     0x200(g6), g6
                mov     0x1E, r11
loc_8A530:                              # CODE XREF: tobi_disp+70↓j
                ld      0x0(g6), r15
                bbc     0x1F, r15, loc_8A57C
                ld      0x0(g6), r15
                bbs     9, r15, loc_8A57C
                ld      8(g6), r3
                cmpobne 0, r3, loc_8A554
                mov     0, r15
                st      r15, 0x0(g6)
                b       loc_8A57C
# ---------------------------------------------------------------------------
loc_8A554:                              # CODE XREF: tobi_disp+2C↑j
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                ldob    0x26(g6), r12
                ld      _uk_projectile[r12*4], r10
                callx   (r10)
loc_8A57C:                              # CODE XREF: tobi_disp+1C↑j
                shlo    8, 1, r13
                addi    r13, g6, g6
                cmpdeco 1, r11, r11
                bl      loc_8A530
                ret
# End of function tobi_disp
# =============== S U B R O U T I N E =======================================
# "Projectile" (tobi)
tobi_disp_go:                           # CODE XREF: tdl_bakudan↓p
                lda     0x9801313, r15  # Label from official source
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                cmpobe  0, g3, loc_8A5F0
                ld      0x0(g6), r15
                bbs     6, r15, loc_8A68C
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     0xBF800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
loc_8A5F0:                              # CODE XREF: tobi_disp_go+24↑j
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                ldt     0x44(g6), r12
                stt     r12, (g11)[g12*1]
                ld      0x0(g6), r15
                bbc     7, r15, loc_8A61C
                lda     0x8001010, r15
                st      r15, (g11)[g12*1]
                b       loc_8A660
# ---------------------------------------------------------------------------
loc_8A61C:                              # CODE XREF: tobi_disp_go+78↑j
                ld      0x0(g6), r15
                bbs     3, r15, loc_8A660
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                ldis    0x72(g6), r15
                st      r15, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                ldis    0x70(g6), r15
                st      r15, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                ldis    0x74(g6), r15
                st      r15, (g11)[g12*1]
loc_8A660:                              # CODE XREF: tobi_disp_go+88↑j
                ld      0x68(g6), r5
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ldos    0x7C(g6), r11
                mov     0, g1
                lda     (r11), g0
                call    set_obj
loc_8A68C:                              # CODE XREF: tobi_disp_go+2C↑j
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# End of function tobi_disp_go
# ---------------------------------------------------------------------------
_uk_projectile: .long tobi_disp_go      # DATA XREF: tobi_disp+58↑r
                .long tobi_disp_go      # "Projectile" (tobi)
                .long tdl_bakudan       # "Bomb" (bakudan)
                .long tdl_bakudan       # "Bomb" (bakudan)
                .long tobi_disp_go      # "Projectile" (tobi)
                .long tobi_disp_go      # "Projectile" (tobi)
                .long tobi_disp_go      # "Projectile" (tobi)
                .long tdl_bakudan       # "Bomb" (bakudan)
                .long tdl_bakudan       # "Bomb" (bakudan)
                .long tdl_bakudan       # "Bomb" (bakudan)
                .long tdl_laser
                .long tdl_bero          # "Tongue" (bero)
                .long tobi_disp_go      # "Projectile" (tobi)
                .long tobi_disp_go      # "Projectile" (tobi)
                .long tobi_disp_go      # "Projectile" (tobi)
                .long tdl_berotsukami   # "Tongue Grab" (bero tsukami)
                .long tdl_otoshi        # "Drop" (otoshi)
                .long tdl_otoshi2       # "Drop" (otoshi)
                .long tdl_null          # return
                .long tdl_null          # return
                .long tdl_null          # return
                .long tdl_null          # return
                .long tdl_null          # return
                .long tdl_null          # return
                .long tdl_null          # return
                .long tdl_null          # return
                .long tdl_null          # return
                .long tdl_null          # return
                .long tdl_null          # return
                .long tdl_null          # return
                .long tdl_null          # return
                .long tdl_null          # return
# =============== S U B R O U T I N E =======================================
# return
tdl_null:                               # DATA XREF: ROM:0008A6E4↑o
                ret                     # Label from official source
# End of function tdl_null
# ---------------------------------------------------------------------------
bomb_fire_location_marker_circle:.short 2204
                .short 2204
                .short 2204
                .short 2205
                .short 2205
                .short 2205
                .short 2205
                .short 2203
                .short 2203
                .short 2203
                .short 2203
bomb_fire_location_marker:.short 2200   # DATA XREF: tdl_bakudan+84↓r
                .short 2200
                .short 2200
                .short 2202
                .short 2202
                .short 2202
                .short 2202
                .short 2201
                .short 2201
                .short 2201
                .short 2201
# =============== S U B R O U T I N E =======================================
# "Bomb" (bakudan)
tdl_bakudan:                            # DATA XREF: ROM:0008A6A4↑o
                call    tobi_disp_go    # Label from official source
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                ldos    0x8C(g6), r3
                cmpobe  0, r3, loc_8A898
                cmpobne 0, g3, loc_8A898
                ldob    0x89(g6), r4
                ldob    0xA2(g6), r5
                lda     0xB801717, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0xB801717, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                divr    r4, r5, r6
                lda     0x41200000, r13
                mulr    r13, r6, r5
                lda     0xC001818, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ldos    bomb_fire_location_marker_circle[r4*2], r10
                ldos    bomb_fire_location_marker[r4*2], r11
                lda     0x3F800000, r13
                subr    r13, r6, r6
                notbit  0x1F, r6, r6
                lda     0x46800000, r13
                mulr    r13, r6, r6
                lda     0xC001818, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                ld      0x84(g6), r7
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                ldt     0x50(g6), r12
                stt     r12, (g11)[g12*1]
                mov     0, g1
                lda     (r10), g0
                call    set_obj
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                mov     0, g1
                lda     (r11), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                subi    r6, 0, r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     (r11), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_8A898:                              # CODE XREF: tdl_bakudan+20↑j
                ld      0x0(g6), r15
                bbs     6, r15, loc_8AA28
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                ldos    0xA0(g6), r3
                cmpobe  0, r3, loc_8AA28
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                ldt     0x44(g6), r12
                stt     r12, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                ldis    0x72(g6), r15
                st      r15, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                ldis    0x70(g6), r15
                st      r15, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                ldis    0x74(g6), r15
                st      r15, (g11)[g12*1]
                ld      0x68(g6), r5
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      0x18(g6), r7
                ld      0x0(r7), r4
                addo    4, r7, r7
                mulo    0x10, r4, r4
                addo    r4, r7, r7
                ldt     (r7), r4
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                cmpobe  0, g3, loc_8A9CC
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     0xBF800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
loc_8A9CC:                              # CODE XREF: tdl_bakudan+24C↑j
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x8001010, r15
                st      r15, (g11)[g12*1]
                ld      0x98(g6), r5
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ldos    0xA0(g6), r11
                mov     0, g1
                lda     (r11), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_8AA28:                              # CODE XREF: tdl_bakudan+150↑j
                ret
# End of function tdl_bakudan
# =============== S U B R O U T I N E =======================================
# "Projectile" (tobi)
mirror_tobi_disp:                       # CODE XREF: camera_init+11FC↑p
                call    mirror_zanzou_disp # Label from official source
                mov     1, g3
                b       loc_8A520
# End of function mirror_tobi_disp
# =============== S U B R O U T I N E =======================================
# "Afterimage" (zanzou)
zanzou_control:                         # CODE XREF: sub_89FB8+14↑p
                lda     loc_32180+1, r5 # Label from official source
                ld      zanzou_ma, r7
                lda     0x24804949, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x41008282, r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                stos    r15, zanzou_num
                ld      fa_rob0, r14
                ldos    0xC60(r14), r15
                cmpobne 0, r15, loc_8AA98
                lda     0x43008686, r15
                st      r15, (g11)[g12*1]
                ldob    4(r14), r15
                st      r15, (g11)[g12*1]
loc_8AA98:                              # CODE XREF: zanzou_control+48↑j
                ld      fa_rob1, r14
                ldos    0xC60(r14), r15
                cmpobne 0, r15, loc_8AABC
                lda     0x43008686, r15
                st      r15, (g11)[g12*1]
                ldob    4(r14), r15
                st      r15, (g11)[g12*1]
loc_8AABC:                              # CODE XREF: zanzou_control+6C↑j
                ld      fa_rob0, r10
                ldos    0xC60(r10), r14
                cmpobe  0, r14, loc_8ABC4
                ld      0x0(r10), r15
                ld      0x7EC(r10), r13
                xor     r15, r13, r13
                bbs     0x1F, r13, loc_8ABC4
                bbc     6, r15, loc_8AB10
                lda     0xE1C0, r11
                and     r11, r14, r12
                lda     loc_1C38, r11
                and     r11, r14, r13
                lda     0x207, r11
                and     r11, r14, r15
                shro    3, r12, r12
                shlo    3, r13, r13
                or      r13, r12, r14
                or      r15, r14, r14
loc_8AB10:                              # CODE XREF: zanzou_control+A4↑j
                mov     r14, r8
                lda     0xFFFF, r15
                and     r15, r8, r8
                lda     0x40008080, r15
                st      r15, (g11)[g12*1]
                ldob    4(r10), r15
                st      r15, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                ldis    0xC62(r10), r15
                st      r15, (g11)[g12*1]
                ldob    0x84C(r10), r15
                ld      all_floats_0_5[r15*4], r14
                ldob    0x1B0(r10), r13
                ld      (r14)[r13*4], r14
                st      r14, (g11)[g12*1]
                ld      off_B5408, r14
                ld      0x0(r10), r12
                bbs     0x1B, r12, loc_8AB70
                ld      off_B540C[r15*4], r14
loc_8AB70:                              # CODE XREF: zanzou_control+12C↑j
                ld      (r14)[r13*4], r11
loc_8AB74:                              # CODE XREF: zanzou_control+174↓j
                scanbit r8, r13
                cmpibg  0, r13, loc_8ABB0
                st      r13, (g11)[g12*1]
                ldos    displacement(r11)[r13*8], r12
                st      r12, (g11)[g12*1]
                ldos    2(r11)[r13*8], r12
                st      r12, (g11)[g12*1]
                ldos    4(r11)[r13*8], r12
                st      r12, (g11)[g12*1]
                clrbit  r13, r8, r8
                ld      (g11)[g12*1], r15
                b       loc_8AB74
# ---------------------------------------------------------------------------
loc_8ABB0:                              # CODE XREF: zanzou_control+140↑j
                subo    1, 0, r15
                st      r15, (g11)[g12*1]
                ldis    0xA1E(r10), r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
loc_8ABC4:                              # CODE XREF: zanzou_control+90↑j
                ld      fa_rob1, r10
                ldos    0xC60(r10), r14
                cmpobe  0, r14, loc_8ACCC
                ld      0x0(r10), r15
                ld      0x7EC(r10), r13
                xor     r15, r13, r13
                bbs     0x1F, r13, loc_8ACCC
                bbc     6, r15, loc_8AC18
                lda     0xE1C0, r11
                and     r11, r14, r12
                lda     loc_1C38, r11
                and     r11, r14, r13
                lda     0x207, r11
                and     r11, r14, r15
                shro    3, r12, r12
                shlo    3, r13, r13
                or      r13, r12, r14
                or      r15, r14, r14
loc_8AC18:                              # CODE XREF: zanzou_control+1AC↑j
                mov     r14, r8
                lda     0xFFFF, r15
                and     r15, r8, r8
                lda     0x40008080, r15
                st      r15, (g11)[g12*1]
                ldob    4(r10), r15
                st      r15, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                ldis    0xC62(r10), r15
                st      r15, (g11)[g12*1]
                ldob    0x84C(r10), r15
                ld      all_floats_0_5[r15*4], r14
                ldob    0x1B0(r10), r13
                ld      (r14)[r13*4], r14
                st      r14, (g11)[g12*1]
                ld      off_B5408, r14
                ld      0x0(r10), r12
                bbs     0x1B, r12, loc_8AC78
                ld      off_B540C[r15*4], r14
loc_8AC78:                              # CODE XREF: zanzou_control+234↑j
                ld      (r14)[r13*4], r11
loc_8AC7C:                              # CODE XREF: zanzou_control+27C↓j
                scanbit r8, r13
                cmpibg  0, r13, loc_8ACB8
                st      r13, (g11)[g12*1]
                ldos    displacement(r11)[r13*8], r12
                st      r12, (g11)[g12*1]
                ldos    2(r11)[r13*8], r12
                st      r12, (g11)[g12*1]
                ldos    4(r11)[r13*8], r12
                st      r12, (g11)[g12*1]
                clrbit  r13, r8, r8
                ld      (g11)[g12*1], r15
                b       loc_8AC7C
# ---------------------------------------------------------------------------
loc_8ACB8:                              # CODE XREF: zanzou_control+248↑j
                subo    1, 0, r15
                st      r15, (g11)[g12*1]
                ldis    0xA1E(r10), r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
loc_8ACCC:                              # CODE XREF: zanzou_control+198↑j
                ret
# End of function zanzou_control
# =============== S U B R O U T I N E =======================================
# "Afterimage" (zanzou)
zanzou_disp:                            # CODE XREF: tobi_disp↑p
# FUNCTION CHUNK AT 0008ACE0 SIZE 000000D0 BYTES
                mov     0, g3           # Label from official source
                b       loc_8ACE0
# End of function zanzou_disp
# =============== S U B R O U T I N E =======================================
# "Afterimage" (zanzou)
mirror_zanzou_disp:                     # CODE XREF: mirror_tobi_disp↑p
                ret                     # Label from official source
# End of function mirror_zanzou_disp
# ---------------------------------------------------------------------------
                mov     1, g3           # unreachable code
# START OF FUNCTION CHUNK FOR zanzou_disp
loc_8ACE0:                              # CODE XREF: zanzou_disp+4↑j
                ld      mod_fa_tobi, r8 # Projectile (tobi = flight)
                mov     0, r3
loc_8ACEC:                              # CODE XREF: zanzou_disp+D8↓j
                lda     0x42808585, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r7
                cmpobge 0, r6, loc_8ADA0
                ld      frame_counter, r4
                addo    r3, r4, r4
                bbc     0, r4, loc_8ADA0
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                cmpobe  0, g3, loc_8AD64
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     0xBF800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
loc_8AD64:                              # CODE XREF: zanzou_disp+60↑j
                lda     0x42008484, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                ldis    0x5C(r8), r15
                st      r15, (g11)[g12*1]
                mov     0, g1
                lda     (r7), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
loc_8ADA0:                              # CODE XREF: zanzou_disp+40↑j
                addo    1, r3, r3
                shlo    7, 1, r13
                cmpobne r13, r3, loc_8ACEC
                ret
# END OF FUNCTION CHUNK FOR zanzou_disp
# =============== S U B R O U T I N E =======================================
# "Projectile" (tobi)
replay_tobi_initial:                    # CODE XREF: play_init+A4↑p
                ld      mod_fa_tobi, g6 # Label from official source
                lda     0x200(g6), g6
                mov     0x1E, r11
loc_8ADC0:                              # CODE XREF: replay_tobi_initial+4C↓j
                ld      0x0(g6), r15
                bbc     0x1F, r15, loc_8ADF0
                ld      8(g6), r3
                cmpobne 0, r3, loc_8ADDC
                mov     0, r15
                st      r15, 0x0(g6)
                b       loc_8ADF0
# ---------------------------------------------------------------------------
loc_8ADDC:                              # CODE XREF: replay_tobi_initial+1C↑j
                lda     0xEF, r13
                ld      0x28(g6), r14
                cmpobl  r13, r14, loc_8ADF0
                mov     0, r15
                st      r15, 0x0(g6)
loc_8ADF0:                              # CODE XREF: replay_tobi_initial+14↑j
                shlo    8, 1, r13
                addi    r13, g6, g6
                cmpdeco 1, r11, r11
                bl      loc_8ADC0
                ret
# End of function replay_tobi_initial
# =============== S U B R O U T I N E =======================================
sub_8AE04:                              # CODE XREF: sub_8B1C8+14↓p
                ld      0x10(g6), r3
                b       loc_8AE18
# ---------------------------------------------------------------------------
loc_8AE0C:                              # CODE XREF: sub_8C180:loc_8C194↓p
                ld      0x14(g6), r3
                b       loc_8AE18
# ---------------------------------------------------------------------------
loc_8AE14:                              # CODE XREF: sub_8D6F4+144↓p
                ld      0x18(g6), r3
loc_8AE18:                              # CODE XREF: sub_8AE04+4↑j
                ld      0x0(r3), r4
                remo    r4, g0, r4
                addo    4, r3, r3
                mulo    0x10, r4, r4
                addo    r3, r4, r3
                ldis    8(r3), r15
                stis    r15, 0x7C(g6)
                ld      4(r3), r15
                st      r15, 0x68(g6)
                ld      0x0(r3), r15
                st      r15, 0x6C(g6)
                ret
# End of function sub_8AE04
# =============== S U B R O U T I N E =======================================
sub_8AE48:                              # CODE XREF: sub_8BCD8+28↓p
                ldt     0x44(g6), r8
                ld      0x6C(g6), r11
                lda     0x9801313, r15
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x3B807777, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], g1
                ld      (g11)[g12*1], r13
                ld      (g11)[g12*1], r14
                ld      (g11)[g12*1], r7
                ld      (g11)[g12*1], r3
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                stos    r13, 0x30(g6)
                stos    r14, 0x32(g6)
                stos    r7, 0x34(g6)
                st      r3, 0x38(g6)
                stos    r4, 0x40(g6)
                st      r5, 0x3C(g6)
                stos    r6, 0x42(g6)
                ret
# End of function sub_8AE48
# =============== S U B R O U T I N E =======================================
sub_8AEC8:                              # CODE XREF: sub_8BCD8+64↓p
                mov     0, g1
                ldt     0x5C(g6), r4
                ldt     0x44(g6), r8
                ld      0x50A000, r7
                subr    r7, r5, r5
                addr    r4, r8, r8
                addr    r5, r9, r9
                addr    r6, r10, r10
                ld      0x6C(g6), r12
                ld      0x0(g6), r15
                bbc     0, r15, loc_8AF04
                ld      stage_soko, r13
                subr    r13, r12, r12
loc_8AF04:                              # CODE XREF: sub_8AEC8+2C↑j
                cmpr    r9, r12
                bg      loc_8AF44
                ldos    0x36(g6), r14
                addi    1, r14, r15
                stos    r15, 0x36(g6)
                setbit  0, g1, g1
                mov     r12, r9
                ld      0x9C(g6), r13
                mulr    r13, r5, r5
                clrbit  0x1F, r5, r12
                lda     0x3A83126F, r15
                cmpr    r15, r12
                bl      loc_8AF44
                mov     0, r5
                setbit  1, g1, g1
loc_8AF44:                              # CODE XREF: sub_8AEC8+40↑j
                stt     r4, 0x5C(g6)
                stt     r8, 0x44(g6)
                ret
# End of function sub_8AEC8
# =============== S U B R O U T I N E =======================================
sub_8AF50:                              # CODE XREF: ROM:0008CD1C↓p
                mov     0, g1
                ldt     0x5C(g6), r4
                ldt     0x44(g6), r8
                addr    r4, r8, r8
                addr    r5, r9, r9
                addr    r6, r10, r10
                ld      0x6C(g6), r12
                ld      0x0(g6), r15
                bbc     0, r15, loc_8AF80
                ld      stage_soko, r13
                subr    r13, r12, r12
loc_8AF80:                              # CODE XREF: sub_8AF50+20↑j
                cmpr    r9, r12
                bg      loc_8AFA8
                mov     r12, r9
                ldos    0x36(g6), r14
                addi    1, r14, r15
                stos    r15, 0x36(g6)
                setbit  0, g1, g1
                subr    r5, r9, r9
                ld      0x9C(g6), r13
                mulr    r13, r5, r5
loc_8AFA8:                              # CODE XREF: sub_8AF50+34↑j
                stt     r4, 0x5C(g6)
                stt     r8, 0x44(g6)
                ret
# End of function sub_8AF50
# =============== S U B R O U T I N E =======================================
sub_8AFB4:                              # CODE XREF: sub_8B26C+1A0↓p
                mov     0, g0
                ldt     0x5C(g6), r4
                ldt     0x44(g6), r8
                lda     0xBECCCCCD, r3
                lda     0x80000000, r7
                ld      stage_x, r12
                lda     0x3F000000, r15
                addr    r15, r12, r14
                ld      0x6C(g6), r13
                subr    r13, r12, r12
                ld      cage_height, r15
                cmpr    r15, r9
                bg      loc_8B004
                setbit  0, g0, g0
                b       loc_8B064
# ---------------------------------------------------------------------------
loc_8B004:                              # CODE XREF: sub_8AFB4+44↑j
                clrbit  0x1F, r8, r13
                cmpr    r13, r14
                bg      loc_8B030
                cmpr    r13, r12
                ble     loc_8B034
                setbit  2, g0, g0
                setbit  4, g0, g0
                mulr    r3, r4, r4
                and     r7, r8, r15
                or      r15, r12, r8
                b       loc_8B034
# ---------------------------------------------------------------------------
loc_8B030:                              # CODE XREF: sub_8AFB4+58↑j
                setbit  1, g0, g0
loc_8B034:                              # CODE XREF: sub_8AFB4+60↑j
                clrbit  0x1F, r10, r13
                cmpr    r13, r14
                bg      loc_8B060
                cmpr    r13, r12
                ble     loc_8B064
                setbit  3, g0, g0
                setbit  4, g0, g0
                mulr    r3, r6, r6
                and     r7, r10, r15
                or      r15, r12, r10
                b       loc_8B064
# ---------------------------------------------------------------------------
loc_8B060:                              # CODE XREF: sub_8AFB4+88↑j
                setbit  1, g0, g0
loc_8B064:                              # CODE XREF: sub_8AFB4+4C↑j
                stt     r4, 0x5C(g6)
                stt     r8, 0x44(g6)
                ret
# End of function sub_8AFB4
# =============== S U B R O U T I N E =======================================
sub_8B070:                              # CODE XREF: ROM:0008D4F4↓p
                ldt     0x5C(g6), r4
                ldt     0x44(g6), r8
                ld      0x20(g6), r7
                ldt     0x1F4(r7), r12
                subr    r8, r12, r12
                subr    r10, r14, r14
                lda     0x2D005A5A, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                ld      (g11)[g12*1], r14
                ld      0x94(g6), r7
                mulr    r7, r12, r12
                mulr    r7, r14, r14
                addr    r12, r4, r4
                addr    r14, r6, r6
                lda     0x16802D2D, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                ld      0x98(g6), r7
                cmpr    r7, r12
                bge     loc_8B0EC
                lda     0x3F7D70A4, r7
                mulr    r7, r4, r4
                mulr    r7, r6, r6
loc_8B0EC:                              # CODE XREF: sub_8B070+68↑j
                stt     r4, 0x5C(g6)
                ret
# End of function sub_8B070
# =============== S U B R O U T I N E =======================================
sub_8B0F4:                              # CODE XREF: sub_8D6F4:loc_8D770↓p
                ldt     0x5C(g6), r4
                ldt     0x44(g6), r8
                ld      0x20(g6), r7
                ldt     0x20C(r7), r12
                subr    r8, r12, r12
                subr    r9, r13, r13
                subr    r10, r14, r14
                lda     0x18003030, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r13, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                ld      (g11)[g12*1], r13
                ld      (g11)[g12*1], r14
                ld      0x94(g6), r7
                mulr    r7, r12, r12
                mulr    r7, r13, r13
                mulr    r7, r14, r14
                addr    r12, r4, r4
                addr    r13, r5, r5
                addr    r14, r6, r6
                lda     0x17002E2E, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r12
                ld      0x98(g6), r7
                cmpr    r7, r12
                bge     loc_8B18C
                lda     0x3F7D70A4, r7
                mulr    r7, r4, r4
                mulr    r7, r5, r5
                mulr    r7, r6, r6
loc_8B18C:                              # CODE XREF: sub_8B0F4+80↑j
                stt     r4, 0x5C(g6)
                ret
# End of function sub_8B0F4
# =============== S U B R O U T I N E =======================================
sub_8B194:                              # CODE XREF: ROM:0008DA68↓p
                mov     0, g0
                ldos    0x40(g6), r4
                ldos    0x42(g6), r5
                ldob    0x27(g6), r14
                cmpobe  0, r14, loc_8B1B4
                mov     r4, r15
                mov     r5, r4
                mov     r15, r5
loc_8B1B4:                              # CODE XREF: sub_8B194+10↑j
                cmpobe  0, r5, loc_8B1BC
                setbit  0, g0, g0
loc_8B1BC:                              # CODE XREF: sub_8B194:loc_8B1B4↑j
                cmpobe  0, r5, loc_8B1C4
                setbit  1, g0, g0
loc_8B1C4:                              # CODE XREF: sub_8B194:loc_8B1BC↑j
                ret
# End of function sub_8B194
# =============== S U B R O U T I N E =======================================
sub_8B1C8:                              # DATA XREF: ROM:bean_bomb_nonlit↓o
                ldt     0x44(g6), r4
                stt     r4, 0xA8(g6)
                stt     r4, 0x50A3FC
                mov     0, g0
                call    sub_8AE04
                ld      0x20(g6), r3
                ldt     0x1F4(r3), r4
                stt     r4, 0xB4(g6)
                lda     sub_8B26C, r15
                st      r15, 8(g6)
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                setbit  0x12, r15, r15
                st      r15, 0x0(g6)
                lda     0xBF800000, r15
                st      r15, 0x9C(g6)
                lda     0x3FD9999A, r15
                st      r15, 0x6C(g6)
                mov     0, r15
                stib    r15, 0xC(g6)
                lda     0x3F000000, r15
                st      r15, 0xC0(g6)
                lda     0x3E4CCCCD, r15
                st      r15, 0xC4(g6)
                lda     0xAE1326, g0    # sd_beam_6c
                call    check_same_sound
                call    sound_request_u
                lda     0xAE1245, g0    # sd_WB05_51_03
                call    check_same_sound
                call    sound_request_u
                ret
# End of function sub_8B1C8
# =============== S U B R O U T I N E =======================================
sub_8B26C:                              # DATA XREF: sub_8B1C8+24↑o
                ld      0x0(g6), r15
                bbc     5, r15, loc_8B280
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
loc_8B280:                              # CODE XREF: sub_8B26C+4↑j
                ldob    0xC(g6), r12
                cmpobe  1, r12, loc_8B470
                mov     0, g0
                call    sub_8AE04
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      0x1C(g6), g7
                ld      4(g6), r10
                ldob    0x8F(g6), r3
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r3, r15
                st      r15, (g11)[g12*1]
                ldt     0x14(r10), r4
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0xA8(g6)
                ldt     0xB4(g6), r8
                mov     r5, r9
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                subr    r5, r9, r12
                divr    r11, r12, r12
                lda     0x13002626, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ldis    (g11)[g12*1], r3
                stos    r3, 0xC8(g6)
                stos    r7, 0xCA(g6)
                ld      0xC4(g6), r11
                ld      0xC0(g6), r13
                addr    r13, r11, r11
                st      r11, 0xC4(g6)
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     displacement, r12
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r8, 0x44(g6)
                call    sub_8AFB4
                bbs     1, g0, loc_8B430
                bbs     4, g0, loc_8B430
                ld      0xC4(g6), r11
                lda     0x41A00000, r3
                cmpr    r11, r3
                bg      loc_8B430
                b       loc_8B534
# ---------------------------------------------------------------------------
loc_8B430:                              # CODE XREF: sub_8B26C+1A4↑j
                ldt     0xA8(g6), r4
                ldt     0x44(g6), r8
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                st      r3, 0xC4(g6)
                ldib    0xC(g6), r15
                lda     1(r15), r15
                stib    r15, 0xC(g6)
loc_8B470:                              # CODE XREF: sub_8B26C+18↑j
                ld      0xC4(g6), r11
                ld      0xC0(g6), r13
                subr    r13, r11, r11
# ---------------------------------------------------------------------------
                .long 0x6802EA90        # cmpr    +0.0,r11
# ---------------------------------------------------------------------------
                bg      loc_8B528
                st      r11, 0xC4(g6)
                ldt     0x44(g6), r8
                ldos    0xC8(g6), r3
                ldos    0xCA(g6), r7
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                notbit  0x1F, r11, r11
                lda     displacement, r12
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0xA8(g6)
                b       loc_8B534
# ---------------------------------------------------------------------------
loc_8B528:                              # CODE XREF: sub_8B26C+214↑j
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8B534:                              # CODE XREF: sub_8B26C+1C0↑j
                lda     0xA8(g6), g3
                lda     0x44(g6), g4
                ld      0x20(g6), r7
                ldt     0x1F4(r7), g0
                call    sub_8B584
                mov     0, r3
                ld      0x6C(g6), r12
                lda     0x3F800000, r13
                addr    r13, r12, r12
                cmpr    g0, r12
                bg      loc_8B568
                mov     1, r3
loc_8B568:                              # CODE XREF: sub_8B26C+2F4↑j
                st      r3, 0x38(g6)
                st      r3, 0x3C(g6)
                lda     0xAE141D, g0    # sd_beam_6c_off
                call    check_same_sound
                call    sound_request_u
                ret
# End of function sub_8B26C
# =============== S U B R O U T I N E =======================================
sub_8B584:                              # CODE XREF: sub_8B26C+2D8↑p
                ldt     (g3), r4
                ldt     (g4), r8
                subr    r4, r8, r3
                subr    r5, r9, r7
                subr    r6, r10, r11
                mulr    r3, r3, r12
                mulr    r7, r7, r13
                mulr    r11, r11, r14
                addr    r12, r13, r13
                addr    r13, r14, r15
                subr    r4, g0, r12
                subr    r5, g1, r13
                subr    r6, g2, r14
                mulr    r3, r12, r12
                mulr    r7, r13, r13
                mulr    r11, r14, r14
                addr    r12, r13, r13
                addr    r13, r14, r13
                divr    r15, r13, r14
                lda     displacement, r13
                cmpr    r13, r14
                bge     loc_8B608
                lda     0x3F800000, r13
                cmpr    r13, r14
                ble     loc_8B618
                mulr    r14, r3, r3
                mulr    r14, r7, r7
                mulr    r14, r11, r11
                addr    r4, r3, r4
                addr    r5, r7, r5
                addr    r6, r11, r6
loc_8B608:                              # CODE XREF: sub_8B584+58↑j
                subr    g0, r4, r4
                subr    g1, r5, r5
                subr    g2, r6, r6
                b       loc_8B624
# ---------------------------------------------------------------------------
loc_8B618:                              # CODE XREF: sub_8B584+68↑j
                subr    g0, r8, r4
                subr    g1, r9, r5
                subr    g2, r10, r6
loc_8B624:                              # CODE XREF: sub_8B584+90↑j
                lda     0x17002E2E, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ret
# End of function sub_8B584
# =============== S U B R O U T I N E =======================================
tdl_laser:                              # DATA XREF: ROM:0008A6C4↑o
                ld      0x1C(g6), g7    # Label from official source
                ldt     0xA8(g6), r4
                ldt     0x44(g6), r8
                ldos    0xC8(g6), r3
                ldos    0xCA(g6), r7
                ld      0xC4(g6), r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                cmpobe  0, g3, loc_8B69C
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     0xBF800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
loc_8B69C:                              # CODE XREF: tdl_laser+24↑j
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r12
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     221, g0         # Metal Sonic beam
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ldob    0xC(g6), r12
                cmpobe  1, r12, loc_8B758
                mov     0, g1
                lda     220, g0         # Metal Sonic Beam tip
                call    set_obj
                lda     displacement, r12
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     222, g0         # Metal Sonic Beam tail
                call    set_obj
loc_8B758:                              # CODE XREF: tdl_laser+D8↑j
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# End of function tdl_laser
# =============== S U B R O U T I N E =======================================
# "Tongue" (bero)
bero_init:                              # DATA XREF: ROM:espio_tongue↓o
                ldt     0x44(g6), r4    # Label from official source
                stt     r4, 0xA8(g6)
                ld      0x20(g6), r3
                ldt     0x1F4(r3), r8
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                ldis    0x72(g6), r11
                lda     0xFFFF, r13
                and     r13, r3, r3
                lda     0xFFFF, r13
                and     r13, r11, r11
                subo    r3, r11, r12
                shlo    0xC, 1, r13
                addo    r12, r13, r12
                shlo    0xD, 1, r13
                cmpobg  r13, r12, loc_8B7CC
                mov     r11, r3
loc_8B7CC:                              # CODE XREF: bero_init+5C↑j
                ldis    0x8A(g6), r11
                addi    r3, r11, r3
                lda     0x41200000, r11
                lda     0x12002424, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                lda     0x12802525, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r10
                notbit  0x1F, r8, r8
                lda     0x3FC00000, r9
                addr    r4, r8, r8
                addr    r6, r10, r10
                stt     r8, 0xB4(g6)
                stis    r3, 0x72(g6)
                lda     loc_8B878, r15
                st      r15, 8(g6)
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                lda     0xBF800000, r15
                st      r15, 0x9C(g6)
                lda     0x3EBD70A4, r15
                st      r15, 0x6C(g6)
                mov     0, r15
                stib    r15, 0xC(g6)
                lda     0x3F19999A, r15
                st      r15, 0xC0(g6)
                lda     0x3E4CCCCD, r15
                st      r15, 0xC4(g6)
loc_8B878:                              # DATA XREF: bero_init+C0↑o
                ld      0xC4(g6), r11
                ld      0xC0(g6), r13
                addr    r13, r11, r11
                st      r11, 0xC4(g6)
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      0x1C(g6), g7
                ld      4(g6), r10
                ldob    0x8F(g6), r3
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r3, r15
                st      r15, (g11)[g12*1]
                ldt     0x14(r10), r4
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0xA8(g6)
                ldt     0xB4(g6), r8
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                mov     0, r3
                stos    r3, 0xC8(g6)
                stos    r7, 0xCA(g6)
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      0xC4(g6), r11
                lda     displacement, r12
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r8, 0x44(g6)
                ld      0x0(g6), r15
                bbs     5, r15, loc_8BA18
                ld      0xC4(g6), r11
                lda     displacement, r3
                cmpr    r11, r3
                bl      loc_8BA40
                lda     0x41200000, r3
                cmpr    r11, r3
                bg      loc_8BA18
                call    sub_8AFB4
                bbs     1, g0, loc_8BA18
                bbs     4, g0, loc_8BA18
                b       loc_8BA4C
# ---------------------------------------------------------------------------
loc_8BA18:                              # CODE XREF: bero_init+278↑j
                ld      0xC0(g6), r15
                setbit  0x1F, r15, r15
                st      r15, 0xC0(g6)
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                b       loc_8BA4C
# ---------------------------------------------------------------------------
loc_8BA40:                              # CODE XREF: bero_init+28C↑j
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8BA4C:                              # CODE XREF: bero_init+2AC↑j
                lda     0xA8(g6), g3
                lda     0x44(g6), g4
                ld      0x20(g6), r7
                ldt     0x1F4(r7), g0
                call    sub_8B584
                mov     0, r3
                ld      0x1C(g6), r12
                ld      0x5B8(r12), r15
                bbs     0, r15, loc_8BA8C
                lda     0x3F800000, r13
                ld      0x6C(g6), r14
                addr    r13, r14, r12
                cmpr    g0, r12
                bg      loc_8BA8C
                mov     1, r3
loc_8BA8C:                              # CODE XREF: bero_init+304↑j
                st      r3, 0x38(g6)
                st      r3, 0x3C(g6)
                ret
# End of function bero_init
# =============== S U B R O U T I N E =======================================
# "Tongue" (bero)
tdl_bero:                               # DATA XREF: ROM:0008A6C8↑o
                ld      0x1C(g6), g7    # Label from official source
                ldt     0xA8(g6), r4
                ldt     0x44(g6), r8
                ldos    0xC8(g6), r3
                ldos    0xCA(g6), r7
                ld      0xC4(g6), r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r12
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     954, g0         # Espio tongue
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ldob    0xC(g6), r12
                cmpobe  1, r12, loc_8BB6C
                lda     displacement, r12
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     955, g0         # Espio tongue tip
                call    set_obj
loc_8BB6C:                              # CODE XREF: tdl_bero+A4↑j
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# End of function tdl_bero
# =============== S U B R O U T I N E =======================================
sub_8BB7C:                              # DATA XREF: ROM:amy_hammer↓o
                ld      0x1C(g6), r12
                ld      0x20(g6), r5
                ld      0x5B8(r12), r15
                bbc     0, r15, loc_8BB90
                mov     r12, r5
loc_8BB90:                              # CODE XREF: sub_8BB7C+C↑j
                ldt     0x1F4(r5), r8
                lda     displacement, r3
                lda     0x3E99999A, r11
                ldis    0x5B6(r12), r12
                lda     0x2D805B5B, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                ld      (g11)[g12*1], r11
                st      r3, 0x5C(g6)
                st      r11, 0x64(g6)
                ldob    0x89(g6), r6
                lda     0xB801717, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                lda     displacement, r13
                ld      0x50A000, r14
                subr    r13, r14, r3
                lda     0x3F800000, r13
                addr    r13, r6, r4
                mulr    r3, r4, r3
                lda     0x3F000000, r13
                mulr    r13, r3, r3
                ld      0x48(g6), r13
                lda     displacement, r14
                subr    r13, r14, r4
                divr    r6, r4, r4
                addr    r3, r4, r15
                st      r15, 0x60(g6)
                mov     0, g0
                call    sub_8AE04
                ld      0x1C(g6), r3
                mov     0, r15
                stis    r15, 0x70(g6)
                shlo    0xE, 1, r13
                ldos    0x26(r3), r14
                addi    r13, r14, r15
                stos    r15, 0x72(g6)
                mov     0, r15
                stis    r15, 0x74(g6)
                lda     0xB4, r15
                stis    r15, 0x2E(g6)
                lda     0x3B83126F, r15
                st      r15, 0x94(g6)
                lda     0x3A83126F, r15
                st      r15, 0x98(g6)
                lda     0xBF19999A, r15
                st      r15, 0x9C(g6)
                mov     4, r15
                stis    r15, 0x8C(g6)
                shlo    0xE, 1, r15
                stis    r15, 0x76(g6)
                mov     0, r15
                stis    r15, 0x78(g6)
                mov     0, r15
                stis    r15, 0x7A(g6)
                lda     0x6AE, r15
                stis    r15, 0xA0(g6)
                mov     0, r15
                stis    r15, 0x36(g6)
                lda     sub_8BCD8, r15
                st      r15, 8(g6)
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                ret
# End of function sub_8BB7C
# =============== S U B R O U T I N E =======================================
sub_8BCD8:                              # DATA XREF: sub_8BB7C+140↑o
                ld      0x0(g6), r15
                bbc     5, r15, loc_8BD34
                ldob    0x27(g6), r3
                notbit  0, r3, r3
                ld      0x38(g6)[r3*4], r3
                cmpobe  0, r3, loc_8BD34
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                call    sub_8AE48
                lda     0x3DCCCCCD, r13
                mulr    r13, g0, r11
                mulr    r13, g1, r12
                or      r11, r12, r13
                ldt     0x5C(g6), r8
                addr    r11, r8, r8
                addr    r12, r10, r10
                lda     0x3E2AA8EB, r13
                addr    r13, r9, r9
                stt     r8, 0x5C(g6)
loc_8BD34:                              # CODE XREF: sub_8BCD8+4↑j
                mov     0, g0
                call    sub_8AE04
                call    sub_8AEC8
                call    sub_8AFB4
                ldob    0xA2(g6), r14
                subi    1, r14, r15
                stob    r15, 0xA2(g6)
                ldos    0x36(g6), r3
                cmpo    3, r3
                ble     loc_8BD6C
                ld      0x90(g6), r15
                st      r15, 0x6C(g6)
                call    sub_8AE48
                b       loc_8BD78
# ---------------------------------------------------------------------------
loc_8BD6C:                              # CODE XREF: sub_8BCD8+80↑j
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8BD78:                              # CODE XREF: sub_8BCD8+90↑j
                shlo    0xC, 1, r13
                ldos    0x74(g6), r14
                addi    r13, r14, r15
                stos    r15, 0x74(g6)
                ret
# End of function sub_8BCD8
# =============== S U B R O U T I N E =======================================
sub_8BD8C:                              # DATA XREF: ROM:espio_tongue_grab↓o
                addo    0x1F, 0x1A, r15
                stis    r15, 0xB8(g6)
                mov     0, r15
                stib    r15, 0xC(g6)
                lda     sub_8BDB8, r15
                st      r15, 8(g6)
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                ret
# End of function sub_8BD8C
# =============== S U B R O U T I N E =======================================
sub_8BDB8:                              # DATA XREF: sub_8BD8C+10↑o
                ld      0x20(g6), g7
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mov     0x18, r15
                st      r15, (g11)[g12*1]
                lda     0x7800F0F, r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r4, 0x44(g6)
                ldob    0xC(g6), r3
                ld      off_8BE20[r3*4], r5
                callx   (r5)
                ret
# End of function sub_8BDB8
# ---------------------------------------------------------------------------
off_8BE20:      .long loc_8BE28         # DATA XREF: sub_8BDB8+58↑r
                .long loc_8BF28
# ---------------------------------------------------------------------------
loc_8BE28:                              # DATA XREF: ROM:off_8BE20↑o
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ld      0x1C(g6), g7
                ld      4(g6), r10
                ldob    0x8F(g6), r3
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r3, r15
                st      r15, (g11)[g12*1]
                ldt     0x14(r10), r4
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                stt     r8, 0xA8(g6)
                ldt     0x44(g6), r4
                lda     0x16002C2C, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                subr    r5, r9, r12
                divr    r11, r12, r12
                lda     0x13002626, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                ldis    (g11)[g12*1], r3
                stos    r3, 0x70(g6)
                stos    r7, 0x72(g6)
                st      r11, 0xB4(g6)
                ldos    0xB8(g6), r3
                subo    1, r3, r3
                cmpobe  0, r3, loc_8BF1C
                stos    r3, 0xB8(g6)
                ret
# ---------------------------------------------------------------------------
loc_8BF1C:                              # CODE XREF: ROM:0008BF10↑j
                mov     1, r15
                stib    r15, 0xC(g6)
                ret
# ---------------------------------------------------------------------------
loc_8BF28:                              # DATA XREF: ROM:0008BE24↑o
                ld      0xB4(g6), r3
                lda     0x3E99999A, r4
                subr    r4, r3, r5
                st      r5, 0xB4(g6)
# ---------------------------------------------------------------------------
                .long 0x68016A90        # cmpr    +0.0,r5
# ---------------------------------------------------------------------------
                bl      loc_8BF50
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8BF50:                              # CODE XREF: ROM:0008BF40↑j
                ret
# =============== S U B R O U T I N E =======================================
# "Tongue Grab" (bero tsukami)
tdl_berotsukami:                        # DATA XREF: ROM:0008A6D8↑o
                ld      0x1C(g6), g7    # Label from official source
                ldt     0xA8(g6), r8
                ldt     0x44(g6), r4
                ldos    0x70(g6), r3
                ldos    0x72(g6), r7
                ld      0xB4(g6), r11
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r7, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r12
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     954, g0         # Espio tongue
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ldob    0xC(g6), r12
                lda     displacement, r12
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                mov     0, g1
                lda     955, g0         # Tip of Espio tongue
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# End of function tdl_berotsukami
# =============== S U B R O U T I N E =======================================
# nagesute = "Throw away"
nagesute_init:                          # DATA XREF: ROM:throw_away↓o
                ld      0x20(g6), r5    # Label from official source
                ldob    0x1B1(r5), r6   # r6 = P1_PARTS+0x1B1 or P2_PARTS+0x1B1
                mov     4, r3
                cmpobne r3, r6, if_not_fang_1 # if not Fang, branch
                mov     1, r7
                b       loc_8C058
# ---------------------------------------------------------------------------
if_not_fang_1:                          # CODE XREF: nagesute_init+C↑j
                mov     2, r3
                cmpobne r3, r6, loc_8C058
                mov     0, r7
loc_8C058:                              # CODE XREF: nagesute_init+14↑j
                stos    r7, 0xA8(g6)
                ld      0x1C(g6), r12
                ld      0x20(g6), r5
                ld      0x5B8(r12), r15
                bbc     0, r15, loc_8C070
                mov     r12, r5
loc_8C070:                              # CODE XREF: nagesute_init+34↑j
                ldt     0x1F4(r5), r8
                ldos    0x5B6(r12), r13
                shlo    0xF, 1, r14
                addi    r13, r14, r12
                lda     displacement, r3
                lda     0x3DCCCCCD, r11
                lda     0x2D805B5B, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                ld      (g11)[g12*1], r11
                st      r3, 0x5C(g6)
                st      r11, 0x64(g6)
                ldob    0x89(g6), r6
                lda     0xB801717, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                lda     displacement, r13
                ld      0x50A000, r14
                subr    r13, r14, r3
                lda     0x3F800000, r13
                addr    r13, r6, r4
                mulr    r3, r4, r3
                lda     0x3F000000, r13
                mulr    r13, r3, r3
                ld      0x48(g6), r13
                lda     displacement, r14
                subr    r13, r14, r4
                divr    r6, r4, r4
                addr    r3, r4, r15
                st      r15, 0x60(g6)
                ld      0x1C(g6), r3
                mov     0, r15
                stis    r15, 0x70(g6)
                shlo    0xE, 1, r13
                ldos    0x26(r3), r14
                addi    r13, r14, r15
                stos    r15, 0x72(g6)
                mov     0, r15
                stis    r15, 0x74(g6)
                lda     0xBF19999A, r15
                st      r15, 0x9C(g6)
                mov     4, r15
                stis    r15, 0x8C(g6)
                lda     0x6AE, r15
                stis    r15, 0xA0(g6)
                mov     0, r15
                stis    r15, 0x36(g6)
                lda     sub_8C180, r15
                st      r15, 8(g6)
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                ret
# End of function nagesute_init
# =============== S U B R O U T I N E =======================================
sub_8C180:                              # DATA XREF: nagesute_init+130↑o
                mov     0, g0
                ldos    0xA8(g6), r3
                cmpobe  1, r3, loc_8C194
                call    sub_8AE04
                b       loc_8C198
# ---------------------------------------------------------------------------
loc_8C194:                              # CODE XREF: sub_8C180+8↑j
                call    loc_8AE0C
loc_8C198:                              # CODE XREF: sub_8C180+10↑j
                call    sub_8AEC8
                call    sub_8AFB4
                ldob    0xA2(g6), r14
                subi    1, r14, r15
                stob    r15, 0xA2(g6)
                ldos    0x36(g6), r3
                cmpo    3, r3
                bg      loc_8C1C4
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8C1C4:                              # CODE XREF: sub_8C180+34↑j
                shlo    0xC, 1, r13
                ldos    0x74(g6), r14
                addi    r13, r14, r15
                stos    r15, 0x74(g6)
                ret
# End of function sub_8C180
# =============== S U B R O U T I N E =======================================
amy_drop_16t_anvil_sub_1:               # DATA XREF: ROM:amy_drop_16t_anvil_1↓o
                ld      0x1C(g6), r12
                ld      0x20(g6), r5
                ldt     0x1F4(r5), r8
                ldob    0x89(g6), r6
                lda     0xB801717, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r9
                mulr    r9, r9, r9
                lda     0x3F000000, r13
                mulr    r13, r9, r9
                ld      0x50A000, r13
                mulr    r13, r9, r9
                stt     r8, 0x44(g6)
                movt    0, r8
                stt     r8, 0x5C(g6)
                mov     0, r15
                stib    r15, 0xC(g6)
                mov     0, r15
                stis    r15, 0x36(g6)
                lda     0xBE99999A, r15
                st      r15, 0x9C(g6)
                lda     loc_8C274, r15
                st      r15, 8(g6)
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                setbit  3, r15, r15
                st      r15, 0x0(g6)
                lda     0xAE1108, g0    # sd_fall_2
                call    check_same_sound
                call    sound_request_u
loc_8C274:                              # DATA XREF: amy_drop_16t_anvil_sub_1+68↑o
                ldob    0x27(g6), r3
                notbit  0, r3, r3
                ld      0x38(g6)[r3*4], r3
                cmpobe  0, r3, loc_8C294
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
loc_8C294:                              # CODE XREF: amy_drop_16t_anvil_sub_1+AC↑j
                mov     0, g0
                call    sub_8AE04
                call    sub_8AEC8
                call    sub_8AFB4
                ldob    0xA2(g6), r14
                subi    1, r14, r15
                stob    r15, 0xA2(g6)
                ldos    0x36(g6), r3
                bbc     0, g1, loc_8C2DC
                cmpobne 1, r3, loc_8C2DC
                lda     0xAE1178, g0    # sd_clash_1
                call    check_same_sound
                call    sound_request_u
                lda     0xAE122E, g0    # sd_WB02_25_02
                call    check_same_sound
                call    sound_request_u
loc_8C2DC:                              # CODE XREF: amy_drop_16t_anvil_sub_1+DC↑j
                cmpo    0x14, r3
                ble     loc_8C2F4
                ld      0x90(g6), r15
                st      r15, 0x6C(g6)
                call    sub_8AE48
                b       loc_8C300
# ---------------------------------------------------------------------------
loc_8C2F4:                              # CODE XREF: amy_drop_16t_anvil_sub_1+108↑j
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8C300:                              # CODE XREF: amy_drop_16t_anvil_sub_1+118↑j
                ret
# End of function amy_drop_16t_anvil_sub_1
# =============== S U B R O U T I N E =======================================
# "Drop" (otoshi)
tdl_otoshi:                             # DATA XREF: ROM:0008A6DC↑o
                ld      0x2008(g10), r15 # Label from official source
                st      g14, mmode
                mov     0, g14
                st      g14, 0x0(g10)
                ld      mmode, g14
                st      r15, buffer_ptr
                lda     0x50186C, r15
                ld      4(r15), r14
                ld      0x2008(g10), r13
                cmpobne 0, r14, loc_8C34C
                st      r13, 0x0(r15)
                b       loc_8C358
# ---------------------------------------------------------------------------
loc_8C34C:                              # CODE XREF: tdl_otoshi+3C↑j
                setbit  0x1F, r13, r13
                st      r13, 0x900000(r14)
loc_8C358:                              # CODE XREF: tdl_otoshi+44↑j
                call    tobi_disp_go    # "Projectile" (tobi)
                lda     0x50186C, r15
                ld      0x0(r15), r14
                ld      0x2008(g10), r13
                st      r13, 4(r15)
                setbit  0x1F, r14, r14
                st      r14, 0x0(g10)
                ld      0x2008(g10), r15
                ld      buffer_ptr, r14
                setbit  0x1F, r15, r15
                st      r15, 0x900000(r14)
                ret
# End of function tdl_otoshi
# =============== S U B R O U T I N E =======================================
otoshi_init2:                           # DATA XREF: ROM:amy_drop_16t_anvil_2↓o
                ld      0x1C(g6), r12   # Label from official source
                ld      0x20(g6), r5
                ldt     0x1F4(r5), r8
                ldob    0x89(g6), r6
                lda     0xB801717, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r9
                mulr    r9, r9, r9
                lda     0x3F000000, r13
                mulr    r13, r9, r9
                ld      0x50A000, r13
                mulr    r13, r9, r9
                stt     r8, 0x44(g6)
                movt    0, r8
                stt     r8, 0x5C(g6)
                ld      0x20(g6), r12
                ldos    0x1AA(r12), r4
                ld      amy_drop_item_list_count, r5
                remo    r5, r4, r4
                stos    r4, 0xA8(g6)
                ldis    amy_drop_item_var1[r4*16], r15
                stis    r15, 0x70(g6)
                ldis    amy_drop_item_var3[r4*16], r15
                stis    r15, 0x74(g6)
                ld      fa_camera, r3
                ldos    0x26(r3), r13
                ldos    amy_drop_item_var2[r4*16], r14
                addi    r13, r14, r15
                stos    r15, 0x72(g6)
                mov     0, r15
                stib    r15, 0xC(g6)
                mov     0, r15
                stis    r15, 0x36(g6)
                lda     0xBF000000, r15
                st      r15, 0x9C(g6)
                lda     loc_8C478, r15
                st      r15, 8(g6)
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                lda     0xAE1108, g0    # sd_fall_2
                call    check_same_sound
                call    sound_request_u
loc_8C478:                              # DATA XREF: otoshi_init2+B4↑o
                ldos    0xAA(g6), r14
                addi    1, r14, r15
                stos    r15, 0xAA(g6)
                ld      0x0(g6), r15
                bbc     5, r15, loc_8C51C
                ldob    0x27(g6), r3
                notbit  0, r3, r3
                ld      0x38(g6)[r3*4], r11
                cmpobe  0, r11, loc_8C51C
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                st      r15, 0x0(g6)
                mov     0, r15
                st      r15, 0x38(g6)[r3*4]
                call    sub_8AE48
                mov     0, r12
                lda     0x18003030, r15
                st      r15, (g11)[g12*1]
                st      g0, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      g1, (g11)[g12*1]
                ld      (g11)[g12*1], g0
                ld      (g11)[g12*1], r12
                ld      (g11)[g12*1], g1
                lda     0x3DCCCCCD, r13
                mulr    r13, g0, r11
                mulr    r13, g1, r12
                ldt     0x5C(g6), r8
                addr    r11, r8, r8
                addr    r12, r10, r10
                lda     0x3DCCCCCD, r13
                addr    r13, r9, r9
                stt     r8, 0x5C(g6)
loc_8C51C:                              # CODE XREF: otoshi_init2+EC↑j
                mov     0, g0
                ldos    0xAA(g6), g0
                call    get_object_info_otoshi
                call    sub_8AEC8
                call    sub_8AFB4
                ldob    0xA2(g6), r14
                subi    1, r14, r15
                stob    r15, 0xA2(g6)
                ldos    0x36(g6), r3
                bbc     0, g1, loc_8C560
                cmpobne 1, r3, loc_8C560
                ldos    0xA8(g6), r4
                ld      amy_drop_item_sfx[r4*16], r10
                mov     r10, g0
                call    check_same_sound
                call    sound_request_u
loc_8C560:                              # CODE XREF: otoshi_init2+1A4↑j
                cmpo    3, r3
                ble     loc_8C578
                ld      0x90(g6), r15
                st      r15, 0x6C(g6)
                call    sub_8AE48
                b       loc_8C584
# ---------------------------------------------------------------------------
loc_8C578:                              # CODE XREF: otoshi_init2+1C8↑j
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8C584:                              # CODE XREF: otoshi_init2+1D8↑j
                ret
# End of function otoshi_init2
# =============== S U B R O U T I N E =======================================
# "Drop" (otoshi)
tdl_otoshi2:                            # DATA XREF: ROM:0008A6E0↑o
                lda     0x9801313, r15  # Label from official source
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r15
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                cmpobe  0, g3, loc_8C5E0
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     0xBF800000, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
loc_8C5E0:                              # CODE XREF: tdl_otoshi2+24↑j
                lda     0x3000606, r15
                st      r15, (g11)[g12*1]
                ldt     0x44(g6), r12
                stt     r12, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                ldis    0x72(g6), r15
                st      r15, (g11)[g12*1]
                lda     0x4000808, r15
                st      r15, (g11)[g12*1]
                ldis    0x70(g6), r15
                st      r15, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                ldis    0x74(g6), r15
                st      r15, (g11)[g12*1]
                ld      0x68(g6), r5
                lda     0x3800707, r15
                st      r15, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ldos    0x7C(g6), r11
                mov     0, g1
                lda     (r11), g0
                call    set_obj
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                ret
# End of function tdl_otoshi2
# =============== S U B R O U T I N E =======================================
get_object_info_otoshi:                 # CODE XREF: otoshi_init2+188↑p
                ldos    0xA8(g6), r4    # Label from official source
                ld      amy_drop_item_list[r4*16], r3
                b       loc_8AE18
# End of function get_object_info_otoshi
# ---------------------------------------------------------------------------
amy_drop_item_list:.long amy_drop_item_chocolate_bar
amy_drop_item_sfx:.long 0xAE1232        # DATA XREF: otoshi_init2+1B0↑r
amy_drop_item_var1:.short 0             # DATA XREF: otoshi_init2+64↑r
amy_drop_item_var2:.short 0             # DATA XREF: otoshi_init2+88↑r
amy_drop_item_var3:.short 0             # DATA XREF: otoshi_init2+70↑r
                .short 0
                .long amy_drop_item_apple
                .long 0xAE1232          # sd_WB02_70_03
                .short 0
                .short 0
                .short 0
                .short 0
                .long amy_drop_item_bean_heart_head
                .long 0xAE1126          # sd_rope_3
                .short 0xC000
                .short 0xE000
                .short 0
                .short 0
                .long amy_drop_item_bannanas
                .long 0xAE1126          # sd_rope_3
                .short 0
                .short 0
                .short 0
                .short 0
                .long amy_drop_item_burger
                .long 0xAE1126          # sd_rope_3
                .short 0
                .short 0
                .short 0
                .short 0
                .long amy_drop_item_LOVE
                .long 0
                .short 0
                .short 0xC000
                .short 0
                .short 0
                .long amy_drop_item_meat
                .long 0xAE1126          # sd_rope_3
                .short 0
                .short 0
                .short 0x4000
                .short 0
                .long amy_drop_item_fish
                .long 0xAE1232          # sd_WB02_70_03
                .short 0
                .short 0
                .short 0
                .short 0
                .long amy_drop_item_soccer_ball
                .long 0xAE1243          # sd_WB04_92_03
                .short 0
                .short 0
                .short 0
                .short 0
                .long amy_drop_item_ice_cream
                .long 0xAE1126          # sd_rope_3
                .short 0
                .short 0
                .short 0
                .short 0
                .long amy_drop_item_full_heart
                .long 0xAE1126          # sd_rope_3
                .short 0
                .short 0
                .short 0
                .short 0
amy_drop_item_list_count:.long 11       # DATA XREF: otoshi_init2+54↑r
amy_drop_item_chocolate_bar:.long 1     # DATA XREF: ROM:amy_drop_item_list↑o
                .float 0.5
                .float 2.0
                .long 3646
                .long 0
amy_drop_item_apple:.long 1             # DATA XREF: ROM:0008C68C↑o
                .float 0.5
                .float 2.0
                .long 1701
                .long 0
amy_drop_item_bean_heart_head:.long 1   # DATA XREF: ROM:0008C69C↑o
                .float 0.5
                .float 1.0
                .long 897
                .long 0
amy_drop_item_bannanas:.long 1          # DATA XREF: ROM:0008C6AC↑o
                .float 0.5
                .float 2.0
                .long 1702
                .long 0
amy_drop_item_burger:.long 1            # DATA XREF: ROM:0008C6BC↑o
                .float 0.5
                .float 2.0
                .long 1704
                .long 0
amy_drop_item_LOVE:.long 1              # DATA XREF: ROM:0008C6CC↑o
                .float 0.5
                .float 1.0
                .long 1707
                .long 0
amy_drop_item_meat:.long 1              # DATA XREF: ROM:0008C6DC↑o
                .float 0.5
                .float 1.5
                .long 1769
                .long 0
amy_drop_item_bell:.long 1              # Unused
                .float 0.5
                .float 2.0
                .long 4105
                .long 0
amy_drop_item_soccer_ball:.long 1       # DATA XREF: ROM:0008C6FC↑o
                .float 0.5
                .float 2.0
                .long 4154
                .long 0
amy_drop_item_ice_cream:.long 1         # DATA XREF: ROM:0008C70C↑o
                .float 0.5
                .float 2.0
                .long 1709
                .long 0
amy_drop_item_full_heart:.long 1        # DATA XREF: ROM:0008C71C↑o
                .float 0.5
                .float 2.0
                .long 1705
                .long 0
amy_drop_item_fish:.long 14             # DATA XREF: ROM:0008C6EC↑o
                .float 0.5
                .float 1.0
                .long 3665
                .long 0
                .float 0.5
                .float 1.0
                .long 3666
                .long 0
                .float 0.5
                .float 1.0
                .long 3667
                .long 0
                .float 0.5
                .float 1.0
                .long 3668
                .long 0
                .float 0.5
                .float 1.0
                .long 3669
                .long 0
                .float 0.5
                .float 1.0
                .long 3670
                .long 0
                .float 0.5
                .float 1.0
                .long 3671
                .long 0
                .float 0.5
                .float 1.0
                .long 3672
                .long 0
                .float 0.5
                .float 1.0
                .long 3671
                .long 0
                .float 0.5
                .float 1.0
                .long 3670
                .long 0
                .float 0.5
                .float 1.0
                .long 3669
                .long 0
                .float 0.5
                .float 1.0
                .long 3668
                .long 0
                .float 0.5
                .float 1.0
                .long 3667
                .long 0
                .float 0.5
                .float 1.0
                .long 3666
                .long 0
# ---------------------------------------------------------------------------
loc_8C8F0:                              # DATA XREF: ROM:fang_cork_shoot↓o
                mov     2, r15
                stis    r15, draw_particle # Value between 0 - 10
                ldt     0x44(g6), r4
                stt     r4, 0x50A3FC
                mov     0, g0
                call    sub_8AE04
                ld      0x20(g6), r3
                ldt     0x1F4(r3), r8
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                ldis    0x72(g6), r4
                lda     0xFFFF, r13
                and     r13, r3, r3
                lda     0xFFFF, r13
                and     r13, r4, r4
                subo    r3, r4, r12
                shlo    0xC, 1, r13
                addo    r12, r13, r12
                shlo    0xD, 1, r13
                cmpobg  r13, r12, loc_8C96C
                mov     r4, r3
loc_8C96C:                              # CODE XREF: ROM:0008C964↑j
                ldis    0x8A(g6), r4
                addi    r3, r4, r3
                lda     0x3E4CCCCD, r6
                lda     0x12002424, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0x12802525, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                notbit  0x1F, r4, r4
                st      r4, 0x5C(g6)
                st      r5, 0x64(g6)
                stis    r3, 0x72(g6)
                shlo    8, 0xF, r15
                stis    r15, 0x76(g6)
                lda     0xBE99999A, r15
                st      r15, 0x9C(g6)
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                lda     0x3F333333, r15
                st      r15, 0x6C(g6)
                call    sub_8AE48
                call    sub_8AFB4
                and     0x12, g0, r3
                cmpobe  0, r3, loc_8CA2C
loc_8C9F8:                              # CODE XREF: ROM:0008CBF0↓j
                call    play_sd_punch_o
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                clrbit  1, r15, r15
                setbit  6, r15, r15
                setbit  7, r15, r15
                st      r15, 0x0(g6)
                mov     0, g0
                stos    g0, 0x2C(g6)
                call    loc_8AE0C
                lda     displacement2, r15
                stib    r15, 0xC(g6)
loc_8CA2C:                              # CODE XREF: ROM:0008C9F4↑j
                lda     loc_8CC04, r15
                st      r15, 8(g6)
                ret
# ---------------------------------------------------------------------------
loc_8CA3C:                              # DATA XREF: ROM:spinning_cork↓o
                mov     2, r15
                stis    r15, draw_particle # Value between 0 - 10
                ldt     0x44(g6), r4
                stt     r4, 0x50A3FC
                mov     0, g0
                call    sub_8AE04
                lda     0x800101, r15
                st      r15, (g11)[g12*1]
                ldob    0x8F(g6), r3
                ld      0x1C(g6), g7
                lda     0x1B003636, r15
                st      r15, (g11)[g12*1]
                ldob    4(g7), r15
                st      r15, (g11)[g12*1]
                mulo    0xC, r3, r15
                st      r15, (g11)[g12*1]
                lda     0x7800F0F, r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                lda     0x3F800000, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                subr    r4, r8, r4
                subr    r5, r9, r5
                subr    r6, r10, r6
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                stis    r3, 0x72(g6)
                lda     0x13802727, r15
                st      r15, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                st      r5, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                subi    r4, 0, r4
                stis    r4, 0x74(g6)
                lda     0x1800303, r15 # 0x000000
                st      r15, (g11)[g12*1]
                lda     0x4800909, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                lda     0x5000A0A, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                lda     0x14802929, r15
                st      r15, (g11)[g12*1]
                lda     0x3E4CCCCD, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                lda     displacement, r15
                st      r15, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                ld      (g11)[g12*1], r5
                ld      (g11)[g12*1], r6
                st      r4, 0x5C(g6)
                st      r5, 0x60(g6)
                st      r6, 0x64(g6)
                lda     0x1000202, r15
                st      r15, (g11)[g12*1]
                lda     0xBF800000, r15
                st      r15, 0x9C(g6)
                shlo    8, 0xF, r15
                stis    r15, 0x76(g6)
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                call    sub_8AFB4
                and     0x12, g0, r3
                cmpobne 0, r3, loc_8C9F8
                lda     loc_8CC04, r15
                st      r15, 8(g6)
                ret
# ---------------------------------------------------------------------------
loc_8CC04:                              # DATA XREF: ROM:loc_8CA2C↑o
                ldob    0xC(g6), r3
                ld      off_8CC18[r3*4], r5
                callx   (r5)
                ret
# ---------------------------------------------------------------------------
off_8CC18:      .long loc_8CC24         # DATA XREF: ROM:0008CC08↑r
                .long loc_8CD8C
                .long loc_8CEA4
# ---------------------------------------------------------------------------
loc_8CC24:                              # DATA XREF: ROM:off_8CC18↑o
                ld      0x0(g6), r15
                bbc     5, r15, loc_8CCF8
                ld      0x20(g6), r3
                ld      0x1A4(r3), r15
                bbs     0xD, r15, loc_8CCA4
                ld      0x1A4(r3), r15
                bbs     2, r15, loc_8CD5C
                ld      0x70C(r3), r15
                bbc     0x19, r15, loc_8CD5C
                ldt     0x44(g6), r4
                ld      0x28(g6), r3
                addo    g6, r3, r3
                shro    4, g6, r7
                addo    r7, r3, r3
                shro    8, g6, r7
                addo    r7, r3, r3
                shro    0xC, g6, r7
                addo    r7, r3, r3
                subo    r4, r3, r3
                subo    r5, r3, r3
                addo    r6, r3, r3
                and     0xF, r3, r3
                ldt     flt_8CED4[r3*16], r8
                ldt     0x5C(g6), r4
                addr    r8, r5, r5
                mulr    r9, r4, r4
                mulr    r10, r6, r6
                lda     0x3F800000, r3
                mulr    r3, r5, r5
                b       loc_8CCCC
# ---------------------------------------------------------------------------
loc_8CCA4:                              # CODE XREF: ROM:0008CC34↑j
                ldt     0x5C(g6), r4
                lda     0x3E851EB8, r13
                addr    r13, r5, r5
                lda     0xBDCCCCCD, r13
                mulr    r13, r4, r4
                lda     0xBDCCCCCD, r13
                mulr    r13, r6, r6
loc_8CCCC:                              # CODE XREF: ROM:0008CCA0↑j
                stt     r4, 0x5C(g6)
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                mov     1, r15
                stib    r15, 0xC(g6)
                call    play_sd_cork_1b
                b       loc_8CED0
# ---------------------------------------------------------------------------
loc_8CCF8:                              # CODE XREF: ROM:0008CC28↑j
                ldos    0x2C(g6), g0
                addo    1, g0, g0
                stos    g0, 0x2C(g6)
                call    sub_8AE04
                shlo    8, 0x13, r13
                ldis    0x74(g6), r14
                addi    r13, r14, r15
                stis    r15, 0x74(g6)
                call    sub_8AE48
                call    sub_8AF50
                call    sub_8AFB4
                bbc     0, g0, loc_8CD50
                ldt     0x44(g6), r8
                stt     r8, 0x50A314
                ld      0x6C(g6), r15
                st      r15, 0x50A364
                call    sub_3464C
                ld      0x50A368, r15
                cmpobe  0, r15, loc_8CEC4
loc_8CD50:                              # CODE XREF: ROM:0008CD24↑j
                bbs     4, g0, loc_8CD58
                bbc     0, g1, loc_8CED0
loc_8CD58:                              # CODE XREF: ROM:loc_8CD50↑j
                call    play_sd_punch_o
loc_8CD5C:                              # CODE XREF: ROM:0008CC3C↑j
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                clrbit  1, r15, r15
                setbit  6, r15, r15
                setbit  7, r15, r15
                st      r15, 0x0(g6)
                mov     0, g0
                stos    g0, 0x2C(g6)
                call    loc_8AE0C
                mov     2, r15
                stib    r15, 0xC(g6)
                b       loc_8CED0
# ---------------------------------------------------------------------------
loc_8CD8C:                              # DATA XREF: ROM:0008CC1C↑o
                ld      0x28(g6), g0
                call    sub_8AE04
                call    sub_8AEC8
                call    sub_8AFB4
                ldis    0x76(g6), r13
                ldis    0x70(g6), r14
                addi    r13, r14, r15
                stis    r15, 0x70(g6)
                bbc     1, g0, loc_8CDBC
                ld      0x0(g6), r15
                setbit  0, r15, r15
                st      r15, 0x0(g6)
loc_8CDBC:                              # CODE XREF: ROM:0008CDAC↑j
                bbc     0, g0, loc_8CDE8
                ldt     0x44(g6), r8
                stt     r8, 0x50A314
                ld      0x6C(g6), r15
                st      r15, 0x50A364
                call    sub_3464C
                ld      0x50A368, r15
                cmpobe  0, r15, loc_8CEC4
loc_8CDE8:                              # CODE XREF: ROM:loc_8CDBC↑j
                ldos    0x36(g6), r14
                cmpobe  0, r14, loc_8CE0C
                ld      0x28(g6), r3
                and     1, r3, r3
                shlo    9, r3, r3
                ld      0x0(g6), r4
                clrbit  9, r4, r4
                or      r3, r4, r4
                st      r4, 0x0(g6)
loc_8CE0C:                              # CODE XREF: ROM:0008CDEC↑j
                ldos    0x36(g6), r14
                cmpobl  2, r14, loc_8CE28
                bbc     0, g1, loc_8CED0
                ldis    0x76(g6), r4
                subi    r4, 0, r4
                stis    r4, 0x76(g6)
                b       loc_8CE70
# ---------------------------------------------------------------------------
loc_8CE28:                              # CODE XREF: ROM:0008CE10↑j
                mov     0, r15
                stis    r15, 0x76(g6)
                ldis    0x70(g6), r4
                lda     0xB801717, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0x3F333333, r13
                mulr    r13, r4, r4
                lda     0xC001818, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                stis    r4, 0x70(g6)
                bbc     0, g1, loc_8CED0
loc_8CE70:                              # CODE XREF: ROM:0008CE24↑j
                lda     0x3F75C28F, r13
                ld      0x5C(g6), r14
                mulr    r13, r14, r15
                st      r15, 0x5C(g6)
                lda     0x3F75C28F, r13
                ld      0x64(g6), r14
                mulr    r13, r14, r15
                st      r15, 0x64(g6)
                ldos    0x36(g6), r14
                cmpobl  6, r14, loc_8CEC4
                b       loc_8CED0
# ---------------------------------------------------------------------------
loc_8CEA4:                              # DATA XREF: ROM:0008CC20↑o
                ldos    0x2C(g6), g0
                addo    1, g0, g0
                stos    g0, 0x2C(g6)
                ld      0x14(g6), r3
                ld      0x0(r3), r4
                cmpoble r4, g0, loc_8CEC4
                call    loc_8AE0C
                b       loc_8CED0
# ---------------------------------------------------------------------------
loc_8CEC4:                              # CODE XREF: ROM:0008CD4C↑j
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8CED0:                              # CODE XREF: ROM:0008CCF4↑j
                ret
# ---------------------------------------------------------------------------
flt_8CED4:      .float 0.46000001       # DATA XREF: ROM:0008CC7C↑r
                .float -1.8
                .float -1.2
                .float 0.0
                .float 0.66000003
                .float -1.4
                .float -1.6
                .float 0.0
                .float 0.46000001
                .float -1.8
                .float -1.5
                .float 0.0
                .float 0.56
                .float -1.8
                .float -1.6
                .float 0.0
                .float 0.75999999
                .float -1.7
                .float -1.1
                .float 0.0
                .float 0.25999999
                .float -1.4
                .float 1.6
                .float 0.0
                .float 0.66000003
                .float 1.2
                .float -1.6
                .float 0.0
                .float 0.38
                .float -1.0
                .float 1.2
                .float 0.0
                .float 0.47
                .float 1.2
                .float -1.3
                .float 0.0
                .float 0.56
                .float 1.7
                .float -1.6
                .float 0.0
                .float -0.95999998
                .float -1.1
                .float -1.6
                .float 0.0
                .float 0.75999999
                .float -1.8
                .float 0.89999998
                .float 0.0
                .float 0.95999998
                .float -1.1
                .float -1.9
                .float 0.0
                .float 0.46000001
                .float 1.3
                .float -1.6
                .float 0.0
                .float 0.75999999
                .float -1.2
                .float -1.2
                .float 0.0
                .float 0.95999998
                .float -1.0
                .float 1.1
                .float 0.0
# ---------------------------------------------------------------------------
loc_8CFD4:                              # DATA XREF: ROM:fang_hyper_cork↓o
                mov     2, r15
                stis    r15, draw_particle # Value between 0 - 10
                ldt     0x44(g6), r4
                stt     r4, 0x50A3FC
                mov     0, g0
                call    sub_8AE04
                ld      0x20(g6), r3
                ldt     0x1F4(r3), r8
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                ldis    0x72(g6), r4
                lda     0xFFFF, r13
                and     r13, r3, r3
                lda     0xFFFF, r13
                and     r13, r4, r4
                subo    r3, r4, r12
                shlo    0xC, 1, r13
                addo    r12, r13, r12
                shlo    0xD, 1, r13
                cmpobg  r13, r12, loc_8D050
                mov     r4, r3
loc_8D050:                              # CODE XREF: ROM:0008D048↑j
                ldis    0x8A(g6), r4
                addi    r3, r4, r3
                lda     0x3E4CCCCD, r6
                lda     0x12002424, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r4
                lda     0x12802525, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r5
                notbit  0x1F, r4, r4
                st      r4, 0x5C(g6)
                st      r5, 0x64(g6)
                stis    r3, 0x72(g6)
                shlo    8, 0xF, r15
                stis    r15, 0x76(g6)
                lda     0xBE99999A, r15
                st      r15, 0x9C(g6)
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                setbit  0x13, r15, r15
                st      r15, 0x0(g6)
                lda     0x3F333333, r15
                st      r15, 0x6C(g6)
                call    sub_8AE48
                call    sub_8AFB4
                and     0x12, g0, r3
                cmpobe  0, r3, loc_8D118
                call    play_sd_punch_o
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                clrbit  1, r15, r15
                setbit  6, r15, r15
                setbit  7, r15, r15
                st      r15, 0x0(g6)
                mov     0, g0
                stos    g0, 0x2C(g6)
                call    loc_8AE0C
                mov     2, r15
                stib    r15, 0xC(g6)
loc_8D118:                              # CODE XREF: ROM:0008D0E4↑j
                lda     loc_8D128, r15
                st      r15, 8(g6)
                ret
# ---------------------------------------------------------------------------
loc_8D128:                              # DATA XREF: ROM:loc_8D118↑o
                ldob    0xC(g6), r3
                ld      off_8D13C[r3*4], r5
                callx   (r5)
                ret
# ---------------------------------------------------------------------------
off_8D13C:      .long loc_8D148         # DATA XREF: ROM:0008D12C↑r
                .long loc_8CD8C
                .long loc_8CEA4
# ---------------------------------------------------------------------------
loc_8D148:                              # DATA XREF: ROM:off_8D13C↑o
                ld      0x0(g6), r15
                bbc     5, r15, loc_8CCF8
                ld      0x20(g6), r3
                ld      0x1A4(r3), r15
                bbs     0xD, r15, loc_8CCA4
                ld      0x1A4(r3), r15
                bbs     2, r15, loc_8CD5C
                b       loc_8CD5C
# ---------------------------------------------------------------------------
                ldt     0x44(g6), r4
                ld      0x28(g6), r3
                addo    g6, r3, r3
                shro    4, g6, r7
                addo    r7, r3, r3
                shro    8, g6, r7
                addo    r7, r3, r3
                shro    0xC, g6, r7
                addo    r7, r3, r3
                subo    r4, r3, r3
                subo    r5, r3, r3
                addo    r6, r3, r3
                and     0xF, r3, r3
                ldt     flt_8CED4[r3*16], r8
                ldt     0x5C(g6), r4
                addr    r8, r5, r5
                mulr    r9, r4, r4
                mulr    r10, r6, r6
                lda     0x3F800000, r3
                mulr    r3, r5, r5
                b       loc_8CCCC
# ---------------------------------------------------------------------------
loc_8D1C4:                              # DATA XREF: ROM:bean_bomb_roll↓o
                ld      0x1C(g6), r12
                ld      0x20(g6), r5
                ld      0x5B8(r12), r15
                bbc     0, r15, loc_8D1D8
                mov     r12, r5
loc_8D1D8:                              # CODE XREF: ROM:0008D1D0↑j
                ld      0x1F4(r5), r4
                ld      0x1FC(r5), r6
                ld      0x44(g6), r8
                ld      0x4C(g6), r10
                lda     0x15802B2B, r15
                st      r15, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                ld      stage_x, r13
                ld      0x1A4(r12), r15
                bbc     0x16, r15, loc_8D220
                lda     0x40400000, r13
loc_8D220:                              # CODE XREF: ROM:0008D214↑j
                cmpr    r11, r13
                ble     loc_8D24C
                subr    r4, r8, r4
                subr    r6, r10, r6
                divr    r11, r13, r11
                mulr    r11, r4, r4
                mulr    r11, r6, r6
                subr    r4, r8, r8
                subr    r6, r10, r10
                ld      0x1F8(r5), r9
                b       loc_8D250
# ---------------------------------------------------------------------------
loc_8D24C:                              # CODE XREF: ROM:0008D224↑j
                ldt     0x1F4(r5), r8
loc_8D250:                              # CODE XREF: ROM:0008D248↑j
                ld      0x94(g6), r3
                ld      0x98(g6), r11
                ldis    0x5B6(r12), r12
                lda     0x2D805B5B, r15
                st      r15, (g11)[g12*1]
                st      r12, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r11, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                ld      (g11)[g12*1], r11
                addr    r3, r8, r8
                addr    r11, r10, r10
                ldt     0x44(g6), r4
                stt     r8, 0x50(g6)
                mov     0, r15
                st      r15, 0x54(g6)
                ldob    0x89(g6), r3
                cmpobe  0, r3, loc_8D32C
                lda     0xB801717, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                ld      (g11)[g12*1], r3
                subr    r4, r8, r8
                subr    r6, r10, r10
                divr    r3, r8, r8
                divr    r3, r10, r10
                st      r8, 0x5C(g6)
                st      r10, 0x64(g6)
                ldob    0x89(g6), r6
                lda     0xB801717, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                ld      (g11)[g12*1], r6
                lda     displacement, r13
                ld      0x50A000, r14
                subr    r13, r14, r3
                lda     0x3F800000, r13
                addr    r13, r6, r4
                mulr    r3, r4, r3
                lda     0x3F000000, r13
                mulr    r13, r3, r3
                ld      0x48(g6), r13
                lda     displacement, r14
                subr    r13, r14, r4
                divr    r6, r4, r4
                addr    r3, r4, r15
                st      r15, 0x60(g6)
loc_8D32C:                              # CODE XREF: ROM:0008D298↑j
                call    play_sd_fall_9
                mov     0, g0
                call    sub_8AE04
                ld      0x1C(g6), r3
                shlo    9, 3, r15
                stis    r15, 0x70(g6)
                ldis    0x26(r3), r15
                stis    r15, 0x72(g6)
                shlo    9, 9, r15
                stis    r15, 0x74(g6)
                lda     0xB4, r15
                stis    r15, 0x2E(g6)
                lda     0x3B83126F, r15
                st      r15, 0x94(g6)
                lda     0x3A83126F, r15
                st      r15, 0x98(g6)
                lda     0xBE99999A, r15
                st      r15, 0x9C(g6)
                mov     4, r15
                stis    r15, 0x8C(g6)
                shlo    0xE, 1, r15
                stis    r15, 0x76(g6)
                mov     0, r15
                stis    r15, 0x78(g6)
                mov     0, r15
                stis    r15, 0x7A(g6)
                lda     0x6AE, r15
                stis    r15, 0xA0(g6)
                lda     loc_8D3C4, r15
                st      r15, 8(g6)
                ret
# ---------------------------------------------------------------------------
loc_8D3B8:                              # DATA XREF: ROM:bean_bomb_roll_1↓o
                ld      0x1C(g6), r12
                mov     r12, r5
                b       loc_8D1D8
# ---------------------------------------------------------------------------
loc_8D3C4:                              # DATA XREF: ROM:0008D3A8↑o
                ldob    0xC(g6), r3
                ld      off_8D3D8[r3*4], r5
                callx   (r5)
                ret
# ---------------------------------------------------------------------------
off_8D3D8:      .long loc_8D3E4         # DATA XREF: ROM:0008D3C8↑r
                .long loc_8D470
                .long loc_8D560
# ---------------------------------------------------------------------------
loc_8D3E4:                              # DATA XREF: ROM:off_8D3D8↑o
                ld      0x0(g6), r15
                bbs     1, r15, loc_8D510
                ld      0x0(g6), r15
                bbs     5, r15, loc_8D510
                ldos    0x2E(g6), r9
                subo    1, r9, r9
                stos    r9, 0x2E(g6)
                cmpibg  0, r9, loc_8D444
                mov     r9, g0
                call    sub_8AE04
                call    sub_8D590
                call    sub_8AEC8
                call    sub_8AFB4
                ldob    0xA2(g6), r14
                subi    1, r14, r15
                stob    r15, 0xA2(g6)
                bbc     0, g1, loc_8D58C
                ld      0x0(g6), r15
                setbit  2, r15, r15
                st      r15, 0x0(g6)
                ldis    0, r15
                stis    r15, 0x8C(g6)
                ld      0x0(g6), r15
                bbc     0x10, r15, loc_8D460
loc_8D444:                              # CODE XREF: ROM:0008D400↑j
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                ld      0x90(g6), r15
                st      r15, 0x6C(g6)
                call    sub_8AE48
                b       loc_8D58C
# ---------------------------------------------------------------------------
loc_8D460:                              # CODE XREF: ROM:0008D440↑j
                call    play_sd_rope_3
                mov     1, r15
                stib    r15, 0xC(g6)
                b       loc_8D58C
# ---------------------------------------------------------------------------
loc_8D470:                              # DATA XREF: ROM:0008D3DC↑o
                ld      0x0(g6), r15
                bbs     1, r15, loc_8D510
                ld      0x0(g6), r15
                bbs     5, r15, loc_8D510
                ldos    0x2E(g6), r9
                subo    1, r9, r9
                stos    r9, 0x2E(g6)
                cmpibg  0, r9, loc_8D444
                mov     r9, g0
                call    sub_8AE04
                call    sub_8D590
                call    sub_8AE48
                lda     0x3DCCCCCD, r13
                mulr    r13, g0, r11
                mulr    r13, g1, r12
                or      r11, r12, r13
                ldt     0x5C(g6), r8
                addr    r11, r8, r8
                addr    r12, r10, r10
                cmpobe  0, r13, loc_8D4D4
                lda     0xBF000000, r13
                mulr    r13, r9, r9
                stt     r8, 0x5C(g6)
loc_8D4D4:                              # CODE XREF: ROM:0008D4C0↑j
                call    sub_8AEC8
                bbc     0, g1, loc_8D4EC
                bbs     1, g1, loc_8D4EC
                ldos    0x36(g6), r14
                cmpobl  2, r14, loc_8D4EC
                call    play_sd_rope_3
loc_8D4EC:                              # CODE XREF: ROM:0008D4D8↑j
                ld      0x0(g6), r15
                bbc     0x11, r15, loc_8D4F8
                call    sub_8B070
loc_8D4F8:                              # CODE XREF: ROM:0008D4F0↑j
                call    sub_8AFB4
                bbc     1, g0, loc_8D58C
                ld      0x0(g6), r15
                setbit  0, r15, r15
                st      r15, 0x0(g6)
                b       loc_8D58C
# ---------------------------------------------------------------------------
loc_8D510:                              # CODE XREF: ROM:0008D3E8↑j
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                setbit  6, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                setbit  7, r15, r15
                st      r15, 0x0(g6)
                mov     0, g0
                stos    g0, 0x2C(g6)
                stos    g0, 0xA0(g6)
                call    loc_8AE0C
                call    play_sd_punch_e
                mov     2, r15
                stib    r15, 0xC(g6)
                b       loc_8D58C
# ---------------------------------------------------------------------------
loc_8D560:                              # DATA XREF: ROM:0008D3E0↑o
                ldos    0x2C(g6), g0
                addo    1, g0, g0
                stos    g0, 0x2C(g6)
                ld      0x14(g6), r3
                ld      0x0(r3), r4
                cmpoble r4, g0, loc_8D580
                call    loc_8AE0C
                b       loc_8D58C
# ---------------------------------------------------------------------------
loc_8D580:                              # CODE XREF: ROM:0008D574↑j
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8D58C:                              # CODE XREF: ROM:0008D424↑j
                ret
# =============== S U B R O U T I N E =======================================
sub_8D590:                              # CODE XREF: ROM:0008D40C↑p
                ld      0x18(g6), r3
                ld      0x0(r3), r4
                remo    r4, g0, r5
                addo    4, r3, r3
                mulo    0x10, r5, r5
                addo    r3, r5, r5
                ldis    8(r5), r15
                stis    r15, 0xA0(g6)
                ld      4(r5), r15
                st      r15, 0x98(g6)
                ret
# End of function sub_8D590
# =============== S U B R O U T I N E =======================================
_uk_flying_hands_sub:                   # DATA XREF: ROM:_uk_flying_hands↓o
                mov     0, g0
                call    sub_8AE04
                ld      0x1C(g6), r3
                ldt     0x1F4(r3), r4
                addr    r4, r6, r7
                addo    r7, g6, r7
                and     7, r7, r7
                ldt     flying_hand_floats[r7*16], r4
                stt     r4, 0x44(g6)
                lda     0x3B83126F, r15
                st      r15, 0x94(g6)
                lda     0x3A83126F, r15
                st      r15, 0x98(g6)
                shlo    0xE, 1, r15
                stis    r15, 0x70(g6)
                lda     displacement, r15
                st      r15, 0x5C(g6)
                lda     displacement, r15
                st      r15, 0x64(g6)
                lda     0xBD23D70A, r15
                st      r15, 0x60(g6)
                ld      0x0(g6), r15
                setbit  7, r15, r15
                st      r15, 0x0(g6)
                lda     0xBF000000, r15
                st      r15, 0x9C(g6)
                lda     sub_8D6D0, r15
                st      r15, 8(g6)
                ret
# End of function _uk_flying_hands_sub
# ---------------------------------------------------------------------------
flying_hand_floats:.float 1.0           # DATA XREF: _uk_flying_hands_sub+1C↑r
                .float 6.0
                .float 0.0
                .float 0.0
                .float 1.0
                .float 6.0
                .float 1.0
                .float 0.0
                .float -3.0
                .float 8.0
                .float 7.0
                .float 0.0
                .float 5.0
                .float 7.0
                .float -7.0
                .float 0.0
                .float 1.0
                .float 4.0
                .float 6.0
                .float 0.0
                .float 4.0
                .float 6.0
                .float -10.0
                .float 0.0
                .float 2.0
                .float 9.0
                .float -4.0
                .float 0.0
                .float -10.0
                .float 6.0
                .float 9.0
                .float 0.0
# =============== S U B R O U T I N E =======================================
sub_8D6D0:                              # DATA XREF: _uk_flying_hands_sub+84↑o
                ldob    0xC(g6), r3
                ld      off_8D6E4[r3*4], r5
                callx   (r5)
                ret
# End of function sub_8D6D0
# ---------------------------------------------------------------------------
off_8D6E4:      .long sub_8D6F4         # DATA XREF: sub_8D6D0+4↑r
                .long loc_8D734
                .long loc_8D7C4
                .long loc_8D848
# =============== S U B R O U T I N E =======================================
sub_8D6F4:                              # DATA XREF: ROM:off_8D6E4↑o
                ldos    0x2C(g6), g0
                addo    1, g0, g0
                stos    g0, 0x2C(g6)
                ld      0x10(g6), r3
                ld      0x0(r3), r4
                cmpoble r4, g0, loc_8D714
                call    sub_8AE04
                b       loc_8D874
# ---------------------------------------------------------------------------
loc_8D714:                              # CODE XREF: sub_8D6F4+14↑j
                mov     1, r15
                stib    r15, 0xC(g6)
                ld      0x0(g6), r15
                clrbit  7, r15, r15
                st      r15, 0x0(g6)
                ld      0x28(g6), g0
                call    loc_8AE0C
                b       loc_8D874
# ---------------------------------------------------------------------------
loc_8D734:                              # DATA XREF: ROM:0008D6E8↑o
                shlo    7, 5, r13
                ld      0x28(g6), r14
                cmpobl  r13, r14, loc_8D824
                ld      0x28(g6), g0
                call    loc_8AE0C
                ld      0x0(g6), r15
                bbs     5, r15, loc_8D784
                ldos    0x2E(g6), r9
                cmpobne 0, r9, loc_8D768
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                b       loc_8D770
# ---------------------------------------------------------------------------
loc_8D768:                              # CODE XREF: sub_8D6F4+60↑j
                subi    1, r9, r9
                stos    r9, 0x2E(g6)
loc_8D770:                              # CODE XREF: sub_8D6F4+70↑j
                call    sub_8B0F4
                call    sub_8AF50
                call    sub_8AFB4
                call    sub_8AE48
                b       loc_8D874
# ---------------------------------------------------------------------------
loc_8D784:                              # CODE XREF: sub_8D6F4+58↑j
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                shlo    6, 1, r15
                stis    r15, 0x2E(g6)
                lda     0x3CF5C28F, r13
                ld      0x60(g6), r14
                addr    r13, r14, r15
                st      r15, 0x60(g6)
                mov     2, r15
                stib    r15, 0xC(g6)
                b       loc_8D874
# ---------------------------------------------------------------------------
loc_8D7C4:                              # DATA XREF: ROM:0008D6EC↑o
                shlo    7, 5, r13
                ld      0x28(g6), r14
                cmpobl  r13, r14, loc_8D824
                ld      0x28(g6), g0
                call    loc_8AE0C
                lda     0x3BA3D70A, r13
                ld      0x60(g6), r14
                addr    r13, r14, r15
                st      r15, 0x60(g6)
                call    sub_8AF50
                call    sub_8AFB4
                bbc     0, g0, loc_8D820
                ldt     0x44(g6), r8
                stt     r8, 0x50A314
                ld      0x6C(g6), r15
                st      r15, 0x50A364
                call    sub_3464C
                ld      0x50A368, r15
                cmpobe  0, r15, loc_8D868
loc_8D820:                              # CODE XREF: sub_8D6F4+100↑j
                b       loc_8D874
# ---------------------------------------------------------------------------
loc_8D824:                              # CODE XREF: sub_8D6F4+48↑j
                ld      0x0(g6), r15
                setbit  7, r15, r15
                st      r15, 0x0(g6)
                mov     0, g0
                stos    g0, 0x2C(g6)
                call    loc_8AE14
                mov     3, r15
                stib    r15, 0xC(g6)
                b       loc_8D874
# ---------------------------------------------------------------------------
loc_8D848:                              # DATA XREF: ROM:0008D6F0↑o
                ldos    0x2C(g6), g0
                addo    1, g0, g0
                stos    g0, 0x2C(g6)
                ld      0x18(g6), r3
                ld      0x0(r3), r4
                cmpoble r4, g0, loc_8D868
                call    loc_8AE14
                b       loc_8D874
# ---------------------------------------------------------------------------
loc_8D868:                              # CODE XREF: sub_8D6F4+128↑j
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8D874:                              # CODE XREF: sub_8D6F4+1C↑j
                ret
# End of function sub_8D6F4
# =============== S U B R O U T I N E =======================================
_uk_heart_subroutine:                   # DATA XREF: ROM:_uk_heart_thing↓o
                mov     0, g0
                call    sub_8AE04
                ldis    0x72(g6), r3
                ldis    0x8A(g6), r4
                addi    r3, r4, r3
                mov     0, r15
                stis    r15, 0x70(g6)
                lda     0x3BA3D70A, r15
                st      r15, 0x98(g6)
                lda     0x3EAE147B, r15
                st      r15, 0x94(g6)
                ld      0x0(g6), r15
                setbit  7, r15, r15
                st      r15, 0x0(g6)
                lda     0xBE99999A, r15
                st      r15, 0x9C(g6)
                lda     sub_8D8F0, r15
                st      r15, 8(g6)
                ret
# End of function _uk_heart_subroutine
# ---------------------------------------------------------------------------
sonic_amy_var:  .byte 1                 # DATA XREF: ROM:0008D954↓r
                .byte 0
                .byte 1                 # Amy
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
                .byte 0
# =============== S U B R O U T I N E =======================================
sub_8D8F0:                              # DATA XREF: _uk_heart_subroutine+4C↑o
                ldob    0xC(g6), r3
                ld      off_8D904[r3*4], r5
                callx   (r5)
                ret
# End of function sub_8D8F0
# ---------------------------------------------------------------------------
off_8D904:      .long loc_8D918         # DATA XREF: sub_8D8F0+4↑r
                .long loc_8D978
                .long loc_8DB8C
                .long loc_8DBF0
                .long loc_8DC68
# ---------------------------------------------------------------------------
loc_8D918:                              # DATA XREF: ROM:off_8D904↑o
                ldos    0x2C(g6), g0
                addo    1, g0, g0
                stos    g0, 0x2C(g6)
                ld      0x10(g6), r3
                ld      0x0(r3), r4
                cmpoble r4, g0, loc_8D938
                call    sub_8AE04
                b       loc_8DC94
# ---------------------------------------------------------------------------
loc_8D938:                              # CODE XREF: ROM:0008D92C↑j
                mov     1, r15
                stib    r15, 0xC(g6)
                ld      0x0(g6), r15
                clrbit  7, r15, r15
                st      r15, 0x0(g6)
                ld      0x20(g6), r3
                ldob    0x1B1(r3), r3
                ldob    sonic_amy_var[r3], r14
                cmpobne 0, r14, loc_8D96C
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
loc_8D96C:                              # CODE XREF: ROM:0008D95C↑j
                ld      0x28(g6), g0
                call    loc_8AE0C
                b       loc_8DC94
# ---------------------------------------------------------------------------
loc_8D978:                              # DATA XREF: ROM:0008D908↑o
                ld      0x28(g6), g0
                call    loc_8AE0C
                ldt     0x44(g6), r4
                ld      0x20(g6), r3
                ldt     0x20C(g6), r8
                lda     0x17802F2F, r15
                st      r15, (g11)[g12*1]
                st      r6, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r4, (g11)[g12*1]
                ld      (g11)[g12*1], r11
                stis    r11, 0x72(g6)
                shlo    6, 3, r13
                ld      0x28(g6), r14
                cmpibl  r13, r14, loc_8DB50
                ld      0x0(g6), r15
                bbs     5, r15, loc_8DB50
                ldt     0x44(g6), r4
                ld      0x54(g6), r13
                subr    r13, r5, r5
                ldos    0x2E(g6), r3
                shlo    0xA, 3, r13
                addi    r13, r3, r3
                stos    r3, 0x2E(g6)
                lda     0x3F800000, r14
                lda     0x12002424, r15
                st      r15, (g11)[g12*1]
                st      r3, (g11)[g12*1]
                st      r14, (g11)[g12*1]
                ld      (g11)[g12*1], r7
                st      r7, 0x54(g6)
                ld      0x20(g6), r3
                ldt     0x20C(r3), r8
                subr    r4, r8, r8
                subr    r5, r9, r9
                subr    r6, r10, r10
                lda     0x18003030, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                ld      0x94(g6), r11
                mulr    r11, r8, r8
                mulr    r11, r9, r9
                mulr    r11, r10, r10
                stt     r8, 0x5C(g6)
                addr    r8, r4, r4
                addr    r9, r5, r5
                addr    r10, r6, r6
                addr    r7, r5, r5
                stt     r4, 0x44(g6)
                call    sub_8AE48
                call    sub_8B194
                bbc     0, g0, loc_8DC94
                ld      0x20(g6), r3
                ldob    0x1B1(r3), r4
                ldob    sonic_amy_var[r4], r14
                cmpobne 0, r14, if_sonic_or_amy # if Sonic or Amy branch
                lda     0x400FE000, r13
                ld      0x1A4(r3), r14
                and     r13, r14, r4
                cmpobne 0, r4, loc_8DB00
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                b       loc_8DC94
# ---------------------------------------------------------------------------
if_sonic_or_amy:                        # CODE XREF: ROM:0008DA80↑j
                mov     0, r15
                stis    r15, 0x36(g6)
                ldt     0x5C(g6), r4
                lda     0x3E851EB8, r13
                addr    r13, r5, r5
                lda     0xBDCCCCCD, r13
                mulr    r13, r4, r4
                lda     0xBDCCCCCD, r13
                mulr    r13, r6, r6
                stt     r4, 0x5C(g6)
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                mov     2, r15
                stib    r15, 0xC(g6)
                b       loc_8DC94
# ---------------------------------------------------------------------------
loc_8DB00:                              # CODE XREF: ROM:0008DA94↑j
                ldt     0x5C(g6), r4
                lda     0x3E851EB8, r13
                addr    r13, r5, r5
                lda     0xBDCCCCCD, r13
                mulr    r13, r4, r4
                lda     0xBDCCCCCD, r13
                mulr    r13, r6, r6
                stt     r4, 0x5C(g6)
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                mov     3, r15
                stib    r15, 0xC(g6)
                b       loc_8DC94
# ---------------------------------------------------------------------------
loc_8DB50:                              # CODE XREF: ROM:0008D9B8↑j
                ld      0x0(g6), r15
                setbit  7, r15, r15
                st      r15, 0x0(g6)
                mov     0, g0
                st      g0, 0x2C(g6)
                call    loc_8AE14
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                mov     4, r15
                stib    r15, 0xC(g6)
                b       loc_8DC94
# ---------------------------------------------------------------------------
loc_8DB8C:                              # DATA XREF: ROM:0008D90C↑o
                ld      0x28(g6), g0
                call    loc_8AE0C
                shlo    9, 7, r13
                ldis    0x70(g6), r14
                addi    r13, r14, r15
                stis    r15, 0x70(g6)
                shlo    6, 3, r13
                ld      0x28(g6), r14
                cmpibl  r13, r14, loc_8DB50
                call    sub_8AEC8
                call    sub_8AFB4
                bbc     0, g1, loc_8DC94
                lda     0x3F19999A, r13
                ld      0x5C(g6), r14
                mulr    r13, r14, r15
                st      r15, 0x5C(g6)
                lda     0x3F19999A, r13
                ld      0x64(g6), r14
                mulr    r13, r14, r15
                st      r15, 0x64(g6)
                ldos    0x36(g6), r14
                cmpobne 0, r14, loc_8DB50
                b       loc_8DC94
# ---------------------------------------------------------------------------
loc_8DBF0:                              # DATA XREF: ROM:0008D910↑o
                ld      0x28(g6), g0
                call    loc_8AE0C
                ld      0x98(g6), r13
                ld      0x60(g6), r14
                addr    r13, r14, r15
                st      r15, 0x60(g6)
                call    sub_8AF50
                call    sub_8AFB4
                lda     0x3F75C28F, r13
                ld      0x5C(g6), r14
                mulr    r13, r14, r15
                st      r15, 0x5C(g6)
                lda     0x3F75C28F, r13
                ld      0x64(g6), r14
                mulr    r13, r14, r15
                st      r15, 0x64(g6)
                bbc     0, g0, loc_8DC64
                ldt     0x44(g6), r8
                stt     r8, 0x50A314
                ld      0x6C(g6), r15
                st      r15, 0x50A364
                call    sub_3464C
                ld      0x50A368, r15
                cmpobe  0, r15, loc_8DC88
loc_8DC64:                              # CODE XREF: ROM:0008DC38↑j
                b       loc_8DC94
# ---------------------------------------------------------------------------
loc_8DC68:                              # DATA XREF: ROM:0008D914↑o
                ldos    0x2C(g6), g0
                addo    1, g0, g0
                stos    g0, 0x2C(g6)
                ld      0x18(g6), r3
                ld      0x0(r3), r4
                cmpoble r4, g0, loc_8DC88
                call    loc_8AE14
                b       loc_8DC94
# ---------------------------------------------------------------------------
loc_8DC88:                              # CODE XREF: ROM:0008DC60↑j
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8DC94:                              # CODE XREF: ROM:0008D934↑j
                ret
# ---------------------------------------------------------------------------
loc_8DC98:                              # DATA XREF: ROM:bomb_in_place_silly_noise↓o
                mov     0, g0
                call    sub_8AE04
                call    play_sd_up_2
                shlo    7, 1, r15
                stis    r15, 0x2E(g6)
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                lda     0x6AE, r15
                stis    r15, 0xA0(g6)
                lda     0x3F800000, r15
                st      r15, 0x90(g6)
                lda     loc_8DCDC, r15
                st      r15, 8(g6)
                ret
# ---------------------------------------------------------------------------
loc_8DCDC:                              # DATA XREF: ROM:0008DCCC↑o
                ldob    0xC(g6), r3
                ld      off_8DCF0[r3*4], r5
                callx   (r5)
                ret
# ---------------------------------------------------------------------------
off_8DCF0:      .long loc_8DCF8         # DATA XREF: ROM:0008DCE0↑r
                .long loc_8DD78
# ---------------------------------------------------------------------------
loc_8DCF8:                              # DATA XREF: ROM:off_8DCF0↑o
                ld      0x0(g6), r15
                bbs     5, r15, loc_8DD28
                ldos    0x2E(g6), r9
                subo    1, r9, r9
                stos    r9, 0x2E(g6)
                cmpibg  0, r9, loc_8DD28
                mov     r9, g0
                call    sub_8AE04
                call    sub_8D590
                call    sub_8AF50
                call    sub_8AE48
                b       loc_8DDA4
# ---------------------------------------------------------------------------
loc_8DD28:                              # CODE XREF: ROM:0008DCFC↑j
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                setbit  6, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                setbit  7, r15, r15
                st      r15, 0x0(g6)
                mov     0, g0
                stos    g0, 0x2C(g6)
                stos    g0, 0xA0(g6)
                call    loc_8AE0C
                call    play_sd_punch_e
                mov     1, r15
                stib    r15, 0xC(g6)
                b       loc_8DDA4
# ---------------------------------------------------------------------------
loc_8DD78:                              # DATA XREF: ROM:0008DCF4↑o
                ldos    0x2C(g6), g0
                addo    1, g0, g0
                stos    g0, 0x2C(g6)
                ld      0x14(g6), r3
                ld      0x0(r3), r4
                cmpoble r4, g0, loc_8DD98
                call    loc_8AE0C
                b       loc_8DDA4
# ---------------------------------------------------------------------------
loc_8DD98:                              # CODE XREF: ROM:0008DD8C↑j
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8DDA4:                              # CODE XREF: ROM:0008DD24↑j
                ret
# ---------------------------------------------------------------------------
loc_8DDA8:                              # DATA XREF: ROM:fast_bomb_projectile↓o
                mov     0, g0
                call    sub_8AE04
                call    play_sd_double_punch
                mov     2, r15
                stis    r15, draw_particle # Value between 0 - 10
                ldt     0x44(g6), r4
                stt     r4, 0x50A3FC
                ld      0x20(g6), r3
                ldt     0x1F4(r3), r8
                lda     displacement, r9
                subr    r4, r8, r8
                subr    r5, r9, r9
                subr    r6, r10, r10
                lda     0x18003030, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x3E99999A, r3
                mulr    r3, r8, r8
                mulr    r3, r9, r9
                mulr    r3, r10, r10
                mov     0, r9
                stt     r8, 0x5C(g6)
                shlo    9, 3, r15
                stis    r15, 0x70(g6)
                shlo    9, 9, r15
                stis    r15, 0x74(g6)
                shlo    0xA, 5, r15
                stis    r15, 0x76(g6)
                lda     0x6AE, r15
                stis    r15, 0xA0(g6)
                addo    0x1F, 0x1D, r15
                stis    r15, 0x2E(g6)
                lda     0x38D1B717, r15
                st      r15, 0x94(g6)
                lda     0xBE99999A, r15
                st      r15, 0x9C(g6)
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                lda     loc_8DE84, r15
                st      r15, 8(g6)
                ret
# ---------------------------------------------------------------------------
loc_8DE84:                              # DATA XREF: ROM:0008DE74↑o
                ldob    0xC(g6), r3
                ld      off_8DE98[r3*4], r5
                callx   (r5)
                ret
# ---------------------------------------------------------------------------
off_8DE98:      .long loc_8DEA4         # DATA XREF: ROM:0008DE88↑r
                .long loc_8E02C
                .long loc_8E0BC
# ---------------------------------------------------------------------------
loc_8DEA4:                              # DATA XREF: ROM:off_8DE98↑o
                ld      0x0(g6), r15
                bbc     5, r15, loc_8DF80
                ld      0x20(g6), r3
                ld      0x1A4(r3), r15
                bbs     0xD, r15, loc_8DF24
                ld      0x1A4(r3), r15
                bbs     2, r15, loc_8DFF4
                ld      0x70C(r3), r15
                bbc     0x19, r15, loc_8DFF4
                ldt     0x44(g6), r4
                ld      0x28(g6), r3
                addo    g6, r3, r3
                shro    4, g6, r7
                addo    r7, r3, r3
                shro    8, g6, r7
                addo    r7, r3, r3
                shro    0xC, g6, r7
                addo    r7, r3, r3
                subo    r4, r3, r3
                subo    r5, r3, r3
                addo    r6, r3, r3
                and     0xF, r3, r3
                ldt     0x8CED4[r3*16], r8
                ldt     0x5C(g6), r4
                addr    r8, r5, r5
                mulr    r9, r4, r4
                mulr    r10, r6, r6
                lda     0x3F800000, r3
                mulr    r3, r5, r5
                b       loc_8DF54
# ---------------------------------------------------------------------------
loc_8DF24:                              # CODE XREF: ROM:0008DEB4↑j
                mov     0, r15
                stis    r15, 0x36(g6)
                ldt     0x5C(g6), r4
                lda     0x3E851EB8, r13
                addr    r13, r5, r5
                lda     0xBDCCCCCD, r13
                mulr    r13, r4, r4
                lda     0xBDCCCCCD, r13
                mulr    r13, r6, r6
loc_8DF54:                              # CODE XREF: ROM:0008DF20↑j
                stt     r4, 0x5C(g6)
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                mov     1, r15
                stib    r15, 0xC(g6)
                call    play_sd_cork_1b
                b       loc_8E0F8
# ---------------------------------------------------------------------------
loc_8DF80:                              # CODE XREF: ROM:0008DEA8↑j
                ldos    0x2C(g6), g0
                addo    1, g0, g0
                stos    g0, 0x2C(g6)
                call    sub_8AE04
                call    sub_8D590
                call    sub_8AE48
                ld      0x94(g6), r13
                ld      0x60(g6), r14
                addr    r13, r14, r15
                st      r15, 0x60(g6)
                ldis    0x76(g6), r13
                ldis    0x70(g6), r14
                addi    r13, r14, r15
                stis    r15, 0x70(g6)
                call    sub_8AF50
                call    sub_8AFB4
                bbc     0, g0, loc_8DFEC
                ldt     0x44(g6), r8
                stt     r8, 0x50A314
                ld      0x6C(g6), r15
                st      r15, 0x50A364
                call    sub_3464C
                ld      0x50A368, r15
                cmpobe  0, r15, loc_8E0EC
loc_8DFEC:                              # CODE XREF: ROM:0008DFC0↑j
                bbs     4, g0, loc_8DFF4
                b       loc_8E0F8
# ---------------------------------------------------------------------------
loc_8DFF4:                              # CODE XREF: ROM:0008DEBC↑j
                call    play_sd_punch_o
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                setbit  4, r15, r15
                clrbit  1, r15, r15
                setbit  6, r15, r15
                setbit  7, r15, r15
                st      r15, 0x0(g6)
                mov     0, g0
                stos    g0, 0x2C(g6)
                call    loc_8AE0C
                mov     2, r15
                stib    r15, 0xC(g6)
                b       loc_8E0F8
# ---------------------------------------------------------------------------
loc_8E02C:                              # DATA XREF: ROM:0008DE9C↑o
                ldos    0x2E(g6), r9
                subo    1, r9, r9
                stos    r9, 0x2E(g6)
                cmpibg  0, r9, loc_8DFF4
                ld      0x28(g6), g0
                call    sub_8AE04
                call    sub_8D590
                call    sub_8AE48
                lda     0x3D4CCCCD, r13
                mulr    r13, g0, r11
                mulr    r13, g1, r12
                or      r11, r12, r13
                ldt     0x5C(g6), r8
                addr    r11, r8, r8
                addr    r12, r10, r10
                cmpobe  0, r13, loc_8E074
                stt     r8, 0x5C(g6)
loc_8E074:                              # CODE XREF: ROM:0008E06C↑j
                call    sub_8AEC8
                call    sub_8AFB4
                bbc     0, g1, loc_8E0B8
                lda     0x3F19999A, r13
                ld      0x5C(g6), r14
                mulr    r13, r14, r15
                st      r15, 0x5C(g6)
                lda     0x3F19999A, r13
                ld      0x64(g6), r14
                mulr    r13, r14, r15
                st      r15, 0x64(g6)
                bbs     1, g1, loc_8E0B8
                ldos    0x36(g6), r14
                cmpobl  1, r14, loc_8E0B8
                call    play_sd_rope_3
loc_8E0B8:                              # CODE XREF: ROM:0008E07C↑j
                b       loc_8E0F8
# ---------------------------------------------------------------------------
loc_8E0BC:                              # DATA XREF: ROM:0008DEA0↑o
                ldos    0x2C(g6), g0
                addo    1, g0, g0
                stos    g0, 0x2C(g6)
                ld      0x14(g6), r3
                ld      0x0(r3), r4
                cmpoble r4, g0, loc_8E0EC
                call    loc_8AE0C
                lda     0x3F800000, r15
                st      r15, 0x6C(g6)
                call    sub_8AE48
                b       loc_8E0F8
# ---------------------------------------------------------------------------
loc_8E0EC:                              # CODE XREF: ROM:0008DFE8↑j
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8E0F8:                              # CODE XREF: ROM:0008DF7C↑j
                ret
# ---------------------------------------------------------------------------
_uk_draws_dash_puffs_rob1:              # DATA XREF: ROM:very_fast_bomb_projectile↓o
                mov     0, g0
                call    sub_8AE04
                mov     2, r15
                stis    r15, draw_particle # Value between 0 - 10
                ldt     0x44(g6), r4
                stt     r4, 0x50A3FC
                ld      0x20(g6), r3
                ldt     0x1F4(r3), r8
                lda     0x3F800000, r7
                subr    r7, r9, r9
                subr    r4, r8, r8
                subr    r5, r9, r9
                subr    r6, r10, r10
                lda     0x18003030, r15
                st      r15, (g11)[g12*1]
                st      r8, (g11)[g12*1]
                st      r9, (g11)[g12*1]
                st      r10, (g11)[g12*1]
                ld      (g11)[g12*1], r8
                ld      (g11)[g12*1], r9
                ld      (g11)[g12*1], r10
                lda     0x3F19999A, r3
                mulr    r3, r8, r8
                mulr    r3, r9, r9
                mulr    r3, r10, r10
                stt     r8, 0x5C(g6)
                shlo    9, 3, r15
                stis    r15, 0x70(g6)
                shlo    9, 9, r15
                stis    r15, 0x74(g6)
                shlo    0xA, 9, r15
                stis    r15, 0x76(g6)
                lda     0x6AE, r15
                stis    r15, 0xA0(g6)
                lda     0xB4, r15
                stis    r15, 0x2E(g6)
                lda     0x3B83126F, r15
                st      r15, 0x94(g6)
                lda     0xBE99999A, r15
                st      r15, 0x9C(g6)
                ld      0x0(g6), r15
                setbit  1, r15, r15
                st      r15, 0x0(g6)
                lda     loc_8E1D4, r15
                st      r15, 8(g6)
                ret
# ---------------------------------------------------------------------------
loc_8E1D4:                              # DATA XREF: ROM:0008E1C4↑o
                ldob    0xC(g6), r3
                ld      off_8E1E8[r3*4], r5
                callx   (r5)
                ret
# ---------------------------------------------------------------------------
off_8E1E8:      .long loc_8E1F4         # DATA XREF: ROM:0008E1D8↑r
                .long loc_8E30C
                .long loc_8E39C
# ---------------------------------------------------------------------------
loc_8E1F4:                              # DATA XREF: ROM:off_8E1E8↑o
                ld      0x0(g6), r15
                bbc     5, r15, loc_8E264
                ld      0x20(g6), r3
                ld      0x1A4(r3), r15
                bbc     0xD, r15, loc_8E2D8
                mov     0, r15
                stis    r15, 0x36(g6)
                ldt     0x5C(g6), r4
                lda     0x3E851EB8, r13
                addr    r13, r5, r5
                lda     0xBDCCCCCD, r13
                mulr    r13, r4, r4
                lda     0xBDCCCCCD, r13
                mulr    r13, r6, r6
                stt     r4, 0x5C(g6)
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                st      r15, 0x0(g6)
                ld      0x0(g6), r15
                clrbit  1, r15, r15
                st      r15, 0x0(g6)
                mov     1, r15
                stib    r15, 0xC(g6)
                call    play_sd_cork_1b
                b       loc_8E3C8
# ---------------------------------------------------------------------------
loc_8E264:                              # CODE XREF: ROM:0008E1F8↑j
                ldos    0x2C(g6), g0
                addo    1, g0, g0
                stos    g0, 0x2C(g6)
                call    sub_8AE04
                call    sub_8D590
                call    sub_8AE48
                ld      0x94(g6), r13
                ld      0x60(g6), r14
                addr    r13, r14, r15
                st      r15, 0x60(g6)
                ldis    0x76(g6), r13
                ldis    0x70(g6), r14
                addi    r13, r14, r15
                stis    r15, 0x70(g6)
                call    sub_8AF50
                call    sub_8AFB4
                bbc     0, g0, loc_8E2D0
                ldt     0x44(g6), r8
                stt     r8, 0x50A314
                ld      0x6C(g6), r15
                st      r15, 0x50A364
                call    sub_3464C
                ld      0x50A368, r15
                cmpobe  0, r15, loc_8E3BC
loc_8E2D0:                              # CODE XREF: ROM:0008E2A4↑j
                bbs     4, g0, loc_8E2D8
                b       loc_8E3C8
# ---------------------------------------------------------------------------
loc_8E2D8:                              # CODE XREF: ROM:0008E204↑j
                call    play_sd_punch_o
                ld      0x0(g6), r15
                clrbit  5, r15, r15
                clrbit  1, r15, r15
                setbit  6, r15, r15
                setbit  7, r15, r15
                st      r15, 0x0(g6)
                mov     0, g0
                stos    g0, 0x2C(g6)
                call    loc_8AE0C
                mov     2, r15
                stib    r15, 0xC(g6)
                b       loc_8E3C8
# ---------------------------------------------------------------------------
loc_8E30C:                              # DATA XREF: ROM:0008E1EC↑o
                ldos    0x2E(g6), r9
                subo    1, r9, r9
                stos    r9, 0x2E(g6)
                cmpibg  0, r9, loc_8E2D8
                ld      0x28(g6), g0
                call    sub_8AE04
                call    sub_8D590
                call    sub_8AE48
                lda     0x3D4CCCCD, r13
                mulr    r13, g0, r11
                mulr    r13, g1, r12
                or      r11, r12, r13
                ldt     0x5C(g6), r8
                addr    r11, r8, r8
                addr    r12, r10, r10
                cmpobe  0, r13, loc_8E354
                stt     r8, 0x5C(g6)
loc_8E354:                              # CODE XREF: ROM:0008E34C↑j
                call    sub_8AEC8
                call    sub_8AFB4
                bbc     0, g1, loc_8E398
                lda     0x3F19999A, r13
                ld      0x5C(g6), r14
                mulr    r13, r14, r15
                st      r15, 0x5C(g6)
                lda     0x3F19999A, r13
                ld      0x64(g6), r14
                mulr    r13, r14, r15
                st      r15, 0x64(g6)
                bbs     1, g1, loc_8E398
                ldos    0x36(g6), r14
                cmpobl  1, r14, loc_8E398
                call    play_sd_rope_3
loc_8E398:                              # CODE XREF: ROM:0008E35C↑j
                b       loc_8E3C8
# ---------------------------------------------------------------------------
loc_8E39C:                              # DATA XREF: ROM:0008E1F0↑o
                ldos    0x2C(g6), g0
                addo    1, g0, g0
                stos    g0, 0x2C(g6)
                ld      0x14(g6), r3
                ld      0x0(r3), r4
                cmpoble r4, g0, loc_8E3BC
                call    loc_8AE0C
                b       loc_8E3C8
# ---------------------------------------------------------------------------
loc_8E3BC:                              # CODE XREF: ROM:0008E2CC↑j
                mov     0, r11
                st      r11, 0x0(g6)
                st      r11, 8(g6)
loc_8E3C8:                              # CODE XREF: ROM:0008E260↑j
                ret
# ---------------------------------------------------------------------------

